2025-03-31 12:46:28,666:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:33,094:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:33,553:INFO:PyCaret TSForecastingExperiment
2025-03-31 12:46:33,553:INFO:Logging name: ts-default-name
2025-03-31 12:46:33,553:INFO:ML Usecase: MLUsecase.TIME_SERIES
2025-03-31 12:46:33,553:INFO:version 3.3.2
2025-03-31 12:46:33,554:INFO:Initializing setup()
2025-03-31 12:46:33,554:INFO:self.USI: e20c
2025-03-31 12:46:33,554:INFO:self._variable_keys: {'html_param', 'data', 'X_test', 'gpu_n_jobs_param', 'all_sps_to_use', 'y_transformed', 'y_train', 'enforce_pi', 'y_test', 'model_engines', 'seed', 'X_test_transformed', 'idx', 'fold_param', 'n_jobs_param', 'log_plots_param', '_available_plots', 'logging_param', 'X', 'X_transformed', 'X_train', 'pipeline', 'exogenous_present', 'strictly_positive', 'index_type', 'memory', '_ml_usecase', 'approach_type', 'gpu_param', 'fh', 'USI', 'exp_id', 'y_test_transformed', 'X_train_transformed', 'significant_sps', 'seasonality_present', 'primary_sp_to_use', 'exp_name_log', 'y_train_transformed', 'enforce_exogenous', 'significant_sps_no_harmonics', 'fold_generator', 'candidate_sps', 'y'}
2025-03-31 12:46:33,554:INFO:Checking environment
2025-03-31 12:46:33,554:INFO:python_version: 3.9.20
2025-03-31 12:46:33,554:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 12:46:33,554:INFO:machine: AMD64
2025-03-31 12:46:33,567:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 12:46:33,574:INFO:Memory: svmem(total=16885276672, available=802250752, percent=95.2, used=16083025920, free=802250752)
2025-03-31 12:46:33,574:INFO:Physical Core: 4
2025-03-31 12:46:33,574:INFO:Logical Core: 8
2025-03-31 12:46:33,574:INFO:Checking libraries
2025-03-31 12:46:33,575:INFO:System:
2025-03-31 12:46:33,575:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 12:46:33,575:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 12:46:33,575:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 12:46:33,575:INFO:PyCaret required dependencies:
2025-03-31 12:46:34,373:INFO:                 pip: 25.0
2025-03-31 12:46:34,373:INFO:          setuptools: 75.8.0
2025-03-31 12:46:34,373:INFO:             pycaret: 3.3.2
2025-03-31 12:46:34,373:INFO:             IPython: 8.15.0
2025-03-31 12:46:34,373:INFO:          ipywidgets: 8.1.5
2025-03-31 12:46:34,373:INFO:                tqdm: 4.67.1
2025-03-31 12:46:34,373:INFO:               numpy: 1.26.4
2025-03-31 12:46:34,373:INFO:              pandas: 2.1.4
2025-03-31 12:46:34,373:INFO:              jinja2: 3.1.5
2025-03-31 12:46:34,373:INFO:               scipy: 1.11.4
2025-03-31 12:46:34,373:INFO:              joblib: 1.3.2
2025-03-31 12:46:34,374:INFO:             sklearn: 1.4.2
2025-03-31 12:46:34,374:INFO:                pyod: 2.0.4
2025-03-31 12:46:34,374:INFO:            imblearn: 0.12.3
2025-03-31 12:46:34,374:INFO:   category_encoders: 2.6.4
2025-03-31 12:46:34,374:INFO:            lightgbm: 4.6.0
2025-03-31 12:46:34,374:INFO:               numba: 0.60.0
2025-03-31 12:46:34,374:INFO:            requests: 2.32.3
2025-03-31 12:46:34,374:INFO:          matplotlib: 3.7.5
2025-03-31 12:46:34,374:INFO:          scikitplot: 0.3.7
2025-03-31 12:46:34,374:INFO:         yellowbrick: 1.5
2025-03-31 12:46:34,374:INFO:              plotly: 5.24.1
2025-03-31 12:46:34,375:INFO:    plotly-resampler: Not installed
2025-03-31 12:46:34,375:INFO:             kaleido: 0.2.1
2025-03-31 12:46:34,375:INFO:           schemdraw: 0.15
2025-03-31 12:46:34,375:INFO:         statsmodels: 0.14.4
2025-03-31 12:46:34,375:INFO:              sktime: 0.26.0
2025-03-31 12:46:34,375:INFO:               tbats: 1.1.3
2025-03-31 12:46:34,375:INFO:            pmdarima: 2.0.4
2025-03-31 12:46:34,375:INFO:              psutil: 5.9.0
2025-03-31 12:46:34,375:INFO:          markupsafe: 3.0.2
2025-03-31 12:46:34,375:INFO:             pickle5: Not installed
2025-03-31 12:46:34,375:INFO:         cloudpickle: 3.0.0
2025-03-31 12:46:34,375:INFO:         deprecation: 2.1.0
2025-03-31 12:46:34,375:INFO:              xxhash: 3.5.0
2025-03-31 12:46:34,375:INFO:           wurlitzer: Not installed
2025-03-31 12:46:34,375:INFO:PyCaret optional dependencies:
2025-03-31 12:46:34,394:INFO:                shap: Not installed
2025-03-31 12:46:34,394:INFO:           interpret: Not installed
2025-03-31 12:46:34,394:INFO:                umap: Not installed
2025-03-31 12:46:34,394:INFO:     ydata_profiling: Not installed
2025-03-31 12:46:34,394:INFO:  explainerdashboard: Not installed
2025-03-31 12:46:34,394:INFO:             autoviz: Not installed
2025-03-31 12:46:34,394:INFO:           fairlearn: Not installed
2025-03-31 12:46:34,394:INFO:          deepchecks: Not installed
2025-03-31 12:46:34,394:INFO:             xgboost: Not installed
2025-03-31 12:46:34,394:INFO:            catboost: Not installed
2025-03-31 12:46:34,394:INFO:              kmodes: Not installed
2025-03-31 12:46:34,394:INFO:             mlxtend: Not installed
2025-03-31 12:46:34,394:INFO:       statsforecast: Not installed
2025-03-31 12:46:34,394:INFO:        tune_sklearn: Not installed
2025-03-31 12:46:34,394:INFO:                 ray: Not installed
2025-03-31 12:46:34,394:INFO:            hyperopt: Not installed
2025-03-31 12:46:34,394:INFO:              optuna: Not installed
2025-03-31 12:46:34,394:INFO:               skopt: Not installed
2025-03-31 12:46:34,394:INFO:              mlflow: Not installed
2025-03-31 12:46:34,394:INFO:              gradio: Not installed
2025-03-31 12:46:34,394:INFO:             fastapi: Not installed
2025-03-31 12:46:34,394:INFO:             uvicorn: Not installed
2025-03-31 12:46:34,394:INFO:              m2cgen: Not installed
2025-03-31 12:46:34,394:INFO:           evidently: Not installed
2025-03-31 12:46:34,394:INFO:               fugue: Not installed
2025-03-31 12:46:34,394:INFO:           streamlit: 1.20.0
2025-03-31 12:46:34,394:INFO:             prophet: Not installed
2025-03-31 12:46:34,394:INFO:None
2025-03-31 12:46:34,396:INFO:Set Forecast Horizon.
2025-03-31 12:46:34,397:INFO:Set up Train-Test Splits.
2025-03-31 12:46:34,429:INFO:Finished creating preprocessing pipeline.
2025-03-31 12:46:34,433:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2025-03-31 12:46:34,433:INFO:Set up Seasonal Period.
2025-03-31 12:46:34,448:INFO:Setting the seasonal component type - 'add' or 'mul'.
2025-03-31 12:46:34,449:INFO:Checking if data is strictly positive.
2025-03-31 12:46:34,535:INFO:Creating final display dataframe.
2025-03-31 12:46:34,550:INFO:Setup Display Container:                                          Description                         Value
0                                         session_id                          7148
1                                             Target  Number of airline passengers
2                                           Approach                    Univariate
3                                Exogenous Variables                   Not Present
4                                Original data shape                      (144, 1)
5                             Transformed data shape                      (144, 1)
6                        Transformed train set shape                      (132, 1)
7                         Transformed test set shape                       (12, 1)
8                           Rows with missing values                          0.0%
9                                     Fold Generator       ExpandingWindowSplitter
10                                       Fold Number                             3
11                       Enforce Prediction Interval                         False
12                   Splits used for hyperparameters                           all
13                   User Defined Seasonal Period(s)                          None
14                           Ignore Seasonality Test                         False
15                        Seasonality Detection Algo                          auto
16                            Max Period to Consider                            60
17                         Seasonal Period(s) Tested          [12, 24, 36, 11, 48]
18                    Significant Seasonal Period(s)          [12, 24, 36, 11, 48]
19  Significant Seasonal Period(s) without Harmonics                  [48, 36, 11]
20                                  Remove Harmonics                         False
21                            Harmonics Order Method                  harmonic_max
22                          Num Seasonalities to Use                             1
23                          All Seasonalities to Use                          [12]
24                               Primary Seasonality                            12
25                               Seasonality Present                          True
26                                  Seasonality Type                           mul
27                          Target Strictly Positive                          True
28                                Target White Noise                            No
29                                     Recommended d                             1
30                            Recommended Seasonal D                             1
31                                        Preprocess                         False
32                                          CPU Jobs                            -1
33                                           Use GPU                         False
34                                    Log Experiment                         False
35                                   Experiment Name               ts-default-name
36                                               USI                          e20c
2025-03-31 12:46:34,555:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2025-03-31 12:46:34,612:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,613:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,613:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,613:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,613:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,614:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,614:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,614:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,615:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,616:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,616:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,617:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,617:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,617:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,617:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,618:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,618:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,618:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,621:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,621:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,621:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,621:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,621:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,622:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,622:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,622:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,623:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,624:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,624:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,625:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,625:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,625:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,625:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,626:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,626:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,626:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,626:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,628:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,629:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,629:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,629:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,629:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,630:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,630:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,631:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,632:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,632:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,632:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,632:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,633:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,633:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,633:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,633:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,634:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,637:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,637:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,638:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,638:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,638:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,638:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,639:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,640:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,641:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,641:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,641:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,642:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,642:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,642:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,642:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,642:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,643:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,643:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,645:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,646:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,646:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,646:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,646:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,646:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,647:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,648:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,649:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,649:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,649:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,649:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,650:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,650:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,650:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,650:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,653:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,653:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,653:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,654:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,654:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,654:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,655:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,656:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,656:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,657:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,657:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,657:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,657:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,657:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,657:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,658:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,658:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,660:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,661:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,661:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,661:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,661:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,662:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,663:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,664:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,664:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,664:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,664:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,665:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,665:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,665:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,665:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,668:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,668:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,668:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,669:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,669:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,670:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,671:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,671:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,671:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,671:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,672:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,672:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,672:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,672:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,673:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,673:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,676:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,677:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,677:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,677:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,678:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,679:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,680:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,680:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,680:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,680:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,680:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,681:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,681:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,681:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,683:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,684:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,684:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,685:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,686:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,687:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,687:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,687:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,687:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,688:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,688:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,688:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,688:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,688:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,689:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,692:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,693:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,693:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,693:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,695:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,696:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,696:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,696:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,697:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,697:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,697:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,698:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,698:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,698:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,701:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,702:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,702:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,703:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,704:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,705:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,705:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,706:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,706:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,706:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,706:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,706:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,707:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,707:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,707:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,709:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,710:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,711:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,712:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,713:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,713:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,714:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,714:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,714:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,714:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,714:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,715:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,715:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,717:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,718:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,718:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,720:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,721:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,721:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,721:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,722:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,722:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,722:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,722:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,722:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,723:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,723:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,725:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,726:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,728:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,729:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,730:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,730:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,730:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,731:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,731:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,731:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,732:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,732:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,735:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,736:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,737:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,738:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,738:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,738:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,739:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,739:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,739:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,739:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,740:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,740:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,740:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,742:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,744:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,745:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,746:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,746:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,746:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,746:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,747:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,747:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,747:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,747:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,750:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,752:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,753:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,753:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,754:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,754:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,754:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,754:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,755:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,755:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,755:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,755:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,758:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,760:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,761:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,761:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,761:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,761:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,762:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,762:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,762:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,763:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,763:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,765:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,769:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,771:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,771:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,772:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,772:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,773:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,773:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,773:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,773:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,774:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,774:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,776:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,779:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,779:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,780:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,780:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,780:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,780:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,780:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,781:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,781:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,783:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,786:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,787:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,787:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,787:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,788:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,788:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,788:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,788:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,788:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,789:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,791:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,794:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,795:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,795:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,795:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,795:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,796:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,796:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,796:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,799:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,804:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,804:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,804:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,805:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,805:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,805:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,806:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,806:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,806:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,808:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,812:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,812:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,813:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,813:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,813:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,813:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,814:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,816:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,820:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,820:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,820:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,820:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,821:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,821:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,821:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,821:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,824:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,827:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,828:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,828:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,829:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,829:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,829:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,832:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,837:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,837:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,837:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,838:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,838:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,838:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,839:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,841:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,846:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,847:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,847:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,847:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,847:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,850:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,855:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,855:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,855:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,855:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,856:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,856:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,858:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,864:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,865:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,865:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,866:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,870:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,876:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,877:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,877:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,878:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,878:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,882:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,886:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,886:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,886:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,888:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,893:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,893:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,893:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,893:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,895:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,899:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,900:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,902:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,906:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,906:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,907:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,908:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,912:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,914:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,918:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 12:46:34,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,919:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2025-03-31 12:46:34,921:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,928:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,935:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,942:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:34,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 12:46:34,948:INFO:setup() successfully completed in 1.4s...............
2025-03-31 12:46:34,949:INFO:Initializing compare_models()
2025-03-31 12:46:34,949:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2025-03-31 12:46:34,949:INFO:Checking exceptions
2025-03-31 12:46:34,950:INFO:Preparing display monitor
2025-03-31 12:46:34,957:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:713: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2025-03-31 12:46:34,957:INFO:Initializing Naive Forecaster
2025-03-31 12:46:34,957:INFO:Total runtime is 0.0 minutes
2025-03-31 12:46:34,957:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:34,957:INFO:Initializing create_model()
2025-03-31 12:46:34,957:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:34,957:INFO:Checking exceptions
2025-03-31 12:46:34,957:INFO:Importing libraries
2025-03-31 12:46:34,957:INFO:Copying training dataset
2025-03-31 12:46:34,960:INFO:Defining folds
2025-03-31 12:46:34,960:INFO:Declaring metric variables
2025-03-31 12:46:34,960:INFO:Importing untrained model
2025-03-31 12:46:34,961:INFO:Naive Forecaster Imported successfully
2025-03-31 12:46:34,963:INFO:Starting cross validation
2025-03-31 12:46:34,964:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:38,882:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:38,882:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:38,884:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:39,304:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:39,305:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:39,305:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:39,306:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:39,307:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:39,307:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:39,323:INFO:Calculating mean and std
2025-03-31 12:46:39,324:INFO:Creating metrics dataframe
2025-03-31 12:46:39,331:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:39,334:INFO:Uploading results into container
2025-03-31 12:46:39,335:INFO:Uploading model into container now
2025-03-31 12:46:39,335:INFO:_master_model_container: 1
2025-03-31 12:46:39,335:INFO:_display_container: 2
2025-03-31 12:46:39,336:INFO:NaiveForecaster()
2025-03-31 12:46:39,336:INFO:create_model() successfully completed......................................
2025-03-31 12:46:39,532:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:39,532:INFO:Creating metrics dataframe
2025-03-31 12:46:39,536:INFO:Initializing Grand Means Forecaster
2025-03-31 12:46:39,536:INFO:Total runtime is 0.0763187567392985 minutes
2025-03-31 12:46:39,536:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:39,536:INFO:Initializing create_model()
2025-03-31 12:46:39,536:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:39,536:INFO:Checking exceptions
2025-03-31 12:46:39,536:INFO:Importing libraries
2025-03-31 12:46:39,537:INFO:Copying training dataset
2025-03-31 12:46:39,540:INFO:Defining folds
2025-03-31 12:46:39,541:INFO:Declaring metric variables
2025-03-31 12:46:39,541:INFO:Importing untrained model
2025-03-31 12:46:39,541:INFO:Grand Means Forecaster Imported successfully
2025-03-31 12:46:39,544:INFO:Starting cross validation
2025-03-31 12:46:39,545:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:43,691:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:43,692:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:43,699:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:44,011:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:44,011:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:44,017:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:44,017:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:44,019:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:44,021:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:44,037:INFO:Calculating mean and std
2025-03-31 12:46:44,038:INFO:Creating metrics dataframe
2025-03-31 12:46:44,040:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:44,043:INFO:Uploading results into container
2025-03-31 12:46:44,043:INFO:Uploading model into container now
2025-03-31 12:46:44,044:INFO:_master_model_container: 2
2025-03-31 12:46:44,044:INFO:_display_container: 2
2025-03-31 12:46:44,044:INFO:NaiveForecaster(strategy='mean')
2025-03-31 12:46:44,044:INFO:create_model() successfully completed......................................
2025-03-31 12:46:44,195:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:44,195:INFO:Creating metrics dataframe
2025-03-31 12:46:44,201:INFO:Initializing Seasonal Naive Forecaster
2025-03-31 12:46:44,201:INFO:Total runtime is 0.15406717459360758 minutes
2025-03-31 12:46:44,202:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:44,202:INFO:Initializing create_model()
2025-03-31 12:46:44,202:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:44,202:INFO:Checking exceptions
2025-03-31 12:46:44,202:INFO:Importing libraries
2025-03-31 12:46:44,202:INFO:Copying training dataset
2025-03-31 12:46:44,205:INFO:Defining folds
2025-03-31 12:46:44,205:INFO:Declaring metric variables
2025-03-31 12:46:44,206:INFO:Importing untrained model
2025-03-31 12:46:44,207:INFO:Seasonal Naive Forecaster Imported successfully
2025-03-31 12:46:44,210:INFO:Starting cross validation
2025-03-31 12:46:44,212:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:44,347:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:44,348:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,088:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:47,155:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:46:47,416:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,416:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,491:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,496:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,506:INFO:Calculating mean and std
2025-03-31 12:46:47,507:INFO:Creating metrics dataframe
2025-03-31 12:46:47,509:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:47,511:INFO:Uploading results into container
2025-03-31 12:46:47,511:INFO:Uploading model into container now
2025-03-31 12:46:47,512:INFO:_master_model_container: 3
2025-03-31 12:46:47,512:INFO:_display_container: 2
2025-03-31 12:46:47,512:INFO:NaiveForecaster(sp=12)
2025-03-31 12:46:47,512:INFO:create_model() successfully completed......................................
2025-03-31 12:46:47,624:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:47,624:INFO:Creating metrics dataframe
2025-03-31 12:46:47,627:INFO:Initializing Polynomial Trend Forecaster
2025-03-31 12:46:47,627:INFO:Total runtime is 0.21117682854334513 minutes
2025-03-31 12:46:47,627:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:47,627:INFO:Initializing create_model()
2025-03-31 12:46:47,627:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:47,627:INFO:Checking exceptions
2025-03-31 12:46:47,628:INFO:Importing libraries
2025-03-31 12:46:47,628:INFO:Copying training dataset
2025-03-31 12:46:47,630:INFO:Defining folds
2025-03-31 12:46:47,630:INFO:Declaring metric variables
2025-03-31 12:46:47,630:INFO:Importing untrained model
2025-03-31 12:46:47,630:INFO:Polynomial Trend Forecaster Imported successfully
2025-03-31 12:46:47,632:INFO:Starting cross validation
2025-03-31 12:46:47,632:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:47,694:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,694:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,695:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,695:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,695:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,695:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:47,710:INFO:Calculating mean and std
2025-03-31 12:46:47,710:INFO:Creating metrics dataframe
2025-03-31 12:46:47,712:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:47,714:INFO:Uploading results into container
2025-03-31 12:46:47,714:INFO:Uploading model into container now
2025-03-31 12:46:47,715:INFO:_master_model_container: 4
2025-03-31 12:46:47,715:INFO:_display_container: 2
2025-03-31 12:46:47,715:INFO:PolynomialTrendForecaster()
2025-03-31 12:46:47,715:INFO:create_model() successfully completed......................................
2025-03-31 12:46:47,815:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:47,815:INFO:Creating metrics dataframe
2025-03-31 12:46:47,817:INFO:Initializing ARIMA
2025-03-31 12:46:47,817:INFO:Total runtime is 0.21434376239776612 minutes
2025-03-31 12:46:47,817:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:47,818:INFO:Initializing create_model()
2025-03-31 12:46:47,818:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:47,818:INFO:Checking exceptions
2025-03-31 12:46:47,818:INFO:Importing libraries
2025-03-31 12:46:47,818:INFO:Copying training dataset
2025-03-31 12:46:47,819:INFO:Defining folds
2025-03-31 12:46:47,819:INFO:Declaring metric variables
2025-03-31 12:46:47,820:INFO:Importing untrained model
2025-03-31 12:46:47,820:INFO:ARIMA Imported successfully
2025-03-31 12:46:47,821:INFO:Starting cross validation
2025-03-31 12:46:47,822:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:48,016:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:48,016:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:48,017:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:48,018:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:48,018:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:48,035:INFO:Calculating mean and std
2025-03-31 12:46:48,035:INFO:Creating metrics dataframe
2025-03-31 12:46:48,037:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:48,038:INFO:Uploading results into container
2025-03-31 12:46:48,038:INFO:Uploading model into container now
2025-03-31 12:46:48,038:INFO:_master_model_container: 5
2025-03-31 12:46:48,038:INFO:_display_container: 2
2025-03-31 12:46:48,039:INFO:ARIMA(seasonal_order=(0, 1, 0, 12))
2025-03-31 12:46:48,039:INFO:create_model() successfully completed......................................
2025-03-31 12:46:48,139:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:48,139:INFO:Creating metrics dataframe
2025-03-31 12:46:48,142:INFO:Initializing Auto ARIMA
2025-03-31 12:46:48,142:INFO:Total runtime is 0.21975037256876628 minutes
2025-03-31 12:46:48,142:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:48,142:INFO:Initializing create_model()
2025-03-31 12:46:48,142:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:48,142:INFO:Checking exceptions
2025-03-31 12:46:48,142:INFO:Importing libraries
2025-03-31 12:46:48,142:INFO:Copying training dataset
2025-03-31 12:46:48,144:INFO:Defining folds
2025-03-31 12:46:48,144:INFO:Declaring metric variables
2025-03-31 12:46:48,144:INFO:Importing untrained model
2025-03-31 12:46:48,145:INFO:Auto ARIMA Imported successfully
2025-03-31 12:46:48,146:INFO:Starting cross validation
2025-03-31 12:46:48,147:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:50,272:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:50,273:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:50,887:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:50,887:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,001:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,002:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,015:INFO:Calculating mean and std
2025-03-31 12:46:52,016:INFO:Creating metrics dataframe
2025-03-31 12:46:52,017:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:52,018:INFO:Uploading results into container
2025-03-31 12:46:52,018:INFO:Uploading model into container now
2025-03-31 12:46:52,018:INFO:_master_model_container: 6
2025-03-31 12:46:52,018:INFO:_display_container: 2
2025-03-31 12:46:52,019:INFO:AutoARIMA(random_state=7148, sp=12, suppress_warnings=True)
2025-03-31 12:46:52,019:INFO:create_model() successfully completed......................................
2025-03-31 12:46:52,119:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:52,120:INFO:Creating metrics dataframe
2025-03-31 12:46:52,122:INFO:Initializing Exponential Smoothing
2025-03-31 12:46:52,122:INFO:Total runtime is 0.28608366250991824 minutes
2025-03-31 12:46:52,122:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:52,122:INFO:Initializing create_model()
2025-03-31 12:46:52,122:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:52,122:INFO:Checking exceptions
2025-03-31 12:46:52,123:INFO:Importing libraries
2025-03-31 12:46:52,123:INFO:Copying training dataset
2025-03-31 12:46:52,128:INFO:Defining folds
2025-03-31 12:46:52,129:INFO:Declaring metric variables
2025-03-31 12:46:52,129:INFO:Importing untrained model
2025-03-31 12:46:52,129:INFO:Exponential Smoothing Imported successfully
2025-03-31 12:46:52,130:INFO:Starting cross validation
2025-03-31 12:46:52,131:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:52,261:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,262:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,273:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,273:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,273:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,274:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,281:INFO:Calculating mean and std
2025-03-31 12:46:52,281:INFO:Creating metrics dataframe
2025-03-31 12:46:52,283:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:52,285:INFO:Uploading results into container
2025-03-31 12:46:52,285:INFO:Uploading model into container now
2025-03-31 12:46:52,285:INFO:_master_model_container: 7
2025-03-31 12:46:52,285:INFO:_display_container: 2
2025-03-31 12:46:52,286:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2025-03-31 12:46:52,286:INFO:create_model() successfully completed......................................
2025-03-31 12:46:52,387:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:52,387:INFO:Creating metrics dataframe
2025-03-31 12:46:52,391:INFO:Initializing ETS
2025-03-31 12:46:52,391:INFO:Total runtime is 0.29056675036748253 minutes
2025-03-31 12:46:52,391:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:52,391:INFO:Initializing create_model()
2025-03-31 12:46:52,391:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:52,391:INFO:Checking exceptions
2025-03-31 12:46:52,391:INFO:Importing libraries
2025-03-31 12:46:52,391:INFO:Copying training dataset
2025-03-31 12:46:52,393:INFO:Defining folds
2025-03-31 12:46:52,393:INFO:Declaring metric variables
2025-03-31 12:46:52,393:INFO:Importing untrained model
2025-03-31 12:46:52,393:INFO:ETS Imported successfully
2025-03-31 12:46:52,394:INFO:Starting cross validation
2025-03-31 12:46:52,395:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:52,534:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,535:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,593:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,593:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,604:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,604:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,609:INFO:Calculating mean and std
2025-03-31 12:46:52,609:INFO:Creating metrics dataframe
2025-03-31 12:46:52,611:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:52,613:INFO:Uploading results into container
2025-03-31 12:46:52,613:INFO:Uploading model into container now
2025-03-31 12:46:52,613:INFO:_master_model_container: 8
2025-03-31 12:46:52,613:INFO:_display_container: 2
2025-03-31 12:46:52,613:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2025-03-31 12:46:52,613:INFO:create_model() successfully completed......................................
2025-03-31 12:46:52,715:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:52,715:INFO:Creating metrics dataframe
2025-03-31 12:46:52,717:INFO:Initializing Theta Forecaster
2025-03-31 12:46:52,717:INFO:Total runtime is 0.2960013071695964 minutes
2025-03-31 12:46:52,717:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:52,717:INFO:Initializing create_model()
2025-03-31 12:46:52,717:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:52,717:INFO:Checking exceptions
2025-03-31 12:46:52,717:INFO:Importing libraries
2025-03-31 12:46:52,718:INFO:Copying training dataset
2025-03-31 12:46:52,719:INFO:Defining folds
2025-03-31 12:46:52,719:INFO:Declaring metric variables
2025-03-31 12:46:52,720:INFO:Importing untrained model
2025-03-31 12:46:52,720:INFO:Theta Forecaster Imported successfully
2025-03-31 12:46:52,721:INFO:Starting cross validation
2025-03-31 12:46:52,722:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:52,774:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,775:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,778:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,778:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,780:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,780:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,795:INFO:Calculating mean and std
2025-03-31 12:46:52,795:INFO:Creating metrics dataframe
2025-03-31 12:46:52,796:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:52,797:INFO:Uploading results into container
2025-03-31 12:46:52,797:INFO:Uploading model into container now
2025-03-31 12:46:52,798:INFO:_master_model_container: 9
2025-03-31 12:46:52,798:INFO:_display_container: 2
2025-03-31 12:46:52,798:INFO:ThetaForecaster(sp=12)
2025-03-31 12:46:52,798:INFO:create_model() successfully completed......................................
2025-03-31 12:46:52,896:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:52,896:INFO:Creating metrics dataframe
2025-03-31 12:46:52,898:INFO:Initializing STLF
2025-03-31 12:46:52,899:INFO:Total runtime is 0.2990275462468465 minutes
2025-03-31 12:46:52,899:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:52,899:INFO:Initializing create_model()
2025-03-31 12:46:52,899:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=stlf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:52,899:INFO:Checking exceptions
2025-03-31 12:46:52,899:INFO:Importing libraries
2025-03-31 12:46:52,899:INFO:Copying training dataset
2025-03-31 12:46:52,900:INFO:Defining folds
2025-03-31 12:46:52,901:INFO:Declaring metric variables
2025-03-31 12:46:52,901:INFO:Importing untrained model
2025-03-31 12:46:52,901:INFO:STLF Imported successfully
2025-03-31 12:46:52,903:INFO:Starting cross validation
2025-03-31 12:46:52,904:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:52,957:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,958:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,968:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,968:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,968:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,969:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:52,981:INFO:Calculating mean and std
2025-03-31 12:46:52,982:INFO:Creating metrics dataframe
2025-03-31 12:46:52,983:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:52,984:INFO:Uploading results into container
2025-03-31 12:46:52,984:INFO:Uploading model into container now
2025-03-31 12:46:52,985:INFO:_master_model_container: 10
2025-03-31 12:46:52,985:INFO:_display_container: 2
2025-03-31 12:46:52,985:INFO:STLForecaster(sp=12)
2025-03-31 12:46:52,985:INFO:create_model() successfully completed......................................
2025-03-31 12:46:53,085:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:53,086:INFO:Creating metrics dataframe
2025-03-31 12:46:53,088:INFO:Initializing Croston
2025-03-31 12:46:53,088:INFO:Total runtime is 0.302190101146698 minutes
2025-03-31 12:46:53,088:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:53,088:INFO:Initializing create_model()
2025-03-31 12:46:53,088:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:53,088:INFO:Checking exceptions
2025-03-31 12:46:53,088:INFO:Importing libraries
2025-03-31 12:46:53,088:INFO:Copying training dataset
2025-03-31 12:46:53,090:INFO:Defining folds
2025-03-31 12:46:53,091:INFO:Declaring metric variables
2025-03-31 12:46:53,091:INFO:Importing untrained model
2025-03-31 12:46:53,091:INFO:Croston Imported successfully
2025-03-31 12:46:53,092:INFO:Starting cross validation
2025-03-31 12:46:53,093:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:53,145:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:53,146:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:53,152:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:53,153:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:53,154:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:53,154:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:53,169:INFO:Calculating mean and std
2025-03-31 12:46:53,169:INFO:Creating metrics dataframe
2025-03-31 12:46:53,171:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:53,173:INFO:Uploading results into container
2025-03-31 12:46:53,173:INFO:Uploading model into container now
2025-03-31 12:46:53,173:INFO:_master_model_container: 11
2025-03-31 12:46:53,174:INFO:_display_container: 2
2025-03-31 12:46:53,174:INFO:Croston()
2025-03-31 12:46:53,174:INFO:create_model() successfully completed......................................
2025-03-31 12:46:53,279:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:53,280:INFO:Creating metrics dataframe
2025-03-31 12:46:53,282:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:53,282:INFO:Total runtime is 0.3054268320401509 minutes
2025-03-31 12:46:53,282:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:53,282:INFO:Initializing create_model()
2025-03-31 12:46:53,282:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:53,282:INFO:Checking exceptions
2025-03-31 12:46:53,282:INFO:Importing libraries
2025-03-31 12:46:53,282:INFO:Copying training dataset
2025-03-31 12:46:53,284:INFO:Defining folds
2025-03-31 12:46:53,284:INFO:Declaring metric variables
2025-03-31 12:46:53,284:INFO:Importing untrained model
2025-03-31 12:46:53,285:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:53,286:INFO:Starting cross validation
2025-03-31 12:46:53,287:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:54,225:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:54,226:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:54,226:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:54,537:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:54,537:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:54,568:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:54,568:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:54,589:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:54,589:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:54,609:INFO:Calculating mean and std
2025-03-31 12:46:54,609:INFO:Creating metrics dataframe
2025-03-31 12:46:54,611:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:54,614:INFO:Uploading results into container
2025-03-31 12:46:54,614:INFO:Uploading model into container now
2025-03-31 12:46:54,615:INFO:_master_model_container: 12
2025-03-31 12:46:54,615:INFO:_display_container: 2
2025-03-31 12:46:54,656:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=12,
                    window_length=12)
2025-03-31 12:46:54,656:INFO:create_model() successfully completed......................................
2025-03-31 12:46:54,772:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:54,772:INFO:Creating metrics dataframe
2025-03-31 12:46:54,774:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:54,774:INFO:Total runtime is 0.33028233846028643 minutes
2025-03-31 12:46:54,774:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:54,775:INFO:Initializing create_model()
2025-03-31 12:46:54,775:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:54,775:INFO:Checking exceptions
2025-03-31 12:46:54,775:INFO:Importing libraries
2025-03-31 12:46:54,775:INFO:Copying training dataset
2025-03-31 12:46:54,777:INFO:Defining folds
2025-03-31 12:46:54,777:INFO:Declaring metric variables
2025-03-31 12:46:54,777:INFO:Importing untrained model
2025-03-31 12:46:54,778:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:54,780:INFO:Starting cross validation
2025-03-31 12:46:54,781:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:55,599:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:55,603:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:55,609:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:55,947:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:55,947:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:55,957:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:55,957:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:55,970:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:55,971:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:55,987:INFO:Calculating mean and std
2025-03-31 12:46:55,988:INFO:Creating metrics dataframe
2025-03-31 12:46:55,990:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:55,992:INFO:Uploading results into container
2025-03-31 12:46:55,993:INFO:Uploading model into container now
2025-03-31 12:46:55,993:INFO:_master_model_container: 13
2025-03-31 12:46:55,993:INFO:_display_container: 2
2025-03-31 12:46:55,997:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=7148), sp=12,
                    window_length=12)
2025-03-31 12:46:55,997:INFO:create_model() successfully completed......................................
2025-03-31 12:46:56,103:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:56,103:INFO:Creating metrics dataframe
2025-03-31 12:46:56,106:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:56,106:INFO:Total runtime is 0.3524904131889343 minutes
2025-03-31 12:46:56,107:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:56,107:INFO:Initializing create_model()
2025-03-31 12:46:56,107:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:56,107:INFO:Checking exceptions
2025-03-31 12:46:56,107:INFO:Importing libraries
2025-03-31 12:46:56,107:INFO:Copying training dataset
2025-03-31 12:46:56,111:INFO:Defining folds
2025-03-31 12:46:56,111:INFO:Declaring metric variables
2025-03-31 12:46:56,111:INFO:Importing untrained model
2025-03-31 12:46:56,111:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:56,114:INFO:Starting cross validation
2025-03-31 12:46:56,114:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:56,583:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:56,583:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:56,913:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:56,966:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 12:46:57,262:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,263:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,298:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,298:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,304:INFO:Calculating mean and std
2025-03-31 12:46:57,304:INFO:Creating metrics dataframe
2025-03-31 12:46:57,307:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:57,309:INFO:Uploading results into container
2025-03-31 12:46:57,309:INFO:Uploading model into container now
2025-03-31 12:46:57,310:INFO:_master_model_container: 14
2025-03-31 12:46:57,310:INFO:_display_container: 2
2025-03-31 12:46:57,313:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=7148), sp=12,
                    window_length=12)
2025-03-31 12:46:57,313:INFO:create_model() successfully completed......................................
2025-03-31 12:46:57,427:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:57,427:INFO:Creating metrics dataframe
2025-03-31 12:46:57,431:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:57,431:INFO:Total runtime is 0.3745750904083252 minutes
2025-03-31 12:46:57,431:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:57,431:INFO:Initializing create_model()
2025-03-31 12:46:57,431:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:57,431:INFO:Checking exceptions
2025-03-31 12:46:57,431:INFO:Importing libraries
2025-03-31 12:46:57,431:INFO:Copying training dataset
2025-03-31 12:46:57,434:INFO:Defining folds
2025-03-31 12:46:57,434:INFO:Declaring metric variables
2025-03-31 12:46:57,435:INFO:Importing untrained model
2025-03-31 12:46:57,435:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:57,437:INFO:Starting cross validation
2025-03-31 12:46:57,438:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:57,835:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,835:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,851:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,851:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,851:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,851:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:57,863:INFO:Calculating mean and std
2025-03-31 12:46:57,863:INFO:Creating metrics dataframe
2025-03-31 12:46:57,864:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:57,866:INFO:Uploading results into container
2025-03-31 12:46:57,866:INFO:Uploading model into container now
2025-03-31 12:46:57,866:INFO:_master_model_container: 15
2025-03-31 12:46:57,866:INFO:_display_container: 2
2025-03-31 12:46:57,868:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=7148), sp=12,
                    window_length=12)
2025-03-31 12:46:57,868:INFO:create_model() successfully completed......................................
2025-03-31 12:46:57,982:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:57,982:INFO:Creating metrics dataframe
2025-03-31 12:46:57,985:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:57,985:INFO:Total runtime is 0.3838046431541443 minutes
2025-03-31 12:46:57,985:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:57,985:INFO:Initializing create_model()
2025-03-31 12:46:57,985:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:57,986:INFO:Checking exceptions
2025-03-31 12:46:57,986:INFO:Importing libraries
2025-03-31 12:46:57,986:INFO:Copying training dataset
2025-03-31 12:46:57,988:INFO:Defining folds
2025-03-31 12:46:57,988:INFO:Declaring metric variables
2025-03-31 12:46:57,988:INFO:Importing untrained model
2025-03-31 12:46:57,989:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:57,990:INFO:Starting cross validation
2025-03-31 12:46:57,991:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:58,443:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,444:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,454:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,454:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,459:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,459:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,469:INFO:Calculating mean and std
2025-03-31 12:46:58,470:INFO:Creating metrics dataframe
2025-03-31 12:46:58,471:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:58,473:INFO:Uploading results into container
2025-03-31 12:46:58,473:INFO:Uploading model into container now
2025-03-31 12:46:58,473:INFO:_master_model_container: 16
2025-03-31 12:46:58,474:INFO:_display_container: 2
2025-03-31 12:46:58,476:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=7148), sp=12,
                    window_length=12)
2025-03-31 12:46:58,476:INFO:create_model() successfully completed......................................
2025-03-31 12:46:58,582:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:58,582:INFO:Creating metrics dataframe
2025-03-31 12:46:58,584:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:58,584:INFO:Total runtime is 0.3937973300615947 minutes
2025-03-31 12:46:58,586:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:58,586:INFO:Initializing create_model()
2025-03-31 12:46:58,586:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:58,586:INFO:Checking exceptions
2025-03-31 12:46:58,586:INFO:Importing libraries
2025-03-31 12:46:58,586:INFO:Copying training dataset
2025-03-31 12:46:58,589:INFO:Defining folds
2025-03-31 12:46:58,589:INFO:Declaring metric variables
2025-03-31 12:46:58,589:INFO:Importing untrained model
2025-03-31 12:46:58,591:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:58,593:INFO:Starting cross validation
2025-03-31 12:46:58,594:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:58,969:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,970:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,987:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:58,987:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,011:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,011:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,031:INFO:Calculating mean and std
2025-03-31 12:46:59,032:INFO:Creating metrics dataframe
2025-03-31 12:46:59,033:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:59,035:INFO:Uploading results into container
2025-03-31 12:46:59,035:INFO:Uploading model into container now
2025-03-31 12:46:59,036:INFO:_master_model_container: 17
2025-03-31 12:46:59,036:INFO:_display_container: 2
2025-03-31 12:46:59,037:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=12, window_length=12)
2025-03-31 12:46:59,037:INFO:create_model() successfully completed......................................
2025-03-31 12:46:59,150:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:59,150:INFO:Creating metrics dataframe
2025-03-31 12:46:59,153:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:59,153:INFO:Total runtime is 0.403264323870341 minutes
2025-03-31 12:46:59,153:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:59,153:INFO:Initializing create_model()
2025-03-31 12:46:59,153:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:59,153:INFO:Checking exceptions
2025-03-31 12:46:59,153:INFO:Importing libraries
2025-03-31 12:46:59,153:INFO:Copying training dataset
2025-03-31 12:46:59,155:INFO:Defining folds
2025-03-31 12:46:59,155:INFO:Declaring metric variables
2025-03-31 12:46:59,155:INFO:Importing untrained model
2025-03-31 12:46:59,157:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:59,159:INFO:Starting cross validation
2025-03-31 12:46:59,160:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:46:59,556:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,556:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,603:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,603:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,620:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,620:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:46:59,635:INFO:Calculating mean and std
2025-03-31 12:46:59,635:INFO:Creating metrics dataframe
2025-03-31 12:46:59,638:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:46:59,639:INFO:Uploading results into container
2025-03-31 12:46:59,639:INFO:Uploading model into container now
2025-03-31 12:46:59,639:INFO:_master_model_container: 18
2025-03-31 12:46:59,639:INFO:_display_container: 2
2025-03-31 12:46:59,641:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=12, window_length=12)
2025-03-31 12:46:59,642:INFO:create_model() successfully completed......................................
2025-03-31 12:46:59,760:INFO:SubProcess create_model() end ==================================
2025-03-31 12:46:59,760:INFO:Creating metrics dataframe
2025-03-31 12:46:59,762:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2025-03-31 12:46:59,762:INFO:Total runtime is 0.4134244561195374 minutes
2025-03-31 12:46:59,763:INFO:SubProcess create_model() called ==================================
2025-03-31 12:46:59,763:INFO:Initializing create_model()
2025-03-31 12:46:59,763:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:46:59,763:INFO:Checking exceptions
2025-03-31 12:46:59,763:INFO:Importing libraries
2025-03-31 12:46:59,763:INFO:Copying training dataset
2025-03-31 12:46:59,765:INFO:Defining folds
2025-03-31 12:46:59,765:INFO:Declaring metric variables
2025-03-31 12:46:59,765:INFO:Importing untrained model
2025-03-31 12:46:59,766:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:46:59,767:INFO:Starting cross validation
2025-03-31 12:46:59,767:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:00,129:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:00,129:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:00,156:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:00,157:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:00,185:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:00,186:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:00,205:INFO:Calculating mean and std
2025-03-31 12:47:00,206:INFO:Creating metrics dataframe
2025-03-31 12:47:00,208:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:00,210:INFO:Uploading results into container
2025-03-31 12:47:00,211:INFO:Uploading model into container now
2025-03-31 12:47:00,211:INFO:_master_model_container: 19
2025-03-31 12:47:00,211:INFO:_display_container: 2
2025-03-31 12:47:00,214:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=12,
                    window_length=12)
2025-03-31 12:47:00,215:INFO:create_model() successfully completed......................................
2025-03-31 12:47:00,345:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:00,345:INFO:Creating metrics dataframe
2025-03-31 12:47:00,348:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2025-03-31 12:47:00,348:INFO:Total runtime is 0.42318631410598756 minutes
2025-03-31 12:47:00,348:INFO:SubProcess create_model() called ==================================
2025-03-31 12:47:00,348:INFO:Initializing create_model()
2025-03-31 12:47:00,348:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:00,348:INFO:Checking exceptions
2025-03-31 12:47:00,348:INFO:Importing libraries
2025-03-31 12:47:00,348:INFO:Copying training dataset
2025-03-31 12:47:00,351:INFO:Defining folds
2025-03-31 12:47:00,351:INFO:Declaring metric variables
2025-03-31 12:47:00,351:INFO:Importing untrained model
2025-03-31 12:47:00,352:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:47:00,355:INFO:Starting cross validation
2025-03-31 12:47:00,356:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:01,055:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,056:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,074:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,075:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,087:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,087:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,092:INFO:Calculating mean and std
2025-03-31 12:47:01,092:INFO:Creating metrics dataframe
2025-03-31 12:47:01,094:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:01,096:INFO:Uploading results into container
2025-03-31 12:47:01,097:INFO:Uploading model into container now
2025-03-31 12:47:01,097:INFO:_master_model_container: 20
2025-03-31 12:47:01,097:INFO:_display_container: 2
2025-03-31 12:47:01,098:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=12,
                    window_length=12)
2025-03-31 12:47:01,099:INFO:create_model() successfully completed......................................
2025-03-31 12:47:01,206:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:01,206:INFO:Creating metrics dataframe
2025-03-31 12:47:01,208:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2025-03-31 12:47:01,208:INFO:Total runtime is 0.43752388954162597 minutes
2025-03-31 12:47:01,208:INFO:SubProcess create_model() called ==================================
2025-03-31 12:47:01,208:INFO:Initializing create_model()
2025-03-31 12:47:01,208:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:01,208:INFO:Checking exceptions
2025-03-31 12:47:01,208:INFO:Importing libraries
2025-03-31 12:47:01,208:INFO:Copying training dataset
2025-03-31 12:47:01,210:INFO:Defining folds
2025-03-31 12:47:01,210:INFO:Declaring metric variables
2025-03-31 12:47:01,210:INFO:Importing untrained model
2025-03-31 12:47:01,211:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:47:01,212:INFO:Starting cross validation
2025-03-31 12:47:01,213:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:01,541:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,542:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,550:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,550:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,552:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,554:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:01,560:INFO:Calculating mean and std
2025-03-31 12:47:01,560:INFO:Creating metrics dataframe
2025-03-31 12:47:01,562:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:01,562:INFO:Uploading results into container
2025-03-31 12:47:01,562:INFO:Uploading model into container now
2025-03-31 12:47:01,564:INFO:_master_model_container: 21
2025-03-31 12:47:01,564:INFO:_display_container: 2
2025-03-31 12:47:01,564:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=7148), sp=12,
                    window_length=12)
2025-03-31 12:47:01,564:INFO:create_model() successfully completed......................................
2025-03-31 12:47:01,667:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:01,667:INFO:Creating metrics dataframe
2025-03-31 12:47:01,669:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2025-03-31 12:47:01,670:INFO:Total runtime is 0.4452238082885742 minutes
2025-03-31 12:47:01,670:INFO:SubProcess create_model() called ==================================
2025-03-31 12:47:01,670:INFO:Initializing create_model()
2025-03-31 12:47:01,670:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:01,670:INFO:Checking exceptions
2025-03-31 12:47:01,670:INFO:Importing libraries
2025-03-31 12:47:01,670:INFO:Copying training dataset
2025-03-31 12:47:01,672:INFO:Defining folds
2025-03-31 12:47:01,672:INFO:Declaring metric variables
2025-03-31 12:47:01,672:INFO:Importing untrained model
2025-03-31 12:47:01,673:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:47:01,674:INFO:Starting cross validation
2025-03-31 12:47:01,675:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:02,511:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:02,512:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:02,519:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:02,520:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:02,520:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:02,531:INFO:Calculating mean and std
2025-03-31 12:47:02,531:INFO:Creating metrics dataframe
2025-03-31 12:47:02,534:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:02,535:INFO:Uploading results into container
2025-03-31 12:47:02,535:INFO:Uploading model into container now
2025-03-31 12:47:02,536:INFO:_master_model_container: 22
2025-03-31 12:47:02,536:INFO:_display_container: 2
2025-03-31 12:47:02,538:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1, random_state=7148),
                    sp=12, window_length=12)
2025-03-31 12:47:02,538:INFO:create_model() successfully completed......................................
2025-03-31 12:47:02,657:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:02,657:INFO:Creating metrics dataframe
2025-03-31 12:47:02,659:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2025-03-31 12:47:02,660:INFO:Total runtime is 0.46170281966527305 minutes
2025-03-31 12:47:02,660:INFO:SubProcess create_model() called ==================================
2025-03-31 12:47:02,660:INFO:Initializing create_model()
2025-03-31 12:47:02,660:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:02,660:INFO:Checking exceptions
2025-03-31 12:47:02,660:INFO:Importing libraries
2025-03-31 12:47:02,660:INFO:Copying training dataset
2025-03-31 12:47:02,662:INFO:Defining folds
2025-03-31 12:47:02,662:INFO:Declaring metric variables
2025-03-31 12:47:02,662:INFO:Importing untrained model
2025-03-31 12:47:02,662:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:47:02,664:INFO:Starting cross validation
2025-03-31 12:47:02,664:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:03,441:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:03,441:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:03,442:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:03,443:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:03,454:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:03,455:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:03,475:INFO:Calculating mean and std
2025-03-31 12:47:03,476:INFO:Creating metrics dataframe
2025-03-31 12:47:03,479:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:03,482:INFO:Uploading results into container
2025-03-31 12:47:03,482:INFO:Uploading model into container now
2025-03-31 12:47:03,482:INFO:_master_model_container: 23
2025-03-31 12:47:03,482:INFO:_display_container: 2
2025-03-31 12:47:03,485:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=7148),
                    sp=12, window_length=12)
2025-03-31 12:47:03,485:INFO:create_model() successfully completed......................................
2025-03-31 12:47:03,589:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:03,589:INFO:Creating metrics dataframe
2025-03-31 12:47:03,592:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2025-03-31 12:47:03,592:INFO:Total runtime is 0.47726412216822306 minutes
2025-03-31 12:47:03,592:INFO:SubProcess create_model() called ==================================
2025-03-31 12:47:03,592:INFO:Initializing create_model()
2025-03-31 12:47:03,592:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:03,592:INFO:Checking exceptions
2025-03-31 12:47:03,592:INFO:Importing libraries
2025-03-31 12:47:03,592:INFO:Copying training dataset
2025-03-31 12:47:03,594:INFO:Defining folds
2025-03-31 12:47:03,594:INFO:Declaring metric variables
2025-03-31 12:47:03,594:INFO:Importing untrained model
2025-03-31 12:47:03,595:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:47:03,597:INFO:Starting cross validation
2025-03-31 12:47:03,597:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:04,020:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,021:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,021:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,021:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,030:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,031:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,049:INFO:Calculating mean and std
2025-03-31 12:47:04,050:INFO:Creating metrics dataframe
2025-03-31 12:47:04,051:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:04,053:INFO:Uploading results into container
2025-03-31 12:47:04,053:INFO:Uploading model into container now
2025-03-31 12:47:04,054:INFO:_master_model_container: 24
2025-03-31 12:47:04,054:INFO:_display_container: 2
2025-03-31 12:47:04,056:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=7148),
                    sp=12, window_length=12)
2025-03-31 12:47:04,056:INFO:create_model() successfully completed......................................
2025-03-31 12:47:04,162:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:04,162:INFO:Creating metrics dataframe
2025-03-31 12:47:04,164:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2025-03-31 12:47:04,164:INFO:Total runtime is 0.48678603569666545 minutes
2025-03-31 12:47:04,164:INFO:SubProcess create_model() called ==================================
2025-03-31 12:47:04,164:INFO:Initializing create_model()
2025-03-31 12:47:04,164:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:04,164:INFO:Checking exceptions
2025-03-31 12:47:04,164:INFO:Importing libraries
2025-03-31 12:47:04,164:INFO:Copying training dataset
2025-03-31 12:47:04,166:INFO:Defining folds
2025-03-31 12:47:04,166:INFO:Declaring metric variables
2025-03-31 12:47:04,166:INFO:Importing untrained model
2025-03-31 12:47:04,167:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:47:04,168:INFO:Starting cross validation
2025-03-31 12:47:04,169:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:04,652:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,652:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,662:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,663:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,667:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,668:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:04,675:INFO:Calculating mean and std
2025-03-31 12:47:04,675:INFO:Creating metrics dataframe
2025-03-31 12:47:04,677:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:04,679:INFO:Uploading results into container
2025-03-31 12:47:04,679:INFO:Uploading model into container now
2025-03-31 12:47:04,679:INFO:_master_model_container: 25
2025-03-31 12:47:04,679:INFO:_display_container: 2
2025-03-31 12:47:04,681:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=7148), sp=12,
                    window_length=12)
2025-03-31 12:47:04,681:INFO:create_model() successfully completed......................................
2025-03-31 12:47:04,782:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:04,782:INFO:Creating metrics dataframe
2025-03-31 12:47:04,784:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2025-03-31 12:47:04,785:INFO:Total runtime is 0.49714515209198 minutes
2025-03-31 12:47:04,785:INFO:SubProcess create_model() called ==================================
2025-03-31 12:47:04,785:INFO:Initializing create_model()
2025-03-31 12:47:04,785:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019EEE874190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:04,785:INFO:Checking exceptions
2025-03-31 12:47:04,785:INFO:Importing libraries
2025-03-31 12:47:04,785:INFO:Copying training dataset
2025-03-31 12:47:04,787:INFO:Defining folds
2025-03-31 12:47:04,787:INFO:Declaring metric variables
2025-03-31 12:47:04,787:INFO:Importing untrained model
2025-03-31 12:47:04,788:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 12:47:04,789:INFO:Starting cross validation
2025-03-31 12:47:04,790:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 12:47:06,398:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,399:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,402:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,402:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,428:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,429:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,440:INFO:Calculating mean and std
2025-03-31 12:47:06,441:INFO:Creating metrics dataframe
2025-03-31 12:47:06,443:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 12:47:06,445:INFO:Uploading results into container
2025-03-31 12:47:06,445:INFO:Uploading model into container now
2025-03-31 12:47:06,445:INFO:_master_model_container: 26
2025-03-31 12:47:06,445:INFO:_display_container: 2
2025-03-31 12:47:06,448:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(n_jobs=-1, random_state=7148),
                    sp=12, window_length=12)
2025-03-31 12:47:06,448:INFO:create_model() successfully completed......................................
2025-03-31 12:47:06,565:INFO:SubProcess create_model() end ==================================
2025-03-31 12:47:06,565:INFO:Creating metrics dataframe
2025-03-31 12:47:06,568:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-31 12:47:06,569:INFO:Initializing create_model()
2025-03-31 12:47:06,570:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x0000019ECF054B20>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 12:47:06,570:INFO:Checking exceptions
2025-03-31 12:47:06,570:INFO:Importing libraries
2025-03-31 12:47:06,570:INFO:Copying training dataset
2025-03-31 12:47:06,573:INFO:Defining folds
2025-03-31 12:47:06,573:INFO:Declaring metric variables
2025-03-31 12:47:06,573:INFO:Importing untrained model
2025-03-31 12:47:06,573:INFO:Declaring custom model
2025-03-31 12:47:06,574:INFO:Exponential Smoothing Imported successfully
2025-03-31 12:47:06,574:INFO:Cross validation set to False
2025-03-31 12:47:06,574:INFO:Fitting Model
2025-03-31 12:47:06,659:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2025-03-31 12:47:06,659:INFO:create_model() successfully completed......................................
2025-03-31 12:47:06,782:INFO:_master_model_container: 26
2025-03-31 12:47:06,782:INFO:_display_container: 2
2025-03-31 12:47:06,782:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2025-03-31 12:47:06,782:INFO:compare_models() successfully completed......................................
2025-03-31 12:47:06,800:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,800:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,801:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,938:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,939:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:06,939:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 12:47:09,358:INFO:Visual Rendered Successfully
2025-03-31 12:47:09,362:INFO:Initializing save_model()
2025-03-31 12:47:09,362:INFO:save_model(model=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), model_name=airline_forecast_model, prep_pipe_=ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))]), verbose=True, use_case=MLUsecase.TIME_SERIES, kwargs={})
2025-03-31 12:47:09,362:INFO:Adding model into prep_pipe
2025-03-31 12:47:09,367:INFO:airline_forecast_model.pkl saved in current working directory
2025-03-31 12:47:09,372:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ExponentialSmoothing(seasonal='mul',
                                                                                     sp=12,
                                                                                     trend='add'))]))])
2025-03-31 12:47:09,372:INFO:save_model() successfully completed......................................
2025-03-31 12:58:36,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 12:58:36,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 12:58:36,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 12:58:36,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 12:58:39,118:INFO:PyCaret AnomalyExperiment
2025-03-31 12:58:39,118:INFO:Logging name: anomaly-default-name
2025-03-31 12:58:39,118:INFO:ML Usecase: MLUsecase.ANOMALY
2025-03-31 12:58:39,118:INFO:version 3.3.2
2025-03-31 12:58:39,118:INFO:Initializing setup()
2025-03-31 12:58:39,119:INFO:self.USI: 2807
2025-03-31 12:58:39,119:INFO:self._variable_keys: {'exp_id', 'pipeline', 'n_jobs_param', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'seed', 'data', 'exp_name_log', 'memory', '_ml_usecase', 'USI', 'X', 'idx', '_available_plots', 'gpu_param', 'logging_param'}
2025-03-31 12:58:39,119:INFO:Checking environment
2025-03-31 12:58:39,119:INFO:python_version: 3.9.20
2025-03-31 12:58:39,119:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 12:58:39,119:INFO:machine: AMD64
2025-03-31 12:58:39,129:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 12:58:39,135:INFO:Memory: svmem(total=16885276672, available=3585191936, percent=78.8, used=13300084736, free=3585191936)
2025-03-31 12:58:39,135:INFO:Physical Core: 4
2025-03-31 12:58:39,135:INFO:Logical Core: 8
2025-03-31 12:58:39,135:INFO:Checking libraries
2025-03-31 12:58:39,135:INFO:System:
2025-03-31 12:58:39,135:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 12:58:39,135:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 12:58:39,135:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 12:58:39,135:INFO:PyCaret required dependencies:
2025-03-31 12:58:39,772:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 12:58:40,353:INFO:                 pip: 25.0
2025-03-31 12:58:40,353:INFO:          setuptools: 75.8.0
2025-03-31 12:58:40,353:INFO:             pycaret: 3.3.2
2025-03-31 12:58:40,353:INFO:             IPython: 8.15.0
2025-03-31 12:58:40,354:INFO:          ipywidgets: 8.1.5
2025-03-31 12:58:40,354:INFO:                tqdm: 4.67.1
2025-03-31 12:58:40,354:INFO:               numpy: 1.26.4
2025-03-31 12:58:40,354:INFO:              pandas: 2.1.4
2025-03-31 12:58:40,354:INFO:              jinja2: 3.1.5
2025-03-31 12:58:40,354:INFO:               scipy: 1.11.4
2025-03-31 12:58:40,354:INFO:              joblib: 1.3.2
2025-03-31 12:58:40,354:INFO:             sklearn: 1.4.2
2025-03-31 12:58:40,354:INFO:                pyod: 2.0.4
2025-03-31 12:58:40,354:INFO:            imblearn: 0.12.3
2025-03-31 12:58:40,354:INFO:   category_encoders: 2.6.4
2025-03-31 12:58:40,354:INFO:            lightgbm: 4.6.0
2025-03-31 12:58:40,354:INFO:               numba: 0.60.0
2025-03-31 12:58:40,354:INFO:            requests: 2.32.3
2025-03-31 12:58:40,354:INFO:          matplotlib: 3.7.5
2025-03-31 12:58:40,354:INFO:          scikitplot: 0.3.7
2025-03-31 12:58:40,354:INFO:         yellowbrick: 1.5
2025-03-31 12:58:40,354:INFO:              plotly: 5.24.1
2025-03-31 12:58:40,354:INFO:    plotly-resampler: Not installed
2025-03-31 12:58:40,354:INFO:             kaleido: 0.2.1
2025-03-31 12:58:40,354:INFO:           schemdraw: 0.15
2025-03-31 12:58:40,354:INFO:         statsmodels: 0.14.4
2025-03-31 12:58:40,354:INFO:              sktime: 0.26.0
2025-03-31 12:58:40,354:INFO:               tbats: 1.1.3
2025-03-31 12:58:40,354:INFO:            pmdarima: 2.0.4
2025-03-31 12:58:40,354:INFO:              psutil: 5.9.0
2025-03-31 12:58:40,354:INFO:          markupsafe: 3.0.2
2025-03-31 12:58:40,354:INFO:             pickle5: Not installed
2025-03-31 12:58:40,354:INFO:         cloudpickle: 3.0.0
2025-03-31 12:58:40,354:INFO:         deprecation: 2.1.0
2025-03-31 12:58:40,354:INFO:              xxhash: 3.5.0
2025-03-31 12:58:40,354:INFO:           wurlitzer: Not installed
2025-03-31 12:58:40,355:INFO:PyCaret optional dependencies:
2025-03-31 12:58:40,374:INFO:                shap: Not installed
2025-03-31 12:58:40,374:INFO:           interpret: Not installed
2025-03-31 12:58:40,374:INFO:                umap: Not installed
2025-03-31 12:58:40,374:INFO:     ydata_profiling: Not installed
2025-03-31 12:58:40,374:INFO:  explainerdashboard: Not installed
2025-03-31 12:58:40,374:INFO:             autoviz: Not installed
2025-03-31 12:58:40,374:INFO:           fairlearn: Not installed
2025-03-31 12:58:40,374:INFO:          deepchecks: Not installed
2025-03-31 12:58:40,374:INFO:             xgboost: Not installed
2025-03-31 12:58:40,374:INFO:            catboost: Not installed
2025-03-31 12:58:40,374:INFO:              kmodes: Not installed
2025-03-31 12:58:40,374:INFO:             mlxtend: Not installed
2025-03-31 12:58:40,374:INFO:       statsforecast: Not installed
2025-03-31 12:58:40,374:INFO:        tune_sklearn: Not installed
2025-03-31 12:58:40,375:INFO:                 ray: Not installed
2025-03-31 12:58:40,375:INFO:            hyperopt: Not installed
2025-03-31 12:58:40,375:INFO:              optuna: Not installed
2025-03-31 12:58:40,375:INFO:               skopt: Not installed
2025-03-31 12:58:40,375:INFO:              mlflow: Not installed
2025-03-31 12:58:40,375:INFO:              gradio: Not installed
2025-03-31 12:58:40,375:INFO:             fastapi: Not installed
2025-03-31 12:58:40,375:INFO:             uvicorn: Not installed
2025-03-31 12:58:40,375:INFO:              m2cgen: Not installed
2025-03-31 12:58:40,375:INFO:           evidently: Not installed
2025-03-31 12:58:40,375:INFO:               fugue: Not installed
2025-03-31 12:58:40,375:INFO:           streamlit: 1.20.0
2025-03-31 12:58:40,375:INFO:             prophet: Not installed
2025-03-31 12:58:40,375:INFO:None
2025-03-31 12:58:40,375:INFO:Set up data.
2025-03-31 12:58:40,379:INFO:Set up index.
2025-03-31 12:58:40,379:INFO:Assigning column types.
2025-03-31 12:58:40,384:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 12:58:41,796:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 12:58:41,798:INFO:Preparing preprocessing pipeline...
2025-03-31 12:58:41,798:INFO:Set up simple imputation.
2025-03-31 12:58:41,856:INFO:Finished creating preprocessing pipeline.
2025-03-31 12:58:41,860:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Col1', 'Col2', 'Col3', 'Col4',
                                             'Col5', 'Col6', 'Col7', 'Col8',
                                             'Col9', 'Col10'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-03-31 12:58:41,860:INFO:Creating final display dataframe.
2025-03-31 12:58:41,898:INFO:Setup _display_container:                Description                 Value
0               Session id                  5759
1      Original data shape            (1000, 10)
2   Transformed data shape            (1000, 10)
3         Numeric features                    10
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                 CPU Jobs                    -1
9                  Use GPU                 False
10          Log Experiment                 False
11         Experiment Name  anomaly-default-name
12                     USI                  2807
2025-03-31 12:58:41,902:INFO:setup() successfully completed in 2.79s...............
2025-03-31 12:58:41,902:INFO:Initializing create_model()
2025-03-31 12:58:41,902:INFO:create_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002A0E483B0A0>, estimator=knn, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 12:58:41,902:INFO:Checking exceptions
2025-03-31 12:58:41,913:INFO:Importing untrained model
2025-03-31 12:58:41,914:INFO:K-Nearest Neighbors Detector Imported successfully
2025-03-31 12:58:41,914:INFO:Fitting Model
2025-03-31 12:58:41,943:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2025-03-31 12:58:41,943:INFO:create_models() successfully completed......................................
2025-03-31 12:58:41,943:INFO:Uploading results into container
2025-03-31 12:58:41,943:INFO:Uploading model into container now
2025-03-31 12:58:41,943:INFO:_master_model_container: 1
2025-03-31 12:58:41,943:INFO:_display_container: 1
2025-03-31 12:58:41,943:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2025-03-31 12:58:41,943:INFO:create_model() successfully completed......................................
2025-03-31 12:58:42,053:INFO:Initializing assign_model()
2025-03-31 12:58:42,053:INFO:assign_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002A0E483B0A0>, model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), transformation=False, score=True, verbose=True)
2025-03-31 12:58:42,053:INFO:Checking exceptions
2025-03-31 12:58:42,053:INFO:Determining Trained Model
2025-03-31 12:58:42,053:INFO:Trained Model : K-Nearest Neighbors Detector
2025-03-31 12:58:42,053:INFO:Copying data
2025-03-31 12:58:42,055:INFO:(1000, 12)
2025-03-31 12:58:42,055:INFO:assign_model() successfully completed......................................
2025-03-31 12:58:42,055:INFO:Initializing plot_model()
2025-03-31 12:58:42,055:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002A0E483B0A0>, system=True)
2025-03-31 12:58:42,055:INFO:Checking exceptions
2025-03-31 12:58:42,056:INFO:Preloading libraries
2025-03-31 12:58:42,057:INFO:Copying training dataset
2025-03-31 12:58:42,057:INFO:Plot type: tsne
2025-03-31 12:58:42,057:INFO:SubProcess assign_model() called ==================================
2025-03-31 12:58:42,058:INFO:Initializing assign_model()
2025-03-31 12:58:42,058:INFO:assign_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002A0E483B0A0>, model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), transformation=True, score=False, verbose=False)
2025-03-31 12:58:42,058:INFO:Checking exceptions
2025-03-31 12:58:42,058:INFO:Determining Trained Model
2025-03-31 12:58:42,058:INFO:Trained Model : K-Nearest Neighbors Detector
2025-03-31 12:58:42,058:INFO:Copying data
2025-03-31 12:58:42,070:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 12:58:42,070:INFO:(1000, 11)
2025-03-31 12:58:42,070:INFO:assign_model() successfully completed......................................
2025-03-31 12:58:42,071:INFO:SubProcess assign_model() end ==================================
2025-03-31 12:58:42,072:INFO:Getting dummies to cast categorical variables
2025-03-31 12:58:42,072:INFO:Fitting TSNE()
2025-03-31 12:58:49,368:INFO:Rendering Visual
2025-03-31 12:58:50,970:INFO:Visual Rendered Successfully
2025-03-31 12:58:51,115:INFO:plot_model() successfully completed......................................
2025-03-31 12:58:51,116:INFO:Initializing evaluate_model()
2025-03-31 12:58:51,116:INFO:evaluate_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002A0E483B0A0>, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-31 12:58:51,285:INFO:Initializing plot_model()
2025-03-31 12:58:51,285:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002A0E483B0A0>, system=True)
2025-03-31 12:58:51,285:INFO:Checking exceptions
2025-03-31 12:58:51,286:INFO:Preloading libraries
2025-03-31 12:58:51,287:INFO:Copying training dataset
2025-03-31 12:58:51,287:INFO:Plot type: pipeline
2025-03-31 12:59:02,863:INFO:Visual Rendered Successfully
2025-03-31 12:59:02,976:INFO:plot_model() successfully completed......................................
2025-03-31 13:00:35,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:00:35,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:00:35,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:00:35,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:00:36,813:INFO:PyCaret AnomalyExperiment
2025-03-31 13:00:36,813:INFO:Logging name: anomaly-default-name
2025-03-31 13:00:36,814:INFO:ML Usecase: MLUsecase.ANOMALY
2025-03-31 13:00:36,814:INFO:version 3.3.2
2025-03-31 13:00:36,814:INFO:Initializing setup()
2025-03-31 13:00:36,814:INFO:self.USI: f235
2025-03-31 13:00:36,814:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'idx', '_ml_usecase', 'seed', 'log_plots_param', 'n_jobs_param', 'memory', 'X', '_available_plots', 'gpu_n_jobs_param', 'data', 'gpu_param', 'exp_id', 'logging_param', 'pipeline', 'USI'}
2025-03-31 13:00:36,814:INFO:Checking environment
2025-03-31 13:00:36,814:INFO:python_version: 3.9.20
2025-03-31 13:00:36,814:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:00:36,814:INFO:machine: AMD64
2025-03-31 13:00:36,823:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:00:36,830:INFO:Memory: svmem(total=16885276672, available=3540893696, percent=79.0, used=13344382976, free=3540893696)
2025-03-31 13:00:36,830:INFO:Physical Core: 4
2025-03-31 13:00:36,830:INFO:Logical Core: 8
2025-03-31 13:00:36,830:INFO:Checking libraries
2025-03-31 13:00:36,830:INFO:System:
2025-03-31 13:00:36,830:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:00:36,830:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:00:36,830:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:00:36,830:INFO:PyCaret required dependencies:
2025-03-31 13:00:37,367:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:00:37,875:INFO:                 pip: 25.0
2025-03-31 13:00:37,875:INFO:          setuptools: 75.8.0
2025-03-31 13:00:37,875:INFO:             pycaret: 3.3.2
2025-03-31 13:00:37,875:INFO:             IPython: 8.15.0
2025-03-31 13:00:37,875:INFO:          ipywidgets: 8.1.5
2025-03-31 13:00:37,875:INFO:                tqdm: 4.67.1
2025-03-31 13:00:37,875:INFO:               numpy: 1.26.4
2025-03-31 13:00:37,876:INFO:              pandas: 2.1.4
2025-03-31 13:00:37,876:INFO:              jinja2: 3.1.5
2025-03-31 13:00:37,876:INFO:               scipy: 1.11.4
2025-03-31 13:00:37,876:INFO:              joblib: 1.3.2
2025-03-31 13:00:37,876:INFO:             sklearn: 1.4.2
2025-03-31 13:00:37,876:INFO:                pyod: 2.0.4
2025-03-31 13:00:37,876:INFO:            imblearn: 0.12.3
2025-03-31 13:00:37,876:INFO:   category_encoders: 2.6.4
2025-03-31 13:00:37,876:INFO:            lightgbm: 4.6.0
2025-03-31 13:00:37,876:INFO:               numba: 0.60.0
2025-03-31 13:00:37,876:INFO:            requests: 2.32.3
2025-03-31 13:00:37,876:INFO:          matplotlib: 3.7.5
2025-03-31 13:00:37,876:INFO:          scikitplot: 0.3.7
2025-03-31 13:00:37,876:INFO:         yellowbrick: 1.5
2025-03-31 13:00:37,876:INFO:              plotly: 5.24.1
2025-03-31 13:00:37,876:INFO:    plotly-resampler: Not installed
2025-03-31 13:00:37,876:INFO:             kaleido: 0.2.1
2025-03-31 13:00:37,876:INFO:           schemdraw: 0.15
2025-03-31 13:00:37,876:INFO:         statsmodels: 0.14.4
2025-03-31 13:00:37,876:INFO:              sktime: 0.26.0
2025-03-31 13:00:37,876:INFO:               tbats: 1.1.3
2025-03-31 13:00:37,876:INFO:            pmdarima: 2.0.4
2025-03-31 13:00:37,876:INFO:              psutil: 5.9.0
2025-03-31 13:00:37,876:INFO:          markupsafe: 3.0.2
2025-03-31 13:00:37,876:INFO:             pickle5: Not installed
2025-03-31 13:00:37,876:INFO:         cloudpickle: 3.0.0
2025-03-31 13:00:37,876:INFO:         deprecation: 2.1.0
2025-03-31 13:00:37,876:INFO:              xxhash: 3.5.0
2025-03-31 13:00:37,876:INFO:           wurlitzer: Not installed
2025-03-31 13:00:37,876:INFO:PyCaret optional dependencies:
2025-03-31 13:00:37,889:INFO:                shap: Not installed
2025-03-31 13:00:37,889:INFO:           interpret: Not installed
2025-03-31 13:00:37,889:INFO:                umap: Not installed
2025-03-31 13:00:37,889:INFO:     ydata_profiling: Not installed
2025-03-31 13:00:37,889:INFO:  explainerdashboard: Not installed
2025-03-31 13:00:37,889:INFO:             autoviz: Not installed
2025-03-31 13:00:37,889:INFO:           fairlearn: Not installed
2025-03-31 13:00:37,889:INFO:          deepchecks: Not installed
2025-03-31 13:00:37,889:INFO:             xgboost: Not installed
2025-03-31 13:00:37,889:INFO:            catboost: Not installed
2025-03-31 13:00:37,889:INFO:              kmodes: Not installed
2025-03-31 13:00:37,889:INFO:             mlxtend: Not installed
2025-03-31 13:00:37,889:INFO:       statsforecast: Not installed
2025-03-31 13:00:37,889:INFO:        tune_sklearn: Not installed
2025-03-31 13:00:37,889:INFO:                 ray: Not installed
2025-03-31 13:00:37,889:INFO:            hyperopt: Not installed
2025-03-31 13:00:37,889:INFO:              optuna: Not installed
2025-03-31 13:00:37,889:INFO:               skopt: Not installed
2025-03-31 13:00:37,889:INFO:              mlflow: Not installed
2025-03-31 13:00:37,889:INFO:              gradio: Not installed
2025-03-31 13:00:37,889:INFO:             fastapi: Not installed
2025-03-31 13:00:37,889:INFO:             uvicorn: Not installed
2025-03-31 13:00:37,889:INFO:              m2cgen: Not installed
2025-03-31 13:00:37,889:INFO:           evidently: Not installed
2025-03-31 13:00:37,889:INFO:               fugue: Not installed
2025-03-31 13:00:37,889:INFO:           streamlit: 1.20.0
2025-03-31 13:00:37,889:INFO:             prophet: Not installed
2025-03-31 13:00:37,889:INFO:None
2025-03-31 13:00:37,889:INFO:Set up data.
2025-03-31 13:00:37,891:INFO:Set up index.
2025-03-31 13:00:37,891:INFO:Assigning column types.
2025-03-31 13:00:37,893:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:00:38,308:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:00:38,311:INFO:Preparing preprocessing pipeline...
2025-03-31 13:00:38,311:INFO:Set up simple imputation.
2025-03-31 13:00:38,325:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:00:38,328:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Col1', 'Col2', 'Col3', 'Col4',
                                             'Col5', 'Col6', 'Col7', 'Col8',
                                             'Col9', 'Col10'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-03-31 13:00:38,328:INFO:Creating final display dataframe.
2025-03-31 13:00:38,340:INFO:Setup _display_container:                Description                 Value
0               Session id                   696
1      Original data shape            (1000, 10)
2   Transformed data shape            (1000, 10)
3         Numeric features                    10
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                 CPU Jobs                    -1
9                  Use GPU                 False
10          Log Experiment                 False
11         Experiment Name  anomaly-default-name
12                     USI                  f235
2025-03-31 13:00:38,343:INFO:setup() successfully completed in 1.53s...............
2025-03-31 13:00:38,343:INFO:Initializing create_model()
2025-03-31 13:00:38,343:INFO:create_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002055827A100>, estimator=knn, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:00:38,343:INFO:Checking exceptions
2025-03-31 13:00:38,352:INFO:Importing untrained model
2025-03-31 13:00:38,353:INFO:K-Nearest Neighbors Detector Imported successfully
2025-03-31 13:00:38,353:INFO:Fitting Model
2025-03-31 13:00:38,388:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2025-03-31 13:00:38,388:INFO:create_models() successfully completed......................................
2025-03-31 13:00:38,389:INFO:Uploading results into container
2025-03-31 13:00:38,389:INFO:Uploading model into container now
2025-03-31 13:00:38,389:INFO:_master_model_container: 1
2025-03-31 13:00:38,389:INFO:_display_container: 1
2025-03-31 13:00:38,389:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2025-03-31 13:00:38,389:INFO:create_model() successfully completed......................................
2025-03-31 13:00:38,503:INFO:Initializing assign_model()
2025-03-31 13:00:38,503:INFO:assign_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002055827A100>, model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), transformation=False, score=True, verbose=True)
2025-03-31 13:00:38,503:INFO:Checking exceptions
2025-03-31 13:00:38,503:INFO:Determining Trained Model
2025-03-31 13:00:38,503:INFO:Trained Model : K-Nearest Neighbors Detector
2025-03-31 13:00:38,503:INFO:Copying data
2025-03-31 13:00:38,504:INFO:(1000, 12)
2025-03-31 13:00:38,504:INFO:assign_model() successfully completed......................................
2025-03-31 13:00:38,505:INFO:Initializing plot_model()
2025-03-31 13:00:38,505:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002055827A100>, system=True)
2025-03-31 13:00:38,505:INFO:Checking exceptions
2025-03-31 13:00:38,505:INFO:Preloading libraries
2025-03-31 13:00:38,505:INFO:Copying training dataset
2025-03-31 13:00:38,505:INFO:Plot type: tsne
2025-03-31 13:00:38,506:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:00:38,506:INFO:Initializing assign_model()
2025-03-31 13:00:38,506:INFO:assign_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002055827A100>, model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), transformation=True, score=False, verbose=False)
2025-03-31 13:00:38,506:INFO:Checking exceptions
2025-03-31 13:00:38,506:INFO:Determining Trained Model
2025-03-31 13:00:38,506:INFO:Trained Model : K-Nearest Neighbors Detector
2025-03-31 13:00:38,506:INFO:Copying data
2025-03-31 13:00:38,514:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:00:38,514:INFO:(1000, 11)
2025-03-31 13:00:38,515:INFO:assign_model() successfully completed......................................
2025-03-31 13:00:38,515:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:00:38,515:INFO:Getting dummies to cast categorical variables
2025-03-31 13:00:38,515:INFO:Fitting TSNE()
2025-03-31 13:00:45,292:INFO:Rendering Visual
2025-03-31 13:00:46,682:INFO:Visual Rendered Successfully
2025-03-31 13:00:46,815:INFO:plot_model() successfully completed......................................
2025-03-31 13:00:46,815:INFO:Initializing evaluate_model()
2025-03-31 13:00:46,815:INFO:evaluate_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002055827A100>, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-31 13:00:46,928:INFO:Initializing plot_model()
2025-03-31 13:00:46,928:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000002055827A100>, system=True)
2025-03-31 13:00:46,928:INFO:Checking exceptions
2025-03-31 13:00:46,930:INFO:Preloading libraries
2025-03-31 13:00:46,930:INFO:Copying training dataset
2025-03-31 13:00:46,930:INFO:Plot type: pipeline
2025-03-31 13:00:48,615:INFO:Visual Rendered Successfully
2025-03-31 13:00:48,731:INFO:plot_model() successfully completed......................................
2025-03-31 13:00:48,735:INFO:Initializing save_model()
2025-03-31 13:00:48,735:INFO:save_model(model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), model_name=best_anomaly_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Col1', 'Col2', 'Col3', 'Col4',
                                             'Col5', 'Col6', 'Col7', 'Col8',
                                             'Col9', 'Col10'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.ANOMALY, kwargs={})
2025-03-31 13:00:48,735:INFO:Adding model into prep_pipe
2025-03-31 13:00:48,738:INFO:best_anomaly_model.pkl saved in current working directory
2025-03-31 13:00:48,742:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Col1', 'Col2', 'Col3', 'Col4',
                                             'Col5', 'Col6', 'Col7', 'Col8',
                                             'Col9', 'Col10'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))])
2025-03-31 13:00:48,742:INFO:save_model() successfully completed......................................
2025-03-31 13:07:33,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:07:33,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:07:33,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:07:33,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:07:34,800:INFO:PyCaret AnomalyExperiment
2025-03-31 13:07:34,800:INFO:Logging name: anomaly-default-name
2025-03-31 13:07:34,800:INFO:ML Usecase: MLUsecase.ANOMALY
2025-03-31 13:07:34,800:INFO:version 3.3.2
2025-03-31 13:07:34,800:INFO:Initializing setup()
2025-03-31 13:07:34,800:INFO:self.USI: 0b99
2025-03-31 13:07:34,800:INFO:self._variable_keys: {'html_param', 'gpu_param', 'X', 'memory', 'seed', '_ml_usecase', '_available_plots', 'USI', 'gpu_n_jobs_param', 'logging_param', 'log_plots_param', 'pipeline', 'exp_name_log', 'exp_id', 'n_jobs_param', 'idx', 'data'}
2025-03-31 13:07:34,800:INFO:Checking environment
2025-03-31 13:07:34,800:INFO:python_version: 3.9.20
2025-03-31 13:07:34,800:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:07:34,800:INFO:machine: AMD64
2025-03-31 13:07:34,810:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:07:34,817:INFO:Memory: svmem(total=16885276672, available=3388448768, percent=79.9, used=13496827904, free=3388448768)
2025-03-31 13:07:34,817:INFO:Physical Core: 4
2025-03-31 13:07:34,817:INFO:Logical Core: 8
2025-03-31 13:07:34,817:INFO:Checking libraries
2025-03-31 13:07:34,817:INFO:System:
2025-03-31 13:07:34,817:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:07:34,817:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:07:34,817:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:07:34,817:INFO:PyCaret required dependencies:
2025-03-31 13:07:35,378:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:07:35,913:INFO:                 pip: 25.0
2025-03-31 13:07:35,913:INFO:          setuptools: 75.8.0
2025-03-31 13:07:35,913:INFO:             pycaret: 3.3.2
2025-03-31 13:07:35,913:INFO:             IPython: 8.15.0
2025-03-31 13:07:35,913:INFO:          ipywidgets: 8.1.5
2025-03-31 13:07:35,913:INFO:                tqdm: 4.67.1
2025-03-31 13:07:35,913:INFO:               numpy: 1.26.4
2025-03-31 13:07:35,913:INFO:              pandas: 2.1.4
2025-03-31 13:07:35,913:INFO:              jinja2: 3.1.5
2025-03-31 13:07:35,913:INFO:               scipy: 1.11.4
2025-03-31 13:07:35,914:INFO:              joblib: 1.3.2
2025-03-31 13:07:35,914:INFO:             sklearn: 1.4.2
2025-03-31 13:07:35,914:INFO:                pyod: 2.0.4
2025-03-31 13:07:35,914:INFO:            imblearn: 0.12.3
2025-03-31 13:07:35,914:INFO:   category_encoders: 2.6.4
2025-03-31 13:07:35,914:INFO:            lightgbm: 4.6.0
2025-03-31 13:07:35,914:INFO:               numba: 0.60.0
2025-03-31 13:07:35,914:INFO:            requests: 2.32.3
2025-03-31 13:07:35,914:INFO:          matplotlib: 3.7.5
2025-03-31 13:07:35,914:INFO:          scikitplot: 0.3.7
2025-03-31 13:07:35,914:INFO:         yellowbrick: 1.5
2025-03-31 13:07:35,914:INFO:              plotly: 5.24.1
2025-03-31 13:07:35,914:INFO:    plotly-resampler: Not installed
2025-03-31 13:07:35,914:INFO:             kaleido: 0.2.1
2025-03-31 13:07:35,914:INFO:           schemdraw: 0.15
2025-03-31 13:07:35,914:INFO:         statsmodels: 0.14.4
2025-03-31 13:07:35,914:INFO:              sktime: 0.26.0
2025-03-31 13:07:35,914:INFO:               tbats: 1.1.3
2025-03-31 13:07:35,914:INFO:            pmdarima: 2.0.4
2025-03-31 13:07:35,914:INFO:              psutil: 5.9.0
2025-03-31 13:07:35,914:INFO:          markupsafe: 3.0.2
2025-03-31 13:07:35,914:INFO:             pickle5: Not installed
2025-03-31 13:07:35,914:INFO:         cloudpickle: 3.0.0
2025-03-31 13:07:35,914:INFO:         deprecation: 2.1.0
2025-03-31 13:07:35,914:INFO:              xxhash: 3.5.0
2025-03-31 13:07:35,914:INFO:           wurlitzer: Not installed
2025-03-31 13:07:35,914:INFO:PyCaret optional dependencies:
2025-03-31 13:07:35,927:INFO:                shap: Not installed
2025-03-31 13:07:35,927:INFO:           interpret: Not installed
2025-03-31 13:07:35,927:INFO:                umap: Not installed
2025-03-31 13:07:35,927:INFO:     ydata_profiling: Not installed
2025-03-31 13:07:35,927:INFO:  explainerdashboard: Not installed
2025-03-31 13:07:35,927:INFO:             autoviz: Not installed
2025-03-31 13:07:35,927:INFO:           fairlearn: Not installed
2025-03-31 13:07:35,927:INFO:          deepchecks: Not installed
2025-03-31 13:07:35,927:INFO:             xgboost: Not installed
2025-03-31 13:07:35,927:INFO:            catboost: Not installed
2025-03-31 13:07:35,927:INFO:              kmodes: Not installed
2025-03-31 13:07:35,927:INFO:             mlxtend: Not installed
2025-03-31 13:07:35,927:INFO:       statsforecast: Not installed
2025-03-31 13:07:35,927:INFO:        tune_sklearn: Not installed
2025-03-31 13:07:35,927:INFO:                 ray: Not installed
2025-03-31 13:07:35,927:INFO:            hyperopt: Not installed
2025-03-31 13:07:35,927:INFO:              optuna: Not installed
2025-03-31 13:07:35,927:INFO:               skopt: Not installed
2025-03-31 13:07:35,927:INFO:              mlflow: Not installed
2025-03-31 13:07:35,927:INFO:              gradio: Not installed
2025-03-31 13:07:35,927:INFO:             fastapi: Not installed
2025-03-31 13:07:35,927:INFO:             uvicorn: Not installed
2025-03-31 13:07:35,927:INFO:              m2cgen: Not installed
2025-03-31 13:07:35,927:INFO:           evidently: Not installed
2025-03-31 13:07:35,927:INFO:               fugue: Not installed
2025-03-31 13:07:35,927:INFO:           streamlit: 1.20.0
2025-03-31 13:07:35,927:INFO:             prophet: Not installed
2025-03-31 13:07:35,927:INFO:None
2025-03-31 13:07:35,927:INFO:Set up data.
2025-03-31 13:07:35,929:INFO:Set up index.
2025-03-31 13:07:35,930:INFO:Assigning column types.
2025-03-31 13:07:35,932:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:07:36,511:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:07:36,512:INFO:Preparing preprocessing pipeline...
2025-03-31 13:07:36,513:INFO:Set up simple imputation.
2025-03-31 13:07:36,563:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:07:36,566:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Col1', 'Col2', 'Col3', 'Col4',
                                             'Col5', 'Col6', 'Col7', 'Col8',
                                             'Col9', 'Col10'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-03-31 13:07:36,566:INFO:Creating final display dataframe.
2025-03-31 13:07:36,597:INFO:Setup _display_container:                Description                 Value
0               Session id                  8043
1      Original data shape            (1000, 10)
2   Transformed data shape            (1000, 10)
3         Numeric features                    10
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                 CPU Jobs                    -1
9                  Use GPU                 False
10          Log Experiment                 False
11         Experiment Name  anomaly-default-name
12                     USI                  0b99
2025-03-31 13:07:36,604:INFO:setup() successfully completed in 1.81s...............
2025-03-31 13:07:36,604:INFO:Initializing create_model()
2025-03-31 13:07:36,604:INFO:create_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001F6FD6BA100>, estimator=knn, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:07:36,604:INFO:Checking exceptions
2025-03-31 13:07:36,614:INFO:Importing untrained model
2025-03-31 13:07:36,615:INFO:K-Nearest Neighbors Detector Imported successfully
2025-03-31 13:07:36,615:INFO:Fitting Model
2025-03-31 13:07:36,646:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2025-03-31 13:07:36,646:INFO:create_models() successfully completed......................................
2025-03-31 13:07:36,646:INFO:Uploading results into container
2025-03-31 13:07:36,646:INFO:Uploading model into container now
2025-03-31 13:07:36,646:INFO:_master_model_container: 1
2025-03-31 13:07:36,646:INFO:_display_container: 1
2025-03-31 13:07:36,647:INFO:KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0)
2025-03-31 13:07:36,647:INFO:create_model() successfully completed......................................
2025-03-31 13:07:36,757:INFO:Initializing assign_model()
2025-03-31 13:07:36,757:INFO:assign_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001F6FD6BA100>, model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), transformation=False, score=True, verbose=True)
2025-03-31 13:07:36,757:INFO:Checking exceptions
2025-03-31 13:07:36,757:INFO:Determining Trained Model
2025-03-31 13:07:36,757:INFO:Trained Model : K-Nearest Neighbors Detector
2025-03-31 13:07:36,757:INFO:Copying data
2025-03-31 13:07:36,759:INFO:(1000, 12)
2025-03-31 13:07:36,759:INFO:assign_model() successfully completed......................................
2025-03-31 13:07:36,759:INFO:Initializing plot_model()
2025-03-31 13:07:36,759:INFO:plot_model(plot=tsne, fold=None, verbose=True, display=None, display_format=None, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001F6FD6BA100>, system=True)
2025-03-31 13:07:36,759:INFO:Checking exceptions
2025-03-31 13:07:36,760:INFO:Preloading libraries
2025-03-31 13:07:36,760:INFO:Copying training dataset
2025-03-31 13:07:36,760:INFO:Plot type: tsne
2025-03-31 13:07:36,761:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:07:36,761:INFO:Initializing assign_model()
2025-03-31 13:07:36,761:INFO:assign_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001F6FD6BA100>, model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), transformation=True, score=False, verbose=False)
2025-03-31 13:07:36,761:INFO:Checking exceptions
2025-03-31 13:07:36,761:INFO:Determining Trained Model
2025-03-31 13:07:36,761:INFO:Trained Model : K-Nearest Neighbors Detector
2025-03-31 13:07:36,761:INFO:Copying data
2025-03-31 13:07:36,768:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:07:36,769:INFO:(1000, 11)
2025-03-31 13:07:36,769:INFO:assign_model() successfully completed......................................
2025-03-31 13:07:36,769:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:07:36,769:INFO:Getting dummies to cast categorical variables
2025-03-31 13:07:36,769:INFO:Fitting TSNE()
2025-03-31 13:07:43,584:INFO:Rendering Visual
2025-03-31 13:07:44,918:INFO:Visual Rendered Successfully
2025-03-31 13:07:45,051:INFO:plot_model() successfully completed......................................
2025-03-31 13:07:45,052:INFO:Initializing evaluate_model()
2025-03-31 13:07:45,052:INFO:evaluate_model(self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001F6FD6BA100>, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-31 13:07:45,171:INFO:Initializing plot_model()
2025-03-31 13:07:45,172:INFO:plot_model(plot=pipeline, fold=None, verbose=False, display=None, display_format=None, estimator=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.anomaly.oop.AnomalyExperiment object at 0x000001F6FD6BA100>, system=True)
2025-03-31 13:07:45,172:INFO:Checking exceptions
2025-03-31 13:07:45,173:INFO:Preloading libraries
2025-03-31 13:07:45,173:INFO:Copying training dataset
2025-03-31 13:07:45,174:INFO:Plot type: pipeline
2025-03-31 13:07:47,753:INFO:Visual Rendered Successfully
2025-03-31 13:07:47,875:INFO:plot_model() successfully completed......................................
2025-03-31 13:07:47,879:INFO:Initializing save_model()
2025-03-31 13:07:47,879:INFO:save_model(model=KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0), model_name=best_anomaly_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Col1', 'Col2', 'Col3', 'Col4',
                                             'Col5', 'Col6', 'Col7', 'Col8',
                                             'Col9', 'Col10'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.ANOMALY, kwargs={})
2025-03-31 13:07:47,879:INFO:Adding model into prep_pipe
2025-03-31 13:07:47,882:INFO:best_anomaly_model.pkl saved in current working directory
2025-03-31 13:07:47,885:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Col1', 'Col2', 'Col3', 'Col4',
                                             'Col5', 'Col6', 'Col7', 'Col8',
                                             'Col9', 'Col10'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 KNN(algorithm='auto', contamination=0.05, leaf_size=30, method='largest',
  metric='minkowski', metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
  radius=1.0))])
2025-03-31 13:07:47,886:INFO:save_model() successfully completed......................................
2025-03-31 13:07:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:07:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:07:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:07:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:08:01,343:INFO:PyCaret ClusteringExperiment
2025-03-31 13:08:01,343:INFO:Logging name: cluster-default-name
2025-03-31 13:08:01,343:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-03-31 13:08:01,343:INFO:version 3.3.2
2025-03-31 13:08:01,343:INFO:Initializing setup()
2025-03-31 13:08:01,343:INFO:self.USI: 33c9
2025-03-31 13:08:01,343:INFO:self._variable_keys: {'logging_param', 'html_param', 'data', 'idx', 'exp_name_log', 'exp_id', 'X', 'n_jobs_param', 'pipeline', 'gpu_param', 'log_plots_param', 'gpu_n_jobs_param', '_available_plots', '_ml_usecase', 'memory', 'USI', 'seed'}
2025-03-31 13:08:01,343:INFO:Checking environment
2025-03-31 13:08:01,343:INFO:python_version: 3.9.20
2025-03-31 13:08:01,343:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:08:01,343:INFO:machine: AMD64
2025-03-31 13:08:01,354:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:08:01,361:INFO:Memory: svmem(total=16885276672, available=3161579520, percent=81.3, used=13723697152, free=3161579520)
2025-03-31 13:08:01,361:INFO:Physical Core: 4
2025-03-31 13:08:01,361:INFO:Logical Core: 8
2025-03-31 13:08:01,361:INFO:Checking libraries
2025-03-31 13:08:01,361:INFO:System:
2025-03-31 13:08:01,361:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:08:01,361:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:08:01,361:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:08:01,361:INFO:PyCaret required dependencies:
2025-03-31 13:08:01,873:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:08:02,492:INFO:                 pip: 25.0
2025-03-31 13:08:02,492:INFO:          setuptools: 75.8.0
2025-03-31 13:08:02,492:INFO:             pycaret: 3.3.2
2025-03-31 13:08:02,492:INFO:             IPython: 8.15.0
2025-03-31 13:08:02,492:INFO:          ipywidgets: 8.1.5
2025-03-31 13:08:02,492:INFO:                tqdm: 4.67.1
2025-03-31 13:08:02,493:INFO:               numpy: 1.26.4
2025-03-31 13:08:02,493:INFO:              pandas: 2.1.4
2025-03-31 13:08:02,493:INFO:              jinja2: 3.1.5
2025-03-31 13:08:02,493:INFO:               scipy: 1.11.4
2025-03-31 13:08:02,493:INFO:              joblib: 1.3.2
2025-03-31 13:08:02,493:INFO:             sklearn: 1.4.2
2025-03-31 13:08:02,493:INFO:                pyod: 2.0.4
2025-03-31 13:08:02,493:INFO:            imblearn: 0.12.3
2025-03-31 13:08:02,493:INFO:   category_encoders: 2.6.4
2025-03-31 13:08:02,493:INFO:            lightgbm: 4.6.0
2025-03-31 13:08:02,493:INFO:               numba: 0.60.0
2025-03-31 13:08:02,493:INFO:            requests: 2.32.3
2025-03-31 13:08:02,493:INFO:          matplotlib: 3.7.5
2025-03-31 13:08:02,493:INFO:          scikitplot: 0.3.7
2025-03-31 13:08:02,493:INFO:         yellowbrick: 1.5
2025-03-31 13:08:02,493:INFO:              plotly: 5.24.1
2025-03-31 13:08:02,493:INFO:    plotly-resampler: Not installed
2025-03-31 13:08:02,493:INFO:             kaleido: 0.2.1
2025-03-31 13:08:02,493:INFO:           schemdraw: 0.15
2025-03-31 13:08:02,493:INFO:         statsmodels: 0.14.4
2025-03-31 13:08:02,493:INFO:              sktime: 0.26.0
2025-03-31 13:08:02,493:INFO:               tbats: 1.1.3
2025-03-31 13:08:02,493:INFO:            pmdarima: 2.0.4
2025-03-31 13:08:02,493:INFO:              psutil: 5.9.0
2025-03-31 13:08:02,493:INFO:          markupsafe: 3.0.2
2025-03-31 13:08:02,493:INFO:             pickle5: Not installed
2025-03-31 13:08:02,493:INFO:         cloudpickle: 3.0.0
2025-03-31 13:08:02,494:INFO:         deprecation: 2.1.0
2025-03-31 13:08:02,494:INFO:              xxhash: 3.5.0
2025-03-31 13:08:02,494:INFO:           wurlitzer: Not installed
2025-03-31 13:08:02,494:INFO:PyCaret optional dependencies:
2025-03-31 13:08:02,510:INFO:                shap: Not installed
2025-03-31 13:08:02,510:INFO:           interpret: Not installed
2025-03-31 13:08:02,510:INFO:                umap: Not installed
2025-03-31 13:08:02,510:INFO:     ydata_profiling: Not installed
2025-03-31 13:08:02,510:INFO:  explainerdashboard: Not installed
2025-03-31 13:08:02,510:INFO:             autoviz: Not installed
2025-03-31 13:08:02,510:INFO:           fairlearn: Not installed
2025-03-31 13:08:02,510:INFO:          deepchecks: Not installed
2025-03-31 13:08:02,510:INFO:             xgboost: Not installed
2025-03-31 13:08:02,510:INFO:            catboost: Not installed
2025-03-31 13:08:02,510:INFO:              kmodes: Not installed
2025-03-31 13:08:02,510:INFO:             mlxtend: Not installed
2025-03-31 13:08:02,510:INFO:       statsforecast: Not installed
2025-03-31 13:08:02,510:INFO:        tune_sklearn: Not installed
2025-03-31 13:08:02,511:INFO:                 ray: Not installed
2025-03-31 13:08:02,511:INFO:            hyperopt: Not installed
2025-03-31 13:08:02,511:INFO:              optuna: Not installed
2025-03-31 13:08:02,511:INFO:               skopt: Not installed
2025-03-31 13:08:02,511:INFO:              mlflow: Not installed
2025-03-31 13:08:02,511:INFO:              gradio: Not installed
2025-03-31 13:08:02,511:INFO:             fastapi: Not installed
2025-03-31 13:08:02,511:INFO:             uvicorn: Not installed
2025-03-31 13:08:02,511:INFO:              m2cgen: Not installed
2025-03-31 13:08:02,511:INFO:           evidently: Not installed
2025-03-31 13:08:02,511:INFO:               fugue: Not installed
2025-03-31 13:08:02,511:INFO:           streamlit: 1.20.0
2025-03-31 13:08:02,511:INFO:             prophet: Not installed
2025-03-31 13:08:02,511:INFO:None
2025-03-31 13:08:02,511:INFO:Set up data.
2025-03-31 13:08:02,515:INFO:Set up index.
2025-03-31 13:08:02,516:INFO:Assigning column types.
2025-03-31 13:08:02,518:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:08:02,518:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:08:02,518:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:02,518:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:08:02,518:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:02,518:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:08:02,518:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:02,519:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:02,520:INFO:Preparing preprocessing pipeline...
2025-03-31 13:08:02,520:INFO:Set up simple imputation.
2025-03-31 13:08:02,523:INFO:Set up encoding of categorical features.
2025-03-31 13:08:02,587:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:08:02,593:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:08:02,593:INFO:Creating final display dataframe.
2025-03-31 13:08:02,672:INFO:Setup _display_container:                  Description                 Value
0                 Session id                  6795
1        Original data shape             (224, 21)
2     Transformed data shape            (224, 244)
3           Numeric features                    20
4       Categorical features                     1
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                  CPU Jobs                    -1
12                   Use GPU                 False
13            Log Experiment                 False
14           Experiment Name  cluster-default-name
15                       USI                  33c9
2025-03-31 13:08:02,675:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:02,675:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:02,675:INFO:setup() successfully completed in 1.34s...............
2025-03-31 13:08:02,675:INFO:Initializing create_model()
2025-03-31 13:08:02,675:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001B34C097E20>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:08:02,675:INFO:Checking exceptions
2025-03-31 13:08:02,752:INFO:Importing untrained model
2025-03-31 13:08:02,752:INFO:K-Means Clustering Imported successfully
2025-03-31 13:08:02,755:INFO:Fitting Model
2025-03-31 13:08:02,990:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-03-31 13:08:03,012:INFO:KMeans(n_clusters=4, random_state=6795)
2025-03-31 13:08:03,012:INFO:create_models() successfully completed......................................
2025-03-31 13:08:03,012:INFO:Uploading results into container
2025-03-31 13:08:03,012:INFO:Uploading model into container now
2025-03-31 13:08:03,020:INFO:_master_model_container: 1
2025-03-31 13:08:03,020:INFO:_display_container: 2
2025-03-31 13:08:03,020:INFO:KMeans(n_clusters=4, random_state=6795)
2025-03-31 13:08:03,021:INFO:create_model() successfully completed......................................
2025-03-31 13:08:03,136:INFO:Initializing assign_model()
2025-03-31 13:08:03,136:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001B34C097E20>, model=KMeans(n_clusters=4, random_state=6795), transformation=False, score=True, verbose=True)
2025-03-31 13:08:03,136:INFO:Checking exceptions
2025-03-31 13:08:03,136:INFO:Determining Trained Model
2025-03-31 13:08:03,136:INFO:Trained Model : K-Means Clustering
2025-03-31 13:08:03,136:INFO:Copying data
2025-03-31 13:08:03,138:INFO:(224, 22)
2025-03-31 13:08:03,138:INFO:assign_model() successfully completed......................................
2025-03-31 13:08:03,138:INFO:Initializing plot_model()
2025-03-31 13:08:03,138:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=6795), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001B34C097E20>, system=True)
2025-03-31 13:08:03,138:INFO:Checking exceptions
2025-03-31 13:08:03,140:INFO:Preloading libraries
2025-03-31 13:08:03,140:INFO:Copying training dataset
2025-03-31 13:08:03,140:INFO:Plot type: cluster
2025-03-31 13:08:03,140:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:08:03,140:INFO:Initializing assign_model()
2025-03-31 13:08:03,140:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001B34C097E20>, model=KMeans(n_clusters=4, random_state=6795), transformation=True, score=True, verbose=False)
2025-03-31 13:08:03,140:INFO:Checking exceptions
2025-03-31 13:08:03,140:INFO:Determining Trained Model
2025-03-31 13:08:03,140:INFO:Trained Model : K-Means Clustering
2025-03-31 13:08:03,140:INFO:Copying data
2025-03-31 13:08:03,227:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:08:03,227:INFO:(224, 245)
2025-03-31 13:08:03,227:INFO:assign_model() successfully completed......................................
2025-03-31 13:08:03,228:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:08:03,228:INFO:Fitting PCA()
2025-03-31 13:08:03,279:INFO:Sorting dataframe
2025-03-31 13:08:03,280:INFO:Rendering Visual
2025-03-31 13:08:04,576:INFO:Visual Rendered Successfully
2025-03-31 13:08:04,693:INFO:plot_model() successfully completed......................................
2025-03-31 13:08:35,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:08:35,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:08:35,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:08:35,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:08:37,005:INFO:PyCaret ClusteringExperiment
2025-03-31 13:08:37,005:INFO:Logging name: cluster-default-name
2025-03-31 13:08:37,005:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-03-31 13:08:37,005:INFO:version 3.3.2
2025-03-31 13:08:37,005:INFO:Initializing setup()
2025-03-31 13:08:37,005:INFO:self.USI: b00b
2025-03-31 13:08:37,005:INFO:self._variable_keys: {'log_plots_param', 'seed', 'gpu_param', 'USI', 'pipeline', 'X', 'gpu_n_jobs_param', 'memory', 'logging_param', 'idx', '_available_plots', 'exp_name_log', 'data', 'n_jobs_param', 'exp_id', '_ml_usecase', 'html_param'}
2025-03-31 13:08:37,005:INFO:Checking environment
2025-03-31 13:08:37,005:INFO:python_version: 3.9.20
2025-03-31 13:08:37,005:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:08:37,005:INFO:machine: AMD64
2025-03-31 13:08:37,015:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:08:37,023:INFO:Memory: svmem(total=16885276672, available=3612102656, percent=78.6, used=13273174016, free=3612102656)
2025-03-31 13:08:37,023:INFO:Physical Core: 4
2025-03-31 13:08:37,023:INFO:Logical Core: 8
2025-03-31 13:08:37,023:INFO:Checking libraries
2025-03-31 13:08:37,023:INFO:System:
2025-03-31 13:08:37,023:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:08:37,023:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:08:37,023:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:08:37,023:INFO:PyCaret required dependencies:
2025-03-31 13:08:37,666:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:08:38,200:INFO:                 pip: 25.0
2025-03-31 13:08:38,200:INFO:          setuptools: 75.8.0
2025-03-31 13:08:38,200:INFO:             pycaret: 3.3.2
2025-03-31 13:08:38,200:INFO:             IPython: 8.15.0
2025-03-31 13:08:38,200:INFO:          ipywidgets: 8.1.5
2025-03-31 13:08:38,200:INFO:                tqdm: 4.67.1
2025-03-31 13:08:38,200:INFO:               numpy: 1.26.4
2025-03-31 13:08:38,200:INFO:              pandas: 2.1.4
2025-03-31 13:08:38,200:INFO:              jinja2: 3.1.5
2025-03-31 13:08:38,200:INFO:               scipy: 1.11.4
2025-03-31 13:08:38,201:INFO:              joblib: 1.3.2
2025-03-31 13:08:38,201:INFO:             sklearn: 1.4.2
2025-03-31 13:08:38,201:INFO:                pyod: 2.0.4
2025-03-31 13:08:38,201:INFO:            imblearn: 0.12.3
2025-03-31 13:08:38,201:INFO:   category_encoders: 2.6.4
2025-03-31 13:08:38,201:INFO:            lightgbm: 4.6.0
2025-03-31 13:08:38,201:INFO:               numba: 0.60.0
2025-03-31 13:08:38,201:INFO:            requests: 2.32.3
2025-03-31 13:08:38,201:INFO:          matplotlib: 3.7.5
2025-03-31 13:08:38,201:INFO:          scikitplot: 0.3.7
2025-03-31 13:08:38,201:INFO:         yellowbrick: 1.5
2025-03-31 13:08:38,201:INFO:              plotly: 5.24.1
2025-03-31 13:08:38,201:INFO:    plotly-resampler: Not installed
2025-03-31 13:08:38,201:INFO:             kaleido: 0.2.1
2025-03-31 13:08:38,201:INFO:           schemdraw: 0.15
2025-03-31 13:08:38,201:INFO:         statsmodels: 0.14.4
2025-03-31 13:08:38,201:INFO:              sktime: 0.26.0
2025-03-31 13:08:38,201:INFO:               tbats: 1.1.3
2025-03-31 13:08:38,201:INFO:            pmdarima: 2.0.4
2025-03-31 13:08:38,201:INFO:              psutil: 5.9.0
2025-03-31 13:08:38,201:INFO:          markupsafe: 3.0.2
2025-03-31 13:08:38,201:INFO:             pickle5: Not installed
2025-03-31 13:08:38,201:INFO:         cloudpickle: 3.0.0
2025-03-31 13:08:38,201:INFO:         deprecation: 2.1.0
2025-03-31 13:08:38,201:INFO:              xxhash: 3.5.0
2025-03-31 13:08:38,201:INFO:           wurlitzer: Not installed
2025-03-31 13:08:38,201:INFO:PyCaret optional dependencies:
2025-03-31 13:08:38,214:INFO:                shap: Not installed
2025-03-31 13:08:38,214:INFO:           interpret: Not installed
2025-03-31 13:08:38,214:INFO:                umap: Not installed
2025-03-31 13:08:38,214:INFO:     ydata_profiling: Not installed
2025-03-31 13:08:38,214:INFO:  explainerdashboard: Not installed
2025-03-31 13:08:38,214:INFO:             autoviz: Not installed
2025-03-31 13:08:38,214:INFO:           fairlearn: Not installed
2025-03-31 13:08:38,214:INFO:          deepchecks: Not installed
2025-03-31 13:08:38,214:INFO:             xgboost: Not installed
2025-03-31 13:08:38,214:INFO:            catboost: Not installed
2025-03-31 13:08:38,214:INFO:              kmodes: Not installed
2025-03-31 13:08:38,214:INFO:             mlxtend: Not installed
2025-03-31 13:08:38,214:INFO:       statsforecast: Not installed
2025-03-31 13:08:38,214:INFO:        tune_sklearn: Not installed
2025-03-31 13:08:38,214:INFO:                 ray: Not installed
2025-03-31 13:08:38,214:INFO:            hyperopt: Not installed
2025-03-31 13:08:38,214:INFO:              optuna: Not installed
2025-03-31 13:08:38,214:INFO:               skopt: Not installed
2025-03-31 13:08:38,214:INFO:              mlflow: Not installed
2025-03-31 13:08:38,214:INFO:              gradio: Not installed
2025-03-31 13:08:38,214:INFO:             fastapi: Not installed
2025-03-31 13:08:38,214:INFO:             uvicorn: Not installed
2025-03-31 13:08:38,214:INFO:              m2cgen: Not installed
2025-03-31 13:08:38,214:INFO:           evidently: Not installed
2025-03-31 13:08:38,214:INFO:               fugue: Not installed
2025-03-31 13:08:38,214:INFO:           streamlit: 1.20.0
2025-03-31 13:08:38,214:INFO:             prophet: Not installed
2025-03-31 13:08:38,214:INFO:None
2025-03-31 13:08:38,214:INFO:Set up data.
2025-03-31 13:08:38,218:INFO:Set up index.
2025-03-31 13:08:38,218:INFO:Assigning column types.
2025-03-31 13:08:38,222:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:08:38,222:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:08:38,222:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:38,222:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:08:38,222:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:38,222:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:08:38,222:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:38,223:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:38,225:INFO:Preparing preprocessing pipeline...
2025-03-31 13:08:38,225:INFO:Set up simple imputation.
2025-03-31 13:08:38,226:INFO:Set up encoding of categorical features.
2025-03-31 13:08:38,292:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:08:38,299:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:08:38,299:INFO:Creating final display dataframe.
2025-03-31 13:08:38,381:INFO:Setup _display_container:                  Description                 Value
0                 Session id                  5545
1        Original data shape             (224, 21)
2     Transformed data shape            (224, 244)
3           Numeric features                    20
4       Categorical features                     1
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                  CPU Jobs                    -1
12                   Use GPU                 False
13            Log Experiment                 False
14           Experiment Name  cluster-default-name
15                       USI                  b00b
2025-03-31 13:08:38,382:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:38,382:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:08:38,382:INFO:setup() successfully completed in 1.38s...............
2025-03-31 13:08:38,382:INFO:Initializing create_model()
2025-03-31 13:08:38,382:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002267C727E20>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:08:38,382:INFO:Checking exceptions
2025-03-31 13:08:38,462:INFO:Importing untrained model
2025-03-31 13:08:38,462:INFO:K-Means Clustering Imported successfully
2025-03-31 13:08:38,465:INFO:Fitting Model
2025-03-31 13:08:38,673:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-03-31 13:08:38,689:INFO:KMeans(n_clusters=4, random_state=5545)
2025-03-31 13:08:38,690:INFO:create_models() successfully completed......................................
2025-03-31 13:08:38,690:INFO:Uploading results into container
2025-03-31 13:08:38,691:INFO:Uploading model into container now
2025-03-31 13:08:38,696:INFO:_master_model_container: 1
2025-03-31 13:08:38,696:INFO:_display_container: 2
2025-03-31 13:08:38,697:INFO:KMeans(n_clusters=4, random_state=5545)
2025-03-31 13:08:38,697:INFO:create_model() successfully completed......................................
2025-03-31 13:08:38,815:INFO:Initializing assign_model()
2025-03-31 13:08:38,815:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002267C727E20>, model=KMeans(n_clusters=4, random_state=5545), transformation=False, score=True, verbose=True)
2025-03-31 13:08:38,815:INFO:Checking exceptions
2025-03-31 13:08:38,815:INFO:Determining Trained Model
2025-03-31 13:08:38,816:INFO:Trained Model : K-Means Clustering
2025-03-31 13:08:38,816:INFO:Copying data
2025-03-31 13:08:38,817:INFO:(224, 22)
2025-03-31 13:08:38,817:INFO:assign_model() successfully completed......................................
2025-03-31 13:08:38,818:INFO:Initializing plot_model()
2025-03-31 13:08:38,818:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=5545), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002267C727E20>, system=True)
2025-03-31 13:08:38,818:INFO:Checking exceptions
2025-03-31 13:08:38,818:INFO:Preloading libraries
2025-03-31 13:08:38,818:INFO:Copying training dataset
2025-03-31 13:08:38,819:INFO:Plot type: cluster
2025-03-31 13:08:38,819:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:08:38,819:INFO:Initializing assign_model()
2025-03-31 13:08:38,819:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000002267C727E20>, model=KMeans(n_clusters=4, random_state=5545), transformation=True, score=True, verbose=False)
2025-03-31 13:08:38,819:INFO:Checking exceptions
2025-03-31 13:08:38,819:INFO:Determining Trained Model
2025-03-31 13:08:38,819:INFO:Trained Model : K-Means Clustering
2025-03-31 13:08:38,819:INFO:Copying data
2025-03-31 13:08:38,898:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:08:38,898:INFO:(224, 245)
2025-03-31 13:08:38,898:INFO:assign_model() successfully completed......................................
2025-03-31 13:08:38,898:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:08:38,899:INFO:Fitting PCA()
2025-03-31 13:08:38,920:INFO:Sorting dataframe
2025-03-31 13:08:38,921:INFO:Rendering Visual
2025-03-31 13:08:40,071:INFO:Visual Rendered Successfully
2025-03-31 13:08:40,183:INFO:plot_model() successfully completed......................................
2025-03-31 13:10:17,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:17,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:17,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:17,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:18,883:INFO:PyCaret ClusteringExperiment
2025-03-31 13:10:18,884:INFO:Logging name: cluster-default-name
2025-03-31 13:10:18,884:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-03-31 13:10:18,884:INFO:version 3.3.2
2025-03-31 13:10:18,884:INFO:Initializing setup()
2025-03-31 13:10:18,884:INFO:self.USI: f193
2025-03-31 13:10:18,884:INFO:self._variable_keys: {'idx', 'html_param', 'exp_name_log', 'X', 'USI', 'logging_param', 'pipeline', '_available_plots', 'gpu_n_jobs_param', '_ml_usecase', 'gpu_param', 'seed', 'exp_id', 'data', 'n_jobs_param', 'log_plots_param', 'memory'}
2025-03-31 13:10:18,884:INFO:Checking environment
2025-03-31 13:10:18,884:INFO:python_version: 3.9.20
2025-03-31 13:10:18,884:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:10:18,884:INFO:machine: AMD64
2025-03-31 13:10:18,893:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:10:18,898:INFO:Memory: svmem(total=16885276672, available=3560243200, percent=78.9, used=13325033472, free=3560243200)
2025-03-31 13:10:18,898:INFO:Physical Core: 4
2025-03-31 13:10:18,898:INFO:Logical Core: 8
2025-03-31 13:10:18,898:INFO:Checking libraries
2025-03-31 13:10:18,898:INFO:System:
2025-03-31 13:10:18,899:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:10:18,899:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:10:18,899:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:10:18,899:INFO:PyCaret required dependencies:
2025-03-31 13:10:19,449:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:10:19,944:INFO:                 pip: 25.0
2025-03-31 13:10:19,945:INFO:          setuptools: 75.8.0
2025-03-31 13:10:19,945:INFO:             pycaret: 3.3.2
2025-03-31 13:10:19,945:INFO:             IPython: 8.15.0
2025-03-31 13:10:19,945:INFO:          ipywidgets: 8.1.5
2025-03-31 13:10:19,945:INFO:                tqdm: 4.67.1
2025-03-31 13:10:19,945:INFO:               numpy: 1.26.4
2025-03-31 13:10:19,945:INFO:              pandas: 2.1.4
2025-03-31 13:10:19,945:INFO:              jinja2: 3.1.5
2025-03-31 13:10:19,945:INFO:               scipy: 1.11.4
2025-03-31 13:10:19,945:INFO:              joblib: 1.3.2
2025-03-31 13:10:19,945:INFO:             sklearn: 1.4.2
2025-03-31 13:10:19,945:INFO:                pyod: 2.0.4
2025-03-31 13:10:19,945:INFO:            imblearn: 0.12.3
2025-03-31 13:10:19,945:INFO:   category_encoders: 2.6.4
2025-03-31 13:10:19,945:INFO:            lightgbm: 4.6.0
2025-03-31 13:10:19,945:INFO:               numba: 0.60.0
2025-03-31 13:10:19,945:INFO:            requests: 2.32.3
2025-03-31 13:10:19,945:INFO:          matplotlib: 3.7.5
2025-03-31 13:10:19,945:INFO:          scikitplot: 0.3.7
2025-03-31 13:10:19,945:INFO:         yellowbrick: 1.5
2025-03-31 13:10:19,945:INFO:              plotly: 5.24.1
2025-03-31 13:10:19,945:INFO:    plotly-resampler: Not installed
2025-03-31 13:10:19,945:INFO:             kaleido: 0.2.1
2025-03-31 13:10:19,945:INFO:           schemdraw: 0.15
2025-03-31 13:10:19,945:INFO:         statsmodels: 0.14.4
2025-03-31 13:10:19,946:INFO:              sktime: 0.26.0
2025-03-31 13:10:19,946:INFO:               tbats: 1.1.3
2025-03-31 13:10:19,946:INFO:            pmdarima: 2.0.4
2025-03-31 13:10:19,946:INFO:              psutil: 5.9.0
2025-03-31 13:10:19,946:INFO:          markupsafe: 3.0.2
2025-03-31 13:10:19,946:INFO:             pickle5: Not installed
2025-03-31 13:10:19,946:INFO:         cloudpickle: 3.0.0
2025-03-31 13:10:19,946:INFO:         deprecation: 2.1.0
2025-03-31 13:10:19,946:INFO:              xxhash: 3.5.0
2025-03-31 13:10:19,946:INFO:           wurlitzer: Not installed
2025-03-31 13:10:19,946:INFO:PyCaret optional dependencies:
2025-03-31 13:10:19,959:INFO:                shap: Not installed
2025-03-31 13:10:19,959:INFO:           interpret: Not installed
2025-03-31 13:10:19,960:INFO:                umap: Not installed
2025-03-31 13:10:19,960:INFO:     ydata_profiling: Not installed
2025-03-31 13:10:19,960:INFO:  explainerdashboard: Not installed
2025-03-31 13:10:19,960:INFO:             autoviz: Not installed
2025-03-31 13:10:19,960:INFO:           fairlearn: Not installed
2025-03-31 13:10:19,960:INFO:          deepchecks: Not installed
2025-03-31 13:10:19,960:INFO:             xgboost: Not installed
2025-03-31 13:10:19,960:INFO:            catboost: Not installed
2025-03-31 13:10:19,960:INFO:              kmodes: Not installed
2025-03-31 13:10:19,960:INFO:             mlxtend: Not installed
2025-03-31 13:10:19,960:INFO:       statsforecast: Not installed
2025-03-31 13:10:19,960:INFO:        tune_sklearn: Not installed
2025-03-31 13:10:19,960:INFO:                 ray: Not installed
2025-03-31 13:10:19,960:INFO:            hyperopt: Not installed
2025-03-31 13:10:19,960:INFO:              optuna: Not installed
2025-03-31 13:10:19,960:INFO:               skopt: Not installed
2025-03-31 13:10:19,960:INFO:              mlflow: Not installed
2025-03-31 13:10:19,960:INFO:              gradio: Not installed
2025-03-31 13:10:19,960:INFO:             fastapi: Not installed
2025-03-31 13:10:19,960:INFO:             uvicorn: Not installed
2025-03-31 13:10:19,960:INFO:              m2cgen: Not installed
2025-03-31 13:10:19,960:INFO:           evidently: Not installed
2025-03-31 13:10:19,960:INFO:               fugue: Not installed
2025-03-31 13:10:19,960:INFO:           streamlit: 1.20.0
2025-03-31 13:10:19,960:INFO:             prophet: Not installed
2025-03-31 13:10:19,960:INFO:None
2025-03-31 13:10:19,960:INFO:Set up data.
2025-03-31 13:10:19,964:INFO:Set up index.
2025-03-31 13:10:19,964:INFO:Assigning column types.
2025-03-31 13:10:19,966:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:10:19,966:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:10:19,966:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:10:19,966:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:10:19,966:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:10:19,966:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:10:19,966:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:10:19,966:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:10:19,968:INFO:Preparing preprocessing pipeline...
2025-03-31 13:10:19,968:INFO:Set up simple imputation.
2025-03-31 13:10:19,969:INFO:Set up encoding of categorical features.
2025-03-31 13:10:20,030:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:10:20,036:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:10:20,036:INFO:Creating final display dataframe.
2025-03-31 13:10:20,110:INFO:Setup _display_container:                  Description                 Value
0                 Session id                  5861
1        Original data shape             (224, 21)
2     Transformed data shape            (224, 244)
3           Numeric features                    20
4       Categorical features                     1
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                  CPU Jobs                    -1
12                   Use GPU                 False
13            Log Experiment                 False
14           Experiment Name  cluster-default-name
15                       USI                  f193
2025-03-31 13:10:20,112:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:10:20,112:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:10:20,112:INFO:setup() successfully completed in 1.23s...............
2025-03-31 13:10:20,112:INFO:Initializing create_model()
2025-03-31 13:10:20,112:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000205303F7E20>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:10:20,112:INFO:Checking exceptions
2025-03-31 13:10:20,185:INFO:Importing untrained model
2025-03-31 13:10:20,185:INFO:K-Means Clustering Imported successfully
2025-03-31 13:10:20,188:INFO:Fitting Model
2025-03-31 13:10:20,418:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-03-31 13:10:20,434:INFO:KMeans(n_clusters=4, random_state=5861)
2025-03-31 13:10:20,434:INFO:create_models() successfully completed......................................
2025-03-31 13:10:20,434:INFO:Uploading results into container
2025-03-31 13:10:20,435:INFO:Uploading model into container now
2025-03-31 13:10:20,441:INFO:_master_model_container: 1
2025-03-31 13:10:20,441:INFO:_display_container: 2
2025-03-31 13:10:20,441:INFO:KMeans(n_clusters=4, random_state=5861)
2025-03-31 13:10:20,441:INFO:create_model() successfully completed......................................
2025-03-31 13:10:20,553:INFO:Initializing assign_model()
2025-03-31 13:10:20,553:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000205303F7E20>, model=KMeans(n_clusters=4, random_state=5861), transformation=False, score=True, verbose=True)
2025-03-31 13:10:20,553:INFO:Checking exceptions
2025-03-31 13:10:20,553:INFO:Determining Trained Model
2025-03-31 13:10:20,553:INFO:Trained Model : K-Means Clustering
2025-03-31 13:10:20,553:INFO:Copying data
2025-03-31 13:10:20,555:INFO:(224, 22)
2025-03-31 13:10:20,555:INFO:assign_model() successfully completed......................................
2025-03-31 13:10:20,555:INFO:Initializing plot_model()
2025-03-31 13:10:20,555:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=5861), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000205303F7E20>, system=True)
2025-03-31 13:10:20,555:INFO:Checking exceptions
2025-03-31 13:10:20,556:INFO:Preloading libraries
2025-03-31 13:10:20,556:INFO:Copying training dataset
2025-03-31 13:10:20,556:INFO:Plot type: cluster
2025-03-31 13:10:20,556:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:10:20,556:INFO:Initializing assign_model()
2025-03-31 13:10:20,556:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000205303F7E20>, model=KMeans(n_clusters=4, random_state=5861), transformation=True, score=True, verbose=False)
2025-03-31 13:10:20,556:INFO:Checking exceptions
2025-03-31 13:10:20,556:INFO:Determining Trained Model
2025-03-31 13:10:20,556:INFO:Trained Model : K-Means Clustering
2025-03-31 13:10:20,556:INFO:Copying data
2025-03-31 13:10:20,643:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:10:20,643:INFO:(224, 245)
2025-03-31 13:10:20,643:INFO:assign_model() successfully completed......................................
2025-03-31 13:10:20,644:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:10:20,645:INFO:Fitting PCA()
2025-03-31 13:10:20,668:INFO:Sorting dataframe
2025-03-31 13:10:20,668:INFO:Rendering Visual
2025-03-31 13:10:21,804:INFO:Visual Rendered Successfully
2025-03-31 13:10:21,912:INFO:plot_model() successfully completed......................................
2025-03-31 13:10:21,917:INFO:Initializing save_model()
2025-03-31 13:10:21,917:INFO:save_model(model=KMeans(n_clusters=4, random_state=5861), model_name=saved_kmeans_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-03-31 13:10:21,917:INFO:Adding model into prep_pipe
2025-03-31 13:10:21,924:INFO:saved_kmeans_model.pkl saved in current working directory
2025-03-31 13:10:21,928:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', KMeans(n_clusters=4, random_state=5861))])
2025-03-31 13:10:21,928:INFO:save_model() successfully completed......................................
2025-03-31 13:10:58,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:58,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:58,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:58,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:10:59,303:INFO:PyCaret ClusteringExperiment
2025-03-31 13:10:59,303:INFO:Logging name: cluster-default-name
2025-03-31 13:10:59,303:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-03-31 13:10:59,303:INFO:version 3.3.2
2025-03-31 13:10:59,303:INFO:Initializing setup()
2025-03-31 13:10:59,303:INFO:self.USI: 9bb4
2025-03-31 13:10:59,303:INFO:self._variable_keys: {'gpu_n_jobs_param', 'exp_id', '_ml_usecase', 'log_plots_param', 'idx', 'html_param', '_available_plots', 'memory', 'seed', 'data', 'n_jobs_param', 'USI', 'pipeline', 'exp_name_log', 'gpu_param', 'X', 'logging_param'}
2025-03-31 13:10:59,303:INFO:Checking environment
2025-03-31 13:10:59,303:INFO:python_version: 3.9.20
2025-03-31 13:10:59,303:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:10:59,303:INFO:machine: AMD64
2025-03-31 13:10:59,313:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:10:59,319:INFO:Memory: svmem(total=16885276672, available=3367395328, percent=80.1, used=13517881344, free=3367395328)
2025-03-31 13:10:59,319:INFO:Physical Core: 4
2025-03-31 13:10:59,319:INFO:Logical Core: 8
2025-03-31 13:10:59,319:INFO:Checking libraries
2025-03-31 13:10:59,319:INFO:System:
2025-03-31 13:10:59,319:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:10:59,319:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:10:59,319:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:10:59,319:INFO:PyCaret required dependencies:
2025-03-31 13:10:59,911:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:00,432:INFO:                 pip: 25.0
2025-03-31 13:11:00,432:INFO:          setuptools: 75.8.0
2025-03-31 13:11:00,432:INFO:             pycaret: 3.3.2
2025-03-31 13:11:00,432:INFO:             IPython: 8.15.0
2025-03-31 13:11:00,432:INFO:          ipywidgets: 8.1.5
2025-03-31 13:11:00,432:INFO:                tqdm: 4.67.1
2025-03-31 13:11:00,432:INFO:               numpy: 1.26.4
2025-03-31 13:11:00,432:INFO:              pandas: 2.1.4
2025-03-31 13:11:00,432:INFO:              jinja2: 3.1.5
2025-03-31 13:11:00,432:INFO:               scipy: 1.11.4
2025-03-31 13:11:00,432:INFO:              joblib: 1.3.2
2025-03-31 13:11:00,433:INFO:             sklearn: 1.4.2
2025-03-31 13:11:00,433:INFO:                pyod: 2.0.4
2025-03-31 13:11:00,433:INFO:            imblearn: 0.12.3
2025-03-31 13:11:00,433:INFO:   category_encoders: 2.6.4
2025-03-31 13:11:00,433:INFO:            lightgbm: 4.6.0
2025-03-31 13:11:00,433:INFO:               numba: 0.60.0
2025-03-31 13:11:00,433:INFO:            requests: 2.32.3
2025-03-31 13:11:00,433:INFO:          matplotlib: 3.7.5
2025-03-31 13:11:00,433:INFO:          scikitplot: 0.3.7
2025-03-31 13:11:00,433:INFO:         yellowbrick: 1.5
2025-03-31 13:11:00,433:INFO:              plotly: 5.24.1
2025-03-31 13:11:00,433:INFO:    plotly-resampler: Not installed
2025-03-31 13:11:00,433:INFO:             kaleido: 0.2.1
2025-03-31 13:11:00,433:INFO:           schemdraw: 0.15
2025-03-31 13:11:00,433:INFO:         statsmodels: 0.14.4
2025-03-31 13:11:00,433:INFO:              sktime: 0.26.0
2025-03-31 13:11:00,433:INFO:               tbats: 1.1.3
2025-03-31 13:11:00,433:INFO:            pmdarima: 2.0.4
2025-03-31 13:11:00,433:INFO:              psutil: 5.9.0
2025-03-31 13:11:00,433:INFO:          markupsafe: 3.0.2
2025-03-31 13:11:00,433:INFO:             pickle5: Not installed
2025-03-31 13:11:00,433:INFO:         cloudpickle: 3.0.0
2025-03-31 13:11:00,433:INFO:         deprecation: 2.1.0
2025-03-31 13:11:00,433:INFO:              xxhash: 3.5.0
2025-03-31 13:11:00,433:INFO:           wurlitzer: Not installed
2025-03-31 13:11:00,433:INFO:PyCaret optional dependencies:
2025-03-31 13:11:00,447:INFO:                shap: Not installed
2025-03-31 13:11:00,447:INFO:           interpret: Not installed
2025-03-31 13:11:00,447:INFO:                umap: Not installed
2025-03-31 13:11:00,447:INFO:     ydata_profiling: Not installed
2025-03-31 13:11:00,447:INFO:  explainerdashboard: Not installed
2025-03-31 13:11:00,448:INFO:             autoviz: Not installed
2025-03-31 13:11:00,448:INFO:           fairlearn: Not installed
2025-03-31 13:11:00,448:INFO:          deepchecks: Not installed
2025-03-31 13:11:00,448:INFO:             xgboost: Not installed
2025-03-31 13:11:00,448:INFO:            catboost: Not installed
2025-03-31 13:11:00,448:INFO:              kmodes: Not installed
2025-03-31 13:11:00,448:INFO:             mlxtend: Not installed
2025-03-31 13:11:00,448:INFO:       statsforecast: Not installed
2025-03-31 13:11:00,448:INFO:        tune_sklearn: Not installed
2025-03-31 13:11:00,448:INFO:                 ray: Not installed
2025-03-31 13:11:00,448:INFO:            hyperopt: Not installed
2025-03-31 13:11:00,448:INFO:              optuna: Not installed
2025-03-31 13:11:00,448:INFO:               skopt: Not installed
2025-03-31 13:11:00,448:INFO:              mlflow: Not installed
2025-03-31 13:11:00,448:INFO:              gradio: Not installed
2025-03-31 13:11:00,448:INFO:             fastapi: Not installed
2025-03-31 13:11:00,448:INFO:             uvicorn: Not installed
2025-03-31 13:11:00,448:INFO:              m2cgen: Not installed
2025-03-31 13:11:00,448:INFO:           evidently: Not installed
2025-03-31 13:11:00,448:INFO:               fugue: Not installed
2025-03-31 13:11:00,448:INFO:           streamlit: 1.20.0
2025-03-31 13:11:00,448:INFO:             prophet: Not installed
2025-03-31 13:11:00,448:INFO:None
2025-03-31 13:11:00,448:INFO:Set up data.
2025-03-31 13:11:00,452:INFO:Set up index.
2025-03-31 13:11:00,452:INFO:Assigning column types.
2025-03-31 13:11:00,454:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:11:00,454:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:11:00,454:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:00,454:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:11:00,455:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:00,455:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:11:00,455:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:00,455:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:00,457:INFO:Preparing preprocessing pipeline...
2025-03-31 13:11:00,457:INFO:Set up simple imputation.
2025-03-31 13:11:00,458:INFO:Set up encoding of categorical features.
2025-03-31 13:11:00,519:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:11:00,524:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:11:00,524:INFO:Creating final display dataframe.
2025-03-31 13:11:00,600:INFO:Setup _display_container:                  Description                 Value
0                 Session id                  3228
1        Original data shape             (224, 21)
2     Transformed data shape            (224, 244)
3           Numeric features                    20
4       Categorical features                     1
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                  CPU Jobs                    -1
12                   Use GPU                 False
13            Log Experiment                 False
14           Experiment Name  cluster-default-name
15                       USI                  9bb4
2025-03-31 13:11:00,602:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:00,603:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:00,603:INFO:setup() successfully completed in 1.3s...............
2025-03-31 13:11:00,603:INFO:Initializing create_model()
2025-03-31 13:11:00,603:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000264EB9E7E20>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:11:00,603:INFO:Checking exceptions
2025-03-31 13:11:00,674:INFO:Importing untrained model
2025-03-31 13:11:00,674:INFO:K-Means Clustering Imported successfully
2025-03-31 13:11:00,676:INFO:Fitting Model
2025-03-31 13:11:00,866:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-03-31 13:11:00,882:INFO:KMeans(n_clusters=4, random_state=3228)
2025-03-31 13:11:00,882:INFO:create_models() successfully completed......................................
2025-03-31 13:11:00,882:INFO:Uploading results into container
2025-03-31 13:11:00,883:INFO:Uploading model into container now
2025-03-31 13:11:00,889:INFO:_master_model_container: 1
2025-03-31 13:11:00,889:INFO:_display_container: 2
2025-03-31 13:11:00,889:INFO:KMeans(n_clusters=4, random_state=3228)
2025-03-31 13:11:00,889:INFO:create_model() successfully completed......................................
2025-03-31 13:11:01,000:INFO:Initializing assign_model()
2025-03-31 13:11:01,000:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000264EB9E7E20>, model=KMeans(n_clusters=4, random_state=3228), transformation=False, score=True, verbose=True)
2025-03-31 13:11:01,000:INFO:Checking exceptions
2025-03-31 13:11:01,000:INFO:Determining Trained Model
2025-03-31 13:11:01,000:INFO:Trained Model : K-Means Clustering
2025-03-31 13:11:01,000:INFO:Copying data
2025-03-31 13:11:01,001:INFO:(224, 22)
2025-03-31 13:11:01,001:INFO:assign_model() successfully completed......................................
2025-03-31 13:11:01,001:INFO:Initializing plot_model()
2025-03-31 13:11:01,002:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=3228), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000264EB9E7E20>, system=True)
2025-03-31 13:11:01,002:INFO:Checking exceptions
2025-03-31 13:11:01,002:INFO:Preloading libraries
2025-03-31 13:11:01,002:INFO:Copying training dataset
2025-03-31 13:11:01,002:INFO:Plot type: cluster
2025-03-31 13:11:01,002:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:11:01,003:INFO:Initializing assign_model()
2025-03-31 13:11:01,003:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000264EB9E7E20>, model=KMeans(n_clusters=4, random_state=3228), transformation=True, score=True, verbose=False)
2025-03-31 13:11:01,003:INFO:Checking exceptions
2025-03-31 13:11:01,003:INFO:Determining Trained Model
2025-03-31 13:11:01,003:INFO:Trained Model : K-Means Clustering
2025-03-31 13:11:01,003:INFO:Copying data
2025-03-31 13:11:01,083:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:11:01,084:INFO:(224, 245)
2025-03-31 13:11:01,084:INFO:assign_model() successfully completed......................................
2025-03-31 13:11:01,084:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:11:01,085:INFO:Fitting PCA()
2025-03-31 13:11:01,105:INFO:Sorting dataframe
2025-03-31 13:11:01,106:INFO:Rendering Visual
2025-03-31 13:11:02,401:INFO:Visual Rendered Successfully
2025-03-31 13:11:02,511:INFO:plot_model() successfully completed......................................
2025-03-31 13:11:02,516:INFO:Initializing save_model()
2025-03-31 13:11:02,516:INFO:save_model(model=KMeans(n_clusters=4, random_state=3228), model_name=saved_kmeans_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-03-31 13:11:02,517:INFO:Adding model into prep_pipe
2025-03-31 13:11:02,523:INFO:saved_kmeans_model.pkl saved in current working directory
2025-03-31 13:11:02,528:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', KMeans(n_clusters=4, random_state=3228))])
2025-03-31 13:11:02,528:INFO:save_model() successfully completed......................................
2025-03-31 13:11:14,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:11:14,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:11:14,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:11:14,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:11:15,180:INFO:PyCaret RegressionExperiment
2025-03-31 13:11:15,180:INFO:Logging name: reg-default-name
2025-03-31 13:11:15,180:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-31 13:11:15,180:INFO:version 3.3.2
2025-03-31 13:11:15,180:INFO:Initializing setup()
2025-03-31 13:11:15,180:INFO:self.USI: 479b
2025-03-31 13:11:15,180:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_test', 'transform_target_param', 'idx', 'exp_name_log', 'fold_generator', 'pipeline', 'data', 'memory', 'X', 'X_test', 'gpu_param', 'log_plots_param', '_ml_usecase', 'logging_param', 'html_param', 'target_param', 'seed', 'fold_shuffle_param', 'X_train', 'y', 'USI', 'n_jobs_param', 'y_train', 'fold_groups_param', 'exp_id', '_available_plots'}
2025-03-31 13:11:15,180:INFO:Checking environment
2025-03-31 13:11:15,180:INFO:python_version: 3.9.20
2025-03-31 13:11:15,180:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:11:15,180:INFO:machine: AMD64
2025-03-31 13:11:15,189:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:11:15,195:INFO:Memory: svmem(total=16885276672, available=3383119872, percent=80.0, used=13502156800, free=3383119872)
2025-03-31 13:11:15,195:INFO:Physical Core: 4
2025-03-31 13:11:15,195:INFO:Logical Core: 8
2025-03-31 13:11:15,195:INFO:Checking libraries
2025-03-31 13:11:15,195:INFO:System:
2025-03-31 13:11:15,195:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:11:15,195:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:11:15,195:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:11:15,195:INFO:PyCaret required dependencies:
2025-03-31 13:11:15,726:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:16,240:INFO:                 pip: 25.0
2025-03-31 13:11:16,241:INFO:          setuptools: 75.8.0
2025-03-31 13:11:16,241:INFO:             pycaret: 3.3.2
2025-03-31 13:11:16,241:INFO:             IPython: 8.15.0
2025-03-31 13:11:16,241:INFO:          ipywidgets: 8.1.5
2025-03-31 13:11:16,241:INFO:                tqdm: 4.67.1
2025-03-31 13:11:16,241:INFO:               numpy: 1.26.4
2025-03-31 13:11:16,241:INFO:              pandas: 2.1.4
2025-03-31 13:11:16,241:INFO:              jinja2: 3.1.5
2025-03-31 13:11:16,241:INFO:               scipy: 1.11.4
2025-03-31 13:11:16,241:INFO:              joblib: 1.3.2
2025-03-31 13:11:16,241:INFO:             sklearn: 1.4.2
2025-03-31 13:11:16,241:INFO:                pyod: 2.0.4
2025-03-31 13:11:16,241:INFO:            imblearn: 0.12.3
2025-03-31 13:11:16,241:INFO:   category_encoders: 2.6.4
2025-03-31 13:11:16,241:INFO:            lightgbm: 4.6.0
2025-03-31 13:11:16,241:INFO:               numba: 0.60.0
2025-03-31 13:11:16,241:INFO:            requests: 2.32.3
2025-03-31 13:11:16,241:INFO:          matplotlib: 3.7.5
2025-03-31 13:11:16,241:INFO:          scikitplot: 0.3.7
2025-03-31 13:11:16,241:INFO:         yellowbrick: 1.5
2025-03-31 13:11:16,241:INFO:              plotly: 5.24.1
2025-03-31 13:11:16,241:INFO:    plotly-resampler: Not installed
2025-03-31 13:11:16,241:INFO:             kaleido: 0.2.1
2025-03-31 13:11:16,241:INFO:           schemdraw: 0.15
2025-03-31 13:11:16,241:INFO:         statsmodels: 0.14.4
2025-03-31 13:11:16,241:INFO:              sktime: 0.26.0
2025-03-31 13:11:16,241:INFO:               tbats: 1.1.3
2025-03-31 13:11:16,241:INFO:            pmdarima: 2.0.4
2025-03-31 13:11:16,241:INFO:              psutil: 5.9.0
2025-03-31 13:11:16,241:INFO:          markupsafe: 3.0.2
2025-03-31 13:11:16,241:INFO:             pickle5: Not installed
2025-03-31 13:11:16,241:INFO:         cloudpickle: 3.0.0
2025-03-31 13:11:16,241:INFO:         deprecation: 2.1.0
2025-03-31 13:11:16,241:INFO:              xxhash: 3.5.0
2025-03-31 13:11:16,241:INFO:           wurlitzer: Not installed
2025-03-31 13:11:16,241:INFO:PyCaret optional dependencies:
2025-03-31 13:11:16,254:INFO:                shap: Not installed
2025-03-31 13:11:16,254:INFO:           interpret: Not installed
2025-03-31 13:11:16,254:INFO:                umap: Not installed
2025-03-31 13:11:16,254:INFO:     ydata_profiling: Not installed
2025-03-31 13:11:16,254:INFO:  explainerdashboard: Not installed
2025-03-31 13:11:16,254:INFO:             autoviz: Not installed
2025-03-31 13:11:16,254:INFO:           fairlearn: Not installed
2025-03-31 13:11:16,254:INFO:          deepchecks: Not installed
2025-03-31 13:11:16,254:INFO:             xgboost: Not installed
2025-03-31 13:11:16,254:INFO:            catboost: Not installed
2025-03-31 13:11:16,254:INFO:              kmodes: Not installed
2025-03-31 13:11:16,254:INFO:             mlxtend: Not installed
2025-03-31 13:11:16,255:INFO:       statsforecast: Not installed
2025-03-31 13:11:16,255:INFO:        tune_sklearn: Not installed
2025-03-31 13:11:16,255:INFO:                 ray: Not installed
2025-03-31 13:11:16,255:INFO:            hyperopt: Not installed
2025-03-31 13:11:16,255:INFO:              optuna: Not installed
2025-03-31 13:11:16,255:INFO:               skopt: Not installed
2025-03-31 13:11:16,255:INFO:              mlflow: Not installed
2025-03-31 13:11:16,255:INFO:              gradio: Not installed
2025-03-31 13:11:16,255:INFO:             fastapi: Not installed
2025-03-31 13:11:16,255:INFO:             uvicorn: Not installed
2025-03-31 13:11:16,255:INFO:              m2cgen: Not installed
2025-03-31 13:11:16,255:INFO:           evidently: Not installed
2025-03-31 13:11:16,255:INFO:               fugue: Not installed
2025-03-31 13:11:16,255:INFO:           streamlit: 1.20.0
2025-03-31 13:11:16,255:INFO:             prophet: Not installed
2025-03-31 13:11:16,255:INFO:None
2025-03-31 13:11:16,255:INFO:Set up data.
2025-03-31 13:11:16,258:INFO:Set up folding strategy.
2025-03-31 13:11:16,259:INFO:Set up train/test split.
2025-03-31 13:11:16,289:INFO:Set up index.
2025-03-31 13:11:16,290:INFO:Assigning column types.
2025-03-31 13:11:16,292:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-31 13:11:16,292:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,295:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,299:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,382:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,383:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,387:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,391:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,469:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,470:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-31 13:11:16,474:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,478:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,521:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,558:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,562:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,638:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,639:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-31 13:11:16,645:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,688:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,729:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,770:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,805:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-31 13:11:16,854:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,888:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,938:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:11:16,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:16,972:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-31 13:11:17,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:17,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,105:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:11:17,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,139:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-31 13:11:17,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,308:INFO:Preparing preprocessing pipeline...
2025-03-31 13:11:17,308:INFO:Set up simple imputation.
2025-03-31 13:11:17,335:INFO:Set up encoding of ordinal features.
2025-03-31 13:11:17,337:INFO:Set up encoding of categorical features.
2025-03-31 13:11:17,390:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:11:17,413:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:11:17,413:INFO:Creating final display dataframe.
2025-03-31 13:11:17,557:INFO:Setup _display_container:                     Description             Value
0                    Session id               975
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              479b
2025-03-31 13:11:17,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:11:17,726:INFO:setup() successfully completed in 2.55s...............
2025-03-31 13:11:17,726:INFO:Initializing create_model()
2025-03-31 13:11:17,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:17,726:INFO:Checking exceptions
2025-03-31 13:11:17,727:INFO:Importing libraries
2025-03-31 13:11:17,728:INFO:Copying training dataset
2025-03-31 13:11:17,731:INFO:Defining folds
2025-03-31 13:11:17,731:INFO:Declaring metric variables
2025-03-31 13:11:17,731:INFO:Importing untrained model
2025-03-31 13:11:17,731:INFO:Linear Regression Imported successfully
2025-03-31 13:11:17,731:INFO:Starting cross validation
2025-03-31 13:11:17,763:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:23,816:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:23,856:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:23,892:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:23,940:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:23,969:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:24,085:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:24,092:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:24,318:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:11:26,410:INFO:Calculating mean and std
2025-03-31 13:11:26,410:INFO:Creating metrics dataframe
2025-03-31 13:11:26,412:INFO:Finalizing model
2025-03-31 13:11:26,460:INFO:Uploading results into container
2025-03-31 13:11:26,460:INFO:Uploading model into container now
2025-03-31 13:11:26,467:INFO:_master_model_container: 1
2025-03-31 13:11:26,467:INFO:_display_container: 2
2025-03-31 13:11:26,467:INFO:LinearRegression(n_jobs=-1)
2025-03-31 13:11:26,468:INFO:create_model() successfully completed......................................
2025-03-31 13:11:26,589:INFO:Initializing compare_models()
2025-03-31 13:11:26,590:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-31 13:11:26,590:INFO:Checking exceptions
2025-03-31 13:11:26,592:INFO:Preparing display monitor
2025-03-31 13:11:26,595:INFO:Initializing Linear Regression
2025-03-31 13:11:26,595:INFO:Total runtime is 0.0 minutes
2025-03-31 13:11:26,595:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:26,595:INFO:Initializing create_model()
2025-03-31 13:11:26,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:26,595:INFO:Checking exceptions
2025-03-31 13:11:26,596:INFO:Importing libraries
2025-03-31 13:11:26,596:INFO:Copying training dataset
2025-03-31 13:11:26,600:INFO:Defining folds
2025-03-31 13:11:26,600:INFO:Declaring metric variables
2025-03-31 13:11:26,600:INFO:Importing untrained model
2025-03-31 13:11:26,600:INFO:Linear Regression Imported successfully
2025-03-31 13:11:26,600:INFO:Starting cross validation
2025-03-31 13:11:26,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:26,833:INFO:Calculating mean and std
2025-03-31 13:11:26,833:INFO:Creating metrics dataframe
2025-03-31 13:11:26,837:INFO:Uploading results into container
2025-03-31 13:11:26,837:INFO:Uploading model into container now
2025-03-31 13:11:26,838:INFO:_master_model_container: 2
2025-03-31 13:11:26,838:INFO:_display_container: 3
2025-03-31 13:11:26,838:INFO:LinearRegression(n_jobs=-1)
2025-03-31 13:11:26,838:INFO:create_model() successfully completed......................................
2025-03-31 13:11:26,930:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:26,931:INFO:Creating metrics dataframe
2025-03-31 13:11:26,935:INFO:Initializing Lasso Regression
2025-03-31 13:11:26,935:INFO:Total runtime is 0.005668270587921143 minutes
2025-03-31 13:11:26,935:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:26,936:INFO:Initializing create_model()
2025-03-31 13:11:26,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:26,936:INFO:Checking exceptions
2025-03-31 13:11:26,936:INFO:Importing libraries
2025-03-31 13:11:26,936:INFO:Copying training dataset
2025-03-31 13:11:26,942:INFO:Defining folds
2025-03-31 13:11:26,942:INFO:Declaring metric variables
2025-03-31 13:11:26,943:INFO:Importing untrained model
2025-03-31 13:11:26,943:INFO:Lasso Regression Imported successfully
2025-03-31 13:11:26,943:INFO:Starting cross validation
2025-03-31 13:11:26,945:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:27,143:INFO:Calculating mean and std
2025-03-31 13:11:27,143:INFO:Creating metrics dataframe
2025-03-31 13:11:27,145:INFO:Uploading results into container
2025-03-31 13:11:27,145:INFO:Uploading model into container now
2025-03-31 13:11:27,145:INFO:_master_model_container: 3
2025-03-31 13:11:27,145:INFO:_display_container: 3
2025-03-31 13:11:27,145:INFO:Lasso(random_state=975)
2025-03-31 13:11:27,146:INFO:create_model() successfully completed......................................
2025-03-31 13:11:27,228:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:27,228:INFO:Creating metrics dataframe
2025-03-31 13:11:27,230:INFO:Initializing Ridge Regression
2025-03-31 13:11:27,230:INFO:Total runtime is 0.010579387346903484 minutes
2025-03-31 13:11:27,230:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:27,231:INFO:Initializing create_model()
2025-03-31 13:11:27,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:27,231:INFO:Checking exceptions
2025-03-31 13:11:27,231:INFO:Importing libraries
2025-03-31 13:11:27,231:INFO:Copying training dataset
2025-03-31 13:11:27,233:INFO:Defining folds
2025-03-31 13:11:27,233:INFO:Declaring metric variables
2025-03-31 13:11:27,233:INFO:Importing untrained model
2025-03-31 13:11:27,233:INFO:Ridge Regression Imported successfully
2025-03-31 13:11:27,233:INFO:Starting cross validation
2025-03-31 13:11:27,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:27,456:INFO:Calculating mean and std
2025-03-31 13:11:27,457:INFO:Creating metrics dataframe
2025-03-31 13:11:27,459:INFO:Uploading results into container
2025-03-31 13:11:27,460:INFO:Uploading model into container now
2025-03-31 13:11:27,460:INFO:_master_model_container: 4
2025-03-31 13:11:27,460:INFO:_display_container: 3
2025-03-31 13:11:27,461:INFO:Ridge(random_state=975)
2025-03-31 13:11:27,461:INFO:create_model() successfully completed......................................
2025-03-31 13:11:27,553:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:27,553:INFO:Creating metrics dataframe
2025-03-31 13:11:27,555:INFO:Initializing Elastic Net
2025-03-31 13:11:27,555:INFO:Total runtime is 0.01599782705307007 minutes
2025-03-31 13:11:27,555:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:27,555:INFO:Initializing create_model()
2025-03-31 13:11:27,555:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:27,555:INFO:Checking exceptions
2025-03-31 13:11:27,555:INFO:Importing libraries
2025-03-31 13:11:27,555:INFO:Copying training dataset
2025-03-31 13:11:27,557:INFO:Defining folds
2025-03-31 13:11:27,557:INFO:Declaring metric variables
2025-03-31 13:11:27,558:INFO:Importing untrained model
2025-03-31 13:11:27,558:INFO:Elastic Net Imported successfully
2025-03-31 13:11:27,558:INFO:Starting cross validation
2025-03-31 13:11:27,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:27,785:INFO:Calculating mean and std
2025-03-31 13:11:27,786:INFO:Creating metrics dataframe
2025-03-31 13:11:27,787:INFO:Uploading results into container
2025-03-31 13:11:27,787:INFO:Uploading model into container now
2025-03-31 13:11:27,788:INFO:_master_model_container: 5
2025-03-31 13:11:27,788:INFO:_display_container: 3
2025-03-31 13:11:27,788:INFO:ElasticNet(random_state=975)
2025-03-31 13:11:27,788:INFO:create_model() successfully completed......................................
2025-03-31 13:11:27,874:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:27,874:INFO:Creating metrics dataframe
2025-03-31 13:11:27,876:INFO:Initializing Least Angle Regression
2025-03-31 13:11:27,876:INFO:Total runtime is 0.02133870522181193 minutes
2025-03-31 13:11:27,876:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:27,876:INFO:Initializing create_model()
2025-03-31 13:11:27,876:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:27,876:INFO:Checking exceptions
2025-03-31 13:11:27,876:INFO:Importing libraries
2025-03-31 13:11:27,876:INFO:Copying training dataset
2025-03-31 13:11:27,878:INFO:Defining folds
2025-03-31 13:11:27,878:INFO:Declaring metric variables
2025-03-31 13:11:27,878:INFO:Importing untrained model
2025-03-31 13:11:27,879:INFO:Least Angle Regression Imported successfully
2025-03-31 13:11:27,879:INFO:Starting cross validation
2025-03-31 13:11:27,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:28,068:INFO:Calculating mean and std
2025-03-31 13:11:28,068:INFO:Creating metrics dataframe
2025-03-31 13:11:28,069:INFO:Uploading results into container
2025-03-31 13:11:28,069:INFO:Uploading model into container now
2025-03-31 13:11:28,069:INFO:_master_model_container: 6
2025-03-31 13:11:28,069:INFO:_display_container: 3
2025-03-31 13:11:28,070:INFO:Lars(random_state=975)
2025-03-31 13:11:28,070:INFO:create_model() successfully completed......................................
2025-03-31 13:11:28,152:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:28,153:INFO:Creating metrics dataframe
2025-03-31 13:11:28,155:INFO:Initializing Lasso Least Angle Regression
2025-03-31 13:11:28,156:INFO:Total runtime is 0.026012619336446125 minutes
2025-03-31 13:11:28,156:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:28,156:INFO:Initializing create_model()
2025-03-31 13:11:28,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:28,156:INFO:Checking exceptions
2025-03-31 13:11:28,156:INFO:Importing libraries
2025-03-31 13:11:28,156:INFO:Copying training dataset
2025-03-31 13:11:28,159:INFO:Defining folds
2025-03-31 13:11:28,159:INFO:Declaring metric variables
2025-03-31 13:11:28,160:INFO:Importing untrained model
2025-03-31 13:11:28,160:INFO:Lasso Least Angle Regression Imported successfully
2025-03-31 13:11:28,160:INFO:Starting cross validation
2025-03-31 13:11:28,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:28,380:INFO:Calculating mean and std
2025-03-31 13:11:28,380:INFO:Creating metrics dataframe
2025-03-31 13:11:28,382:INFO:Uploading results into container
2025-03-31 13:11:28,382:INFO:Uploading model into container now
2025-03-31 13:11:28,382:INFO:_master_model_container: 7
2025-03-31 13:11:28,382:INFO:_display_container: 3
2025-03-31 13:11:28,383:INFO:LassoLars(random_state=975)
2025-03-31 13:11:28,383:INFO:create_model() successfully completed......................................
2025-03-31 13:11:28,468:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:28,469:INFO:Creating metrics dataframe
2025-03-31 13:11:28,471:INFO:Initializing Orthogonal Matching Pursuit
2025-03-31 13:11:28,471:INFO:Total runtime is 0.03126414616902669 minutes
2025-03-31 13:11:28,472:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:28,472:INFO:Initializing create_model()
2025-03-31 13:11:28,472:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:28,472:INFO:Checking exceptions
2025-03-31 13:11:28,472:INFO:Importing libraries
2025-03-31 13:11:28,472:INFO:Copying training dataset
2025-03-31 13:11:28,476:INFO:Defining folds
2025-03-31 13:11:28,476:INFO:Declaring metric variables
2025-03-31 13:11:28,476:INFO:Importing untrained model
2025-03-31 13:11:28,476:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-31 13:11:28,476:INFO:Starting cross validation
2025-03-31 13:11:28,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:28,708:INFO:Calculating mean and std
2025-03-31 13:11:28,708:INFO:Creating metrics dataframe
2025-03-31 13:11:28,711:INFO:Uploading results into container
2025-03-31 13:11:28,711:INFO:Uploading model into container now
2025-03-31 13:11:28,711:INFO:_master_model_container: 8
2025-03-31 13:11:28,711:INFO:_display_container: 3
2025-03-31 13:11:28,711:INFO:OrthogonalMatchingPursuit()
2025-03-31 13:11:28,711:INFO:create_model() successfully completed......................................
2025-03-31 13:11:28,792:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:28,793:INFO:Creating metrics dataframe
2025-03-31 13:11:28,795:INFO:Initializing Bayesian Ridge
2025-03-31 13:11:28,795:INFO:Total runtime is 0.03665495713551839 minutes
2025-03-31 13:11:28,795:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:28,795:INFO:Initializing create_model()
2025-03-31 13:11:28,795:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:28,795:INFO:Checking exceptions
2025-03-31 13:11:28,795:INFO:Importing libraries
2025-03-31 13:11:28,795:INFO:Copying training dataset
2025-03-31 13:11:28,797:INFO:Defining folds
2025-03-31 13:11:28,797:INFO:Declaring metric variables
2025-03-31 13:11:28,798:INFO:Importing untrained model
2025-03-31 13:11:28,798:INFO:Bayesian Ridge Imported successfully
2025-03-31 13:11:28,798:INFO:Starting cross validation
2025-03-31 13:11:28,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:29,034:INFO:Calculating mean and std
2025-03-31 13:11:29,034:INFO:Creating metrics dataframe
2025-03-31 13:11:29,036:INFO:Uploading results into container
2025-03-31 13:11:29,036:INFO:Uploading model into container now
2025-03-31 13:11:29,036:INFO:_master_model_container: 9
2025-03-31 13:11:29,037:INFO:_display_container: 3
2025-03-31 13:11:29,037:INFO:BayesianRidge()
2025-03-31 13:11:29,037:INFO:create_model() successfully completed......................................
2025-03-31 13:11:29,119:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:29,120:INFO:Creating metrics dataframe
2025-03-31 13:11:29,122:INFO:Initializing Passive Aggressive Regressor
2025-03-31 13:11:29,122:INFO:Total runtime is 0.04210509061813354 minutes
2025-03-31 13:11:29,123:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:29,123:INFO:Initializing create_model()
2025-03-31 13:11:29,123:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:29,123:INFO:Checking exceptions
2025-03-31 13:11:29,123:INFO:Importing libraries
2025-03-31 13:11:29,123:INFO:Copying training dataset
2025-03-31 13:11:29,126:INFO:Defining folds
2025-03-31 13:11:29,126:INFO:Declaring metric variables
2025-03-31 13:11:29,126:INFO:Importing untrained model
2025-03-31 13:11:29,127:INFO:Passive Aggressive Regressor Imported successfully
2025-03-31 13:11:29,127:INFO:Starting cross validation
2025-03-31 13:11:29,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:29,375:INFO:Calculating mean and std
2025-03-31 13:11:29,375:INFO:Creating metrics dataframe
2025-03-31 13:11:29,377:INFO:Uploading results into container
2025-03-31 13:11:29,377:INFO:Uploading model into container now
2025-03-31 13:11:29,377:INFO:_master_model_container: 10
2025-03-31 13:11:29,377:INFO:_display_container: 3
2025-03-31 13:11:29,378:INFO:PassiveAggressiveRegressor(random_state=975)
2025-03-31 13:11:29,378:INFO:create_model() successfully completed......................................
2025-03-31 13:11:29,462:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:29,462:INFO:Creating metrics dataframe
2025-03-31 13:11:29,464:INFO:Initializing Huber Regressor
2025-03-31 13:11:29,464:INFO:Total runtime is 0.04781463940938314 minutes
2025-03-31 13:11:29,464:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:29,464:INFO:Initializing create_model()
2025-03-31 13:11:29,464:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:29,464:INFO:Checking exceptions
2025-03-31 13:11:29,464:INFO:Importing libraries
2025-03-31 13:11:29,464:INFO:Copying training dataset
2025-03-31 13:11:29,467:INFO:Defining folds
2025-03-31 13:11:29,467:INFO:Declaring metric variables
2025-03-31 13:11:29,467:INFO:Importing untrained model
2025-03-31 13:11:29,467:INFO:Huber Regressor Imported successfully
2025-03-31 13:11:29,467:INFO:Starting cross validation
2025-03-31 13:11:29,468:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:29,623:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:11:29,624:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:11:29,624:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:11:29,624:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:11:29,632:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:11:29,722:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:11:29,732:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:11:29,766:INFO:Calculating mean and std
2025-03-31 13:11:29,766:INFO:Creating metrics dataframe
2025-03-31 13:11:29,768:INFO:Uploading results into container
2025-03-31 13:11:29,768:INFO:Uploading model into container now
2025-03-31 13:11:29,769:INFO:_master_model_container: 11
2025-03-31 13:11:29,769:INFO:_display_container: 3
2025-03-31 13:11:29,769:INFO:HuberRegressor()
2025-03-31 13:11:29,769:INFO:create_model() successfully completed......................................
2025-03-31 13:11:29,852:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:29,852:INFO:Creating metrics dataframe
2025-03-31 13:11:29,855:INFO:Initializing K Neighbors Regressor
2025-03-31 13:11:29,855:INFO:Total runtime is 0.05432889461517334 minutes
2025-03-31 13:11:29,855:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:29,855:INFO:Initializing create_model()
2025-03-31 13:11:29,855:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:29,855:INFO:Checking exceptions
2025-03-31 13:11:29,855:INFO:Importing libraries
2025-03-31 13:11:29,856:INFO:Copying training dataset
2025-03-31 13:11:29,858:INFO:Defining folds
2025-03-31 13:11:29,858:INFO:Declaring metric variables
2025-03-31 13:11:29,858:INFO:Importing untrained model
2025-03-31 13:11:29,858:INFO:K Neighbors Regressor Imported successfully
2025-03-31 13:11:29,858:INFO:Starting cross validation
2025-03-31 13:11:29,859:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:30,141:INFO:Calculating mean and std
2025-03-31 13:11:30,141:INFO:Creating metrics dataframe
2025-03-31 13:11:30,142:INFO:Uploading results into container
2025-03-31 13:11:30,142:INFO:Uploading model into container now
2025-03-31 13:11:30,143:INFO:_master_model_container: 12
2025-03-31 13:11:30,143:INFO:_display_container: 3
2025-03-31 13:11:30,143:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-31 13:11:30,143:INFO:create_model() successfully completed......................................
2025-03-31 13:11:30,228:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:30,228:INFO:Creating metrics dataframe
2025-03-31 13:11:30,232:INFO:Initializing Decision Tree Regressor
2025-03-31 13:11:30,232:INFO:Total runtime is 0.06060463984807332 minutes
2025-03-31 13:11:30,232:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:30,233:INFO:Initializing create_model()
2025-03-31 13:11:30,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:30,233:INFO:Checking exceptions
2025-03-31 13:11:30,233:INFO:Importing libraries
2025-03-31 13:11:30,233:INFO:Copying training dataset
2025-03-31 13:11:30,235:INFO:Defining folds
2025-03-31 13:11:30,235:INFO:Declaring metric variables
2025-03-31 13:11:30,235:INFO:Importing untrained model
2025-03-31 13:11:30,236:INFO:Decision Tree Regressor Imported successfully
2025-03-31 13:11:30,236:INFO:Starting cross validation
2025-03-31 13:11:30,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:30,469:INFO:Calculating mean and std
2025-03-31 13:11:30,469:INFO:Creating metrics dataframe
2025-03-31 13:11:30,471:INFO:Uploading results into container
2025-03-31 13:11:30,471:INFO:Uploading model into container now
2025-03-31 13:11:30,471:INFO:_master_model_container: 13
2025-03-31 13:11:30,471:INFO:_display_container: 3
2025-03-31 13:11:30,472:INFO:DecisionTreeRegressor(random_state=975)
2025-03-31 13:11:30,472:INFO:create_model() successfully completed......................................
2025-03-31 13:11:30,559:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:30,559:INFO:Creating metrics dataframe
2025-03-31 13:11:30,564:INFO:Initializing Random Forest Regressor
2025-03-31 13:11:30,564:INFO:Total runtime is 0.06613985300064086 minutes
2025-03-31 13:11:30,565:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:30,565:INFO:Initializing create_model()
2025-03-31 13:11:30,565:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:30,565:INFO:Checking exceptions
2025-03-31 13:11:30,565:INFO:Importing libraries
2025-03-31 13:11:30,565:INFO:Copying training dataset
2025-03-31 13:11:30,571:INFO:Defining folds
2025-03-31 13:11:30,571:INFO:Declaring metric variables
2025-03-31 13:11:30,571:INFO:Importing untrained model
2025-03-31 13:11:30,572:INFO:Random Forest Regressor Imported successfully
2025-03-31 13:11:30,572:INFO:Starting cross validation
2025-03-31 13:11:30,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:31,520:INFO:Calculating mean and std
2025-03-31 13:11:31,520:INFO:Creating metrics dataframe
2025-03-31 13:11:31,522:INFO:Uploading results into container
2025-03-31 13:11:31,523:INFO:Uploading model into container now
2025-03-31 13:11:31,523:INFO:_master_model_container: 14
2025-03-31 13:11:31,523:INFO:_display_container: 3
2025-03-31 13:11:31,523:INFO:RandomForestRegressor(n_jobs=-1, random_state=975)
2025-03-31 13:11:31,523:INFO:create_model() successfully completed......................................
2025-03-31 13:11:31,606:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:31,606:INFO:Creating metrics dataframe
2025-03-31 13:11:31,608:INFO:Initializing Extra Trees Regressor
2025-03-31 13:11:31,609:INFO:Total runtime is 0.08356653849283853 minutes
2025-03-31 13:11:31,609:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:31,609:INFO:Initializing create_model()
2025-03-31 13:11:31,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:31,609:INFO:Checking exceptions
2025-03-31 13:11:31,609:INFO:Importing libraries
2025-03-31 13:11:31,609:INFO:Copying training dataset
2025-03-31 13:11:31,613:INFO:Defining folds
2025-03-31 13:11:31,613:INFO:Declaring metric variables
2025-03-31 13:11:31,613:INFO:Importing untrained model
2025-03-31 13:11:31,613:INFO:Extra Trees Regressor Imported successfully
2025-03-31 13:11:31,613:INFO:Starting cross validation
2025-03-31 13:11:31,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:32,415:INFO:Calculating mean and std
2025-03-31 13:11:32,416:INFO:Creating metrics dataframe
2025-03-31 13:11:32,418:INFO:Uploading results into container
2025-03-31 13:11:32,418:INFO:Uploading model into container now
2025-03-31 13:11:32,419:INFO:_master_model_container: 15
2025-03-31 13:11:32,419:INFO:_display_container: 3
2025-03-31 13:11:32,419:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=975)
2025-03-31 13:11:32,419:INFO:create_model() successfully completed......................................
2025-03-31 13:11:32,508:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:32,508:INFO:Creating metrics dataframe
2025-03-31 13:11:32,511:INFO:Initializing AdaBoost Regressor
2025-03-31 13:11:32,511:INFO:Total runtime is 0.09859646956125893 minutes
2025-03-31 13:11:32,511:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:32,511:INFO:Initializing create_model()
2025-03-31 13:11:32,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:32,511:INFO:Checking exceptions
2025-03-31 13:11:32,511:INFO:Importing libraries
2025-03-31 13:11:32,511:INFO:Copying training dataset
2025-03-31 13:11:32,514:INFO:Defining folds
2025-03-31 13:11:32,514:INFO:Declaring metric variables
2025-03-31 13:11:32,515:INFO:Importing untrained model
2025-03-31 13:11:32,515:INFO:AdaBoost Regressor Imported successfully
2025-03-31 13:11:32,515:INFO:Starting cross validation
2025-03-31 13:11:32,516:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:32,775:INFO:Calculating mean and std
2025-03-31 13:11:32,776:INFO:Creating metrics dataframe
2025-03-31 13:11:32,778:INFO:Uploading results into container
2025-03-31 13:11:32,779:INFO:Uploading model into container now
2025-03-31 13:11:32,779:INFO:_master_model_container: 16
2025-03-31 13:11:32,779:INFO:_display_container: 3
2025-03-31 13:11:32,779:INFO:AdaBoostRegressor(random_state=975)
2025-03-31 13:11:32,779:INFO:create_model() successfully completed......................................
2025-03-31 13:11:32,861:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:32,861:INFO:Creating metrics dataframe
2025-03-31 13:11:32,864:INFO:Initializing Gradient Boosting Regressor
2025-03-31 13:11:32,864:INFO:Total runtime is 0.10447801748911538 minutes
2025-03-31 13:11:32,864:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:32,864:INFO:Initializing create_model()
2025-03-31 13:11:32,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:32,864:INFO:Checking exceptions
2025-03-31 13:11:32,864:INFO:Importing libraries
2025-03-31 13:11:32,864:INFO:Copying training dataset
2025-03-31 13:11:32,866:INFO:Defining folds
2025-03-31 13:11:32,866:INFO:Declaring metric variables
2025-03-31 13:11:32,866:INFO:Importing untrained model
2025-03-31 13:11:32,867:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:11:32,867:INFO:Starting cross validation
2025-03-31 13:11:32,868:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:33,321:INFO:Calculating mean and std
2025-03-31 13:11:33,321:INFO:Creating metrics dataframe
2025-03-31 13:11:33,323:INFO:Uploading results into container
2025-03-31 13:11:33,323:INFO:Uploading model into container now
2025-03-31 13:11:33,323:INFO:_master_model_container: 17
2025-03-31 13:11:33,324:INFO:_display_container: 3
2025-03-31 13:11:33,324:INFO:GradientBoostingRegressor(random_state=975)
2025-03-31 13:11:33,324:INFO:create_model() successfully completed......................................
2025-03-31 13:11:33,415:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:33,415:INFO:Creating metrics dataframe
2025-03-31 13:11:33,421:INFO:Initializing Light Gradient Boosting Machine
2025-03-31 13:11:33,422:INFO:Total runtime is 0.11375341018040973 minutes
2025-03-31 13:11:33,422:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:33,422:INFO:Initializing create_model()
2025-03-31 13:11:33,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:33,422:INFO:Checking exceptions
2025-03-31 13:11:33,423:INFO:Importing libraries
2025-03-31 13:11:33,423:INFO:Copying training dataset
2025-03-31 13:11:33,428:INFO:Defining folds
2025-03-31 13:11:33,428:INFO:Declaring metric variables
2025-03-31 13:11:33,428:INFO:Importing untrained model
2025-03-31 13:11:33,430:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-31 13:11:33,430:INFO:Starting cross validation
2025-03-31 13:11:33,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:34,163:INFO:Calculating mean and std
2025-03-31 13:11:34,163:INFO:Creating metrics dataframe
2025-03-31 13:11:34,165:INFO:Uploading results into container
2025-03-31 13:11:34,166:INFO:Uploading model into container now
2025-03-31 13:11:34,166:INFO:_master_model_container: 18
2025-03-31 13:11:34,166:INFO:_display_container: 3
2025-03-31 13:11:34,167:INFO:LGBMRegressor(n_jobs=-1, random_state=975)
2025-03-31 13:11:34,167:INFO:create_model() successfully completed......................................
2025-03-31 13:11:34,262:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:34,262:INFO:Creating metrics dataframe
2025-03-31 13:11:34,264:INFO:Initializing Dummy Regressor
2025-03-31 13:11:34,264:INFO:Total runtime is 0.12780771652857462 minutes
2025-03-31 13:11:34,265:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:34,265:INFO:Initializing create_model()
2025-03-31 13:11:34,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8829C29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:34,265:INFO:Checking exceptions
2025-03-31 13:11:34,265:INFO:Importing libraries
2025-03-31 13:11:34,265:INFO:Copying training dataset
2025-03-31 13:11:34,267:INFO:Defining folds
2025-03-31 13:11:34,267:INFO:Declaring metric variables
2025-03-31 13:11:34,268:INFO:Importing untrained model
2025-03-31 13:11:34,268:INFO:Dummy Regressor Imported successfully
2025-03-31 13:11:34,268:INFO:Starting cross validation
2025-03-31 13:11:34,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:34,459:INFO:Calculating mean and std
2025-03-31 13:11:34,459:INFO:Creating metrics dataframe
2025-03-31 13:11:34,461:INFO:Uploading results into container
2025-03-31 13:11:34,461:INFO:Uploading model into container now
2025-03-31 13:11:34,462:INFO:_master_model_container: 19
2025-03-31 13:11:34,462:INFO:_display_container: 3
2025-03-31 13:11:34,462:INFO:DummyRegressor()
2025-03-31 13:11:34,462:INFO:create_model() successfully completed......................................
2025-03-31 13:11:34,549:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:34,549:INFO:Creating metrics dataframe
2025-03-31 13:11:34,554:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-31 13:11:34,556:INFO:Initializing create_model()
2025-03-31 13:11:34,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=GradientBoostingRegressor(random_state=975), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:34,556:INFO:Checking exceptions
2025-03-31 13:11:34,557:INFO:Importing libraries
2025-03-31 13:11:34,557:INFO:Copying training dataset
2025-03-31 13:11:34,560:INFO:Defining folds
2025-03-31 13:11:34,560:INFO:Declaring metric variables
2025-03-31 13:11:34,560:INFO:Importing untrained model
2025-03-31 13:11:34,560:INFO:Declaring custom model
2025-03-31 13:11:34,561:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:11:34,562:INFO:Cross validation set to False
2025-03-31 13:11:34,562:INFO:Fitting Model
2025-03-31 13:11:34,675:INFO:GradientBoostingRegressor(random_state=975)
2025-03-31 13:11:34,675:INFO:create_model() successfully completed......................................
2025-03-31 13:11:34,765:INFO:_master_model_container: 19
2025-03-31 13:11:34,765:INFO:_display_container: 3
2025-03-31 13:11:34,765:INFO:GradientBoostingRegressor(random_state=975)
2025-03-31 13:11:34,765:INFO:compare_models() successfully completed......................................
2025-03-31 13:11:34,765:INFO:Initializing tune_model()
2025-03-31 13:11:34,765:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=975), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>)
2025-03-31 13:11:34,765:INFO:Checking exceptions
2025-03-31 13:11:34,767:INFO:Copying training dataset
2025-03-31 13:11:34,768:INFO:Checking base model
2025-03-31 13:11:34,768:INFO:Base model : Gradient Boosting Regressor
2025-03-31 13:11:34,769:INFO:Declaring metric variables
2025-03-31 13:11:34,769:INFO:Defining Hyperparameters
2025-03-31 13:11:34,849:INFO:Tuning with n_jobs=-1
2025-03-31 13:11:34,849:INFO:Initializing RandomizedSearchCV
2025-03-31 13:11:41,276:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.05}
2025-03-31 13:11:41,277:INFO:Hyperparameter search completed
2025-03-31 13:11:41,277:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:41,278:INFO:Initializing create_model()
2025-03-31 13:11:41,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=GradientBoostingRegressor(random_state=975), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F8FC011310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'n_estimators': 50, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.5, 'max_features': 'log2', 'max_depth': 7, 'learning_rate': 0.05})
2025-03-31 13:11:41,278:INFO:Checking exceptions
2025-03-31 13:11:41,278:INFO:Importing libraries
2025-03-31 13:11:41,279:INFO:Copying training dataset
2025-03-31 13:11:41,285:INFO:Defining folds
2025-03-31 13:11:41,286:INFO:Declaring metric variables
2025-03-31 13:11:41,286:INFO:Importing untrained model
2025-03-31 13:11:41,286:INFO:Declaring custom model
2025-03-31 13:11:41,287:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:11:41,287:INFO:Starting cross validation
2025-03-31 13:11:41,289:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:41,610:INFO:Calculating mean and std
2025-03-31 13:11:41,611:INFO:Creating metrics dataframe
2025-03-31 13:11:41,613:INFO:Finalizing model
2025-03-31 13:11:41,694:INFO:Uploading results into container
2025-03-31 13:11:41,694:INFO:Uploading model into container now
2025-03-31 13:11:41,694:INFO:_master_model_container: 20
2025-03-31 13:11:41,694:INFO:_display_container: 4
2025-03-31 13:11:41,695:INFO:GradientBoostingRegressor(learning_rate=0.05, max_depth=7, max_features='log2',
                          min_impurity_decrease=0.5, min_samples_leaf=3,
                          n_estimators=50, random_state=975, subsample=0.9)
2025-03-31 13:11:41,695:INFO:create_model() successfully completed......................................
2025-03-31 13:11:41,774:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:41,774:INFO:choose_better activated
2025-03-31 13:11:41,775:INFO:SubProcess create_model() called ==================================
2025-03-31 13:11:41,775:INFO:Initializing create_model()
2025-03-31 13:11:41,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=GradientBoostingRegressor(random_state=975), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:11:41,775:INFO:Checking exceptions
2025-03-31 13:11:41,776:INFO:Importing libraries
2025-03-31 13:11:41,776:INFO:Copying training dataset
2025-03-31 13:11:41,778:INFO:Defining folds
2025-03-31 13:11:41,778:INFO:Declaring metric variables
2025-03-31 13:11:41,778:INFO:Importing untrained model
2025-03-31 13:11:41,778:INFO:Declaring custom model
2025-03-31 13:11:41,779:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:11:41,779:INFO:Starting cross validation
2025-03-31 13:11:41,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:11:42,203:INFO:Calculating mean and std
2025-03-31 13:11:42,203:INFO:Creating metrics dataframe
2025-03-31 13:11:42,205:INFO:Finalizing model
2025-03-31 13:11:42,319:INFO:Uploading results into container
2025-03-31 13:11:42,319:INFO:Uploading model into container now
2025-03-31 13:11:42,319:INFO:_master_model_container: 21
2025-03-31 13:11:42,319:INFO:_display_container: 5
2025-03-31 13:11:42,321:INFO:GradientBoostingRegressor(random_state=975)
2025-03-31 13:11:42,321:INFO:create_model() successfully completed......................................
2025-03-31 13:11:42,404:INFO:SubProcess create_model() end ==================================
2025-03-31 13:11:42,405:INFO:GradientBoostingRegressor(random_state=975) result for R2 is 0.8382
2025-03-31 13:11:42,406:INFO:GradientBoostingRegressor(learning_rate=0.05, max_depth=7, max_features='log2',
                          min_impurity_decrease=0.5, min_samples_leaf=3,
                          n_estimators=50, random_state=975, subsample=0.9) result for R2 is 0.8217
2025-03-31 13:11:42,406:INFO:GradientBoostingRegressor(random_state=975) is best model
2025-03-31 13:11:42,406:INFO:choose_better completed
2025-03-31 13:11:42,406:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-31 13:11:42,411:INFO:_master_model_container: 21
2025-03-31 13:11:42,411:INFO:_display_container: 4
2025-03-31 13:11:42,411:INFO:GradientBoostingRegressor(random_state=975)
2025-03-31 13:11:42,411:INFO:tune_model() successfully completed......................................
2025-03-31 13:11:42,493:INFO:Initializing predict_model()
2025-03-31 13:11:42,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F8E8B7A160>, estimator=GradientBoostingRegressor(random_state=975), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F8FBCC2280>)
2025-03-31 13:11:42,493:INFO:Checking exceptions
2025-03-31 13:11:42,493:INFO:Preloading libraries
2025-03-31 13:11:42,494:INFO:Set up data.
2025-03-31 13:11:42,497:INFO:Set up index.
2025-03-31 13:11:42,557:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:11:42,679:INFO:Initializing save_model()
2025-03-31 13:11:42,679:INFO:save_model(model=GradientBoostingRegressor(random_state=975), model_name=best_regression_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-31 13:11:42,679:INFO:Adding model into prep_pipe
2025-03-31 13:11:42,716:INFO:best_regression_model.pkl saved in current working directory
2025-03-31 13:11:42,741:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', GradientBoostingRegressor(random_state=975))])
2025-03-31 13:11:42,741:INFO:save_model() successfully completed......................................
2025-03-31 13:12:53,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:12:53,869:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:12:53,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:12:53,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:12:54,532:INFO:PyCaret RegressionExperiment
2025-03-31 13:12:54,532:INFO:Logging name: reg-default-name
2025-03-31 13:12:54,532:INFO:ML Usecase: MLUsecase.REGRESSION
2025-03-31 13:12:54,532:INFO:version 3.3.2
2025-03-31 13:12:54,532:INFO:Initializing setup()
2025-03-31 13:12:54,532:INFO:self.USI: 7e39
2025-03-31 13:12:54,532:INFO:self._variable_keys: {'pipeline', 'fold_shuffle_param', 'X_train', 'y_test', 'y_train', 'n_jobs_param', 'logging_param', 'gpu_n_jobs_param', 'log_plots_param', 'exp_id', 'USI', 'seed', 'target_param', 'gpu_param', 'memory', 'y', '_ml_usecase', 'idx', 'exp_name_log', 'fold_groups_param', 'data', '_available_plots', 'X_test', 'fold_generator', 'X', 'transform_target_param', 'html_param'}
2025-03-31 13:12:54,532:INFO:Checking environment
2025-03-31 13:12:54,532:INFO:python_version: 3.9.20
2025-03-31 13:12:54,532:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:12:54,532:INFO:machine: AMD64
2025-03-31 13:12:54,542:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:12:54,548:INFO:Memory: svmem(total=16885276672, available=3547172864, percent=79.0, used=13338103808, free=3547172864)
2025-03-31 13:12:54,548:INFO:Physical Core: 4
2025-03-31 13:12:54,548:INFO:Logical Core: 8
2025-03-31 13:12:54,548:INFO:Checking libraries
2025-03-31 13:12:54,548:INFO:System:
2025-03-31 13:12:54,548:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:12:54,548:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:12:54,548:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:12:54,548:INFO:PyCaret required dependencies:
2025-03-31 13:12:55,119:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:12:55,637:INFO:                 pip: 25.0
2025-03-31 13:12:55,637:INFO:          setuptools: 75.8.0
2025-03-31 13:12:55,638:INFO:             pycaret: 3.3.2
2025-03-31 13:12:55,638:INFO:             IPython: 8.15.0
2025-03-31 13:12:55,638:INFO:          ipywidgets: 8.1.5
2025-03-31 13:12:55,638:INFO:                tqdm: 4.67.1
2025-03-31 13:12:55,638:INFO:               numpy: 1.26.4
2025-03-31 13:12:55,638:INFO:              pandas: 2.1.4
2025-03-31 13:12:55,638:INFO:              jinja2: 3.1.5
2025-03-31 13:12:55,638:INFO:               scipy: 1.11.4
2025-03-31 13:12:55,638:INFO:              joblib: 1.3.2
2025-03-31 13:12:55,638:INFO:             sklearn: 1.4.2
2025-03-31 13:12:55,638:INFO:                pyod: 2.0.4
2025-03-31 13:12:55,638:INFO:            imblearn: 0.12.3
2025-03-31 13:12:55,638:INFO:   category_encoders: 2.6.4
2025-03-31 13:12:55,638:INFO:            lightgbm: 4.6.0
2025-03-31 13:12:55,638:INFO:               numba: 0.60.0
2025-03-31 13:12:55,638:INFO:            requests: 2.32.3
2025-03-31 13:12:55,638:INFO:          matplotlib: 3.7.5
2025-03-31 13:12:55,638:INFO:          scikitplot: 0.3.7
2025-03-31 13:12:55,638:INFO:         yellowbrick: 1.5
2025-03-31 13:12:55,638:INFO:              plotly: 5.24.1
2025-03-31 13:12:55,638:INFO:    plotly-resampler: Not installed
2025-03-31 13:12:55,638:INFO:             kaleido: 0.2.1
2025-03-31 13:12:55,638:INFO:           schemdraw: 0.15
2025-03-31 13:12:55,638:INFO:         statsmodels: 0.14.4
2025-03-31 13:12:55,638:INFO:              sktime: 0.26.0
2025-03-31 13:12:55,638:INFO:               tbats: 1.1.3
2025-03-31 13:12:55,638:INFO:            pmdarima: 2.0.4
2025-03-31 13:12:55,638:INFO:              psutil: 5.9.0
2025-03-31 13:12:55,638:INFO:          markupsafe: 3.0.2
2025-03-31 13:12:55,638:INFO:             pickle5: Not installed
2025-03-31 13:12:55,638:INFO:         cloudpickle: 3.0.0
2025-03-31 13:12:55,638:INFO:         deprecation: 2.1.0
2025-03-31 13:12:55,638:INFO:              xxhash: 3.5.0
2025-03-31 13:12:55,638:INFO:           wurlitzer: Not installed
2025-03-31 13:12:55,638:INFO:PyCaret optional dependencies:
2025-03-31 13:12:55,651:INFO:                shap: Not installed
2025-03-31 13:12:55,651:INFO:           interpret: Not installed
2025-03-31 13:12:55,651:INFO:                umap: Not installed
2025-03-31 13:12:55,651:INFO:     ydata_profiling: Not installed
2025-03-31 13:12:55,651:INFO:  explainerdashboard: Not installed
2025-03-31 13:12:55,651:INFO:             autoviz: Not installed
2025-03-31 13:12:55,651:INFO:           fairlearn: Not installed
2025-03-31 13:12:55,651:INFO:          deepchecks: Not installed
2025-03-31 13:12:55,651:INFO:             xgboost: Not installed
2025-03-31 13:12:55,652:INFO:            catboost: Not installed
2025-03-31 13:12:55,652:INFO:              kmodes: Not installed
2025-03-31 13:12:55,652:INFO:             mlxtend: Not installed
2025-03-31 13:12:55,652:INFO:       statsforecast: Not installed
2025-03-31 13:12:55,652:INFO:        tune_sklearn: Not installed
2025-03-31 13:12:55,652:INFO:                 ray: Not installed
2025-03-31 13:12:55,652:INFO:            hyperopt: Not installed
2025-03-31 13:12:55,652:INFO:              optuna: Not installed
2025-03-31 13:12:55,652:INFO:               skopt: Not installed
2025-03-31 13:12:55,652:INFO:              mlflow: Not installed
2025-03-31 13:12:55,652:INFO:              gradio: Not installed
2025-03-31 13:12:55,652:INFO:             fastapi: Not installed
2025-03-31 13:12:55,652:INFO:             uvicorn: Not installed
2025-03-31 13:12:55,652:INFO:              m2cgen: Not installed
2025-03-31 13:12:55,652:INFO:           evidently: Not installed
2025-03-31 13:12:55,652:INFO:               fugue: Not installed
2025-03-31 13:12:55,652:INFO:           streamlit: 1.20.0
2025-03-31 13:12:55,652:INFO:             prophet: Not installed
2025-03-31 13:12:55,652:INFO:None
2025-03-31 13:12:55,652:INFO:Set up data.
2025-03-31 13:12:55,656:INFO:Set up folding strategy.
2025-03-31 13:12:55,656:INFO:Set up train/test split.
2025-03-31 13:12:55,661:INFO:Set up index.
2025-03-31 13:12:55,661:INFO:Assigning column types.
2025-03-31 13:12:55,663:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-31 13:12:55,663:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,667:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,671:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,719:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:55,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:55,754:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,758:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,761:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,807:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,840:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:55,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:55,842:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-03-31 13:12:55,845:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,848:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,893:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:55,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:55,931:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,935:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:12:55,979:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,015:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-03-31 13:12:56,021:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,066:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,111:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,188:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,189:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-03-31 13:12:56,238:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,322:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,356:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,357:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-31 13:12:56,406:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-03-31 13:12:56,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,524:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-03-31 13:12:56,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:56,693:INFO:Preparing preprocessing pipeline...
2025-03-31 13:12:56,693:INFO:Set up simple imputation.
2025-03-31 13:12:56,696:INFO:Set up encoding of ordinal features.
2025-03-31 13:12:56,698:INFO:Set up encoding of categorical features.
2025-03-31 13:12:56,760:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:12:56,783:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:12:56,783:INFO:Creating final display dataframe.
2025-03-31 13:12:56,928:INFO:Setup _display_container:                     Description             Value
0                    Session id              4984
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              7e39
2025-03-31 13:12:57,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:57,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:57,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:57,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:12:57,099:INFO:setup() successfully completed in 2.59s...............
2025-03-31 13:12:57,100:INFO:Initializing create_model()
2025-03-31 13:12:57,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:12:57,100:INFO:Checking exceptions
2025-03-31 13:12:57,101:INFO:Importing libraries
2025-03-31 13:12:57,101:INFO:Copying training dataset
2025-03-31 13:12:57,105:INFO:Defining folds
2025-03-31 13:12:57,105:INFO:Declaring metric variables
2025-03-31 13:12:57,105:INFO:Importing untrained model
2025-03-31 13:12:57,105:INFO:Linear Regression Imported successfully
2025-03-31 13:12:57,106:INFO:Starting cross validation
2025-03-31 13:12:57,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:03,450:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:03,465:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:03,471:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:03,498:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:03,509:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:03,590:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:03,658:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:03,774:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:13:06,107:INFO:Calculating mean and std
2025-03-31 13:13:06,108:INFO:Creating metrics dataframe
2025-03-31 13:13:06,110:INFO:Finalizing model
2025-03-31 13:13:06,155:INFO:Uploading results into container
2025-03-31 13:13:06,157:INFO:Uploading model into container now
2025-03-31 13:13:06,163:INFO:_master_model_container: 1
2025-03-31 13:13:06,163:INFO:_display_container: 2
2025-03-31 13:13:06,163:INFO:LinearRegression(n_jobs=-1)
2025-03-31 13:13:06,163:INFO:create_model() successfully completed......................................
2025-03-31 13:13:06,269:INFO:Initializing compare_models()
2025-03-31 13:13:06,270:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-03-31 13:13:06,270:INFO:Checking exceptions
2025-03-31 13:13:06,271:INFO:Preparing display monitor
2025-03-31 13:13:06,273:INFO:Initializing Linear Regression
2025-03-31 13:13:06,273:INFO:Total runtime is 0.0 minutes
2025-03-31 13:13:06,273:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:06,273:INFO:Initializing create_model()
2025-03-31 13:13:06,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:06,273:INFO:Checking exceptions
2025-03-31 13:13:06,273:INFO:Importing libraries
2025-03-31 13:13:06,273:INFO:Copying training dataset
2025-03-31 13:13:06,276:INFO:Defining folds
2025-03-31 13:13:06,276:INFO:Declaring metric variables
2025-03-31 13:13:06,277:INFO:Importing untrained model
2025-03-31 13:13:06,277:INFO:Linear Regression Imported successfully
2025-03-31 13:13:06,277:INFO:Starting cross validation
2025-03-31 13:13:06,278:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:06,511:INFO:Calculating mean and std
2025-03-31 13:13:06,511:INFO:Creating metrics dataframe
2025-03-31 13:13:06,513:INFO:Uploading results into container
2025-03-31 13:13:06,513:INFO:Uploading model into container now
2025-03-31 13:13:06,513:INFO:_master_model_container: 2
2025-03-31 13:13:06,513:INFO:_display_container: 3
2025-03-31 13:13:06,513:INFO:LinearRegression(n_jobs=-1)
2025-03-31 13:13:06,513:INFO:create_model() successfully completed......................................
2025-03-31 13:13:06,612:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:06,612:INFO:Creating metrics dataframe
2025-03-31 13:13:06,615:INFO:Initializing Lasso Regression
2025-03-31 13:13:06,615:INFO:Total runtime is 0.005692871411641439 minutes
2025-03-31 13:13:06,615:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:06,615:INFO:Initializing create_model()
2025-03-31 13:13:06,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:06,615:INFO:Checking exceptions
2025-03-31 13:13:06,615:INFO:Importing libraries
2025-03-31 13:13:06,615:INFO:Copying training dataset
2025-03-31 13:13:06,617:INFO:Defining folds
2025-03-31 13:13:06,617:INFO:Declaring metric variables
2025-03-31 13:13:06,617:INFO:Importing untrained model
2025-03-31 13:13:06,618:INFO:Lasso Regression Imported successfully
2025-03-31 13:13:06,618:INFO:Starting cross validation
2025-03-31 13:13:06,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:06,854:INFO:Calculating mean and std
2025-03-31 13:13:06,854:INFO:Creating metrics dataframe
2025-03-31 13:13:06,856:INFO:Uploading results into container
2025-03-31 13:13:06,857:INFO:Uploading model into container now
2025-03-31 13:13:06,857:INFO:_master_model_container: 3
2025-03-31 13:13:06,857:INFO:_display_container: 3
2025-03-31 13:13:06,857:INFO:Lasso(random_state=4984)
2025-03-31 13:13:06,857:INFO:create_model() successfully completed......................................
2025-03-31 13:13:06,944:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:06,944:INFO:Creating metrics dataframe
2025-03-31 13:13:06,948:INFO:Initializing Ridge Regression
2025-03-31 13:13:06,948:INFO:Total runtime is 0.011253615220387777 minutes
2025-03-31 13:13:06,948:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:06,949:INFO:Initializing create_model()
2025-03-31 13:13:06,949:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:06,949:INFO:Checking exceptions
2025-03-31 13:13:06,949:INFO:Importing libraries
2025-03-31 13:13:06,949:INFO:Copying training dataset
2025-03-31 13:13:06,952:INFO:Defining folds
2025-03-31 13:13:06,952:INFO:Declaring metric variables
2025-03-31 13:13:06,952:INFO:Importing untrained model
2025-03-31 13:13:06,953:INFO:Ridge Regression Imported successfully
2025-03-31 13:13:06,953:INFO:Starting cross validation
2025-03-31 13:13:06,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:07,179:INFO:Calculating mean and std
2025-03-31 13:13:07,180:INFO:Creating metrics dataframe
2025-03-31 13:13:07,181:INFO:Uploading results into container
2025-03-31 13:13:07,182:INFO:Uploading model into container now
2025-03-31 13:13:07,182:INFO:_master_model_container: 4
2025-03-31 13:13:07,182:INFO:_display_container: 3
2025-03-31 13:13:07,182:INFO:Ridge(random_state=4984)
2025-03-31 13:13:07,182:INFO:create_model() successfully completed......................................
2025-03-31 13:13:07,271:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:07,271:INFO:Creating metrics dataframe
2025-03-31 13:13:07,274:INFO:Initializing Elastic Net
2025-03-31 13:13:07,274:INFO:Total runtime is 0.016685871283213298 minutes
2025-03-31 13:13:07,274:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:07,275:INFO:Initializing create_model()
2025-03-31 13:13:07,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:07,275:INFO:Checking exceptions
2025-03-31 13:13:07,275:INFO:Importing libraries
2025-03-31 13:13:07,275:INFO:Copying training dataset
2025-03-31 13:13:07,278:INFO:Defining folds
2025-03-31 13:13:07,278:INFO:Declaring metric variables
2025-03-31 13:13:07,278:INFO:Importing untrained model
2025-03-31 13:13:07,279:INFO:Elastic Net Imported successfully
2025-03-31 13:13:07,279:INFO:Starting cross validation
2025-03-31 13:13:07,280:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:07,491:INFO:Calculating mean and std
2025-03-31 13:13:07,491:INFO:Creating metrics dataframe
2025-03-31 13:13:07,494:INFO:Uploading results into container
2025-03-31 13:13:07,494:INFO:Uploading model into container now
2025-03-31 13:13:07,495:INFO:_master_model_container: 5
2025-03-31 13:13:07,495:INFO:_display_container: 3
2025-03-31 13:13:07,495:INFO:ElasticNet(random_state=4984)
2025-03-31 13:13:07,495:INFO:create_model() successfully completed......................................
2025-03-31 13:13:07,579:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:07,579:INFO:Creating metrics dataframe
2025-03-31 13:13:07,582:INFO:Initializing Least Angle Regression
2025-03-31 13:13:07,582:INFO:Total runtime is 0.02181333303451538 minutes
2025-03-31 13:13:07,582:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:07,583:INFO:Initializing create_model()
2025-03-31 13:13:07,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:07,583:INFO:Checking exceptions
2025-03-31 13:13:07,583:INFO:Importing libraries
2025-03-31 13:13:07,583:INFO:Copying training dataset
2025-03-31 13:13:07,588:INFO:Defining folds
2025-03-31 13:13:07,588:INFO:Declaring metric variables
2025-03-31 13:13:07,588:INFO:Importing untrained model
2025-03-31 13:13:07,588:INFO:Least Angle Regression Imported successfully
2025-03-31 13:13:07,589:INFO:Starting cross validation
2025-03-31 13:13:07,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:07,710:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=4.149e+01, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-03-31 13:13:07,819:INFO:Calculating mean and std
2025-03-31 13:13:07,819:INFO:Creating metrics dataframe
2025-03-31 13:13:07,821:INFO:Uploading results into container
2025-03-31 13:13:07,821:INFO:Uploading model into container now
2025-03-31 13:13:07,822:INFO:_master_model_container: 6
2025-03-31 13:13:07,822:INFO:_display_container: 3
2025-03-31 13:13:07,822:INFO:Lars(random_state=4984)
2025-03-31 13:13:07,822:INFO:create_model() successfully completed......................................
2025-03-31 13:13:07,904:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:07,904:INFO:Creating metrics dataframe
2025-03-31 13:13:07,907:INFO:Initializing Lasso Least Angle Regression
2025-03-31 13:13:07,907:INFO:Total runtime is 0.02724221150080363 minutes
2025-03-31 13:13:07,907:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:07,908:INFO:Initializing create_model()
2025-03-31 13:13:07,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:07,908:INFO:Checking exceptions
2025-03-31 13:13:07,908:INFO:Importing libraries
2025-03-31 13:13:07,908:INFO:Copying training dataset
2025-03-31 13:13:07,912:INFO:Defining folds
2025-03-31 13:13:07,912:INFO:Declaring metric variables
2025-03-31 13:13:07,912:INFO:Importing untrained model
2025-03-31 13:13:07,912:INFO:Lasso Least Angle Regression Imported successfully
2025-03-31 13:13:07,913:INFO:Starting cross validation
2025-03-31 13:13:07,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:08,146:INFO:Calculating mean and std
2025-03-31 13:13:08,147:INFO:Creating metrics dataframe
2025-03-31 13:13:08,148:INFO:Uploading results into container
2025-03-31 13:13:08,149:INFO:Uploading model into container now
2025-03-31 13:13:08,149:INFO:_master_model_container: 7
2025-03-31 13:13:08,149:INFO:_display_container: 3
2025-03-31 13:13:08,150:INFO:LassoLars(random_state=4984)
2025-03-31 13:13:08,150:INFO:create_model() successfully completed......................................
2025-03-31 13:13:08,238:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:08,238:INFO:Creating metrics dataframe
2025-03-31 13:13:08,240:INFO:Initializing Orthogonal Matching Pursuit
2025-03-31 13:13:08,240:INFO:Total runtime is 0.03279180924097697 minutes
2025-03-31 13:13:08,242:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:08,242:INFO:Initializing create_model()
2025-03-31 13:13:08,242:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:08,242:INFO:Checking exceptions
2025-03-31 13:13:08,242:INFO:Importing libraries
2025-03-31 13:13:08,242:INFO:Copying training dataset
2025-03-31 13:13:08,244:INFO:Defining folds
2025-03-31 13:13:08,244:INFO:Declaring metric variables
2025-03-31 13:13:08,245:INFO:Importing untrained model
2025-03-31 13:13:08,245:INFO:Orthogonal Matching Pursuit Imported successfully
2025-03-31 13:13:08,245:INFO:Starting cross validation
2025-03-31 13:13:08,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:08,444:INFO:Calculating mean and std
2025-03-31 13:13:08,444:INFO:Creating metrics dataframe
2025-03-31 13:13:08,446:INFO:Uploading results into container
2025-03-31 13:13:08,447:INFO:Uploading model into container now
2025-03-31 13:13:08,447:INFO:_master_model_container: 8
2025-03-31 13:13:08,447:INFO:_display_container: 3
2025-03-31 13:13:08,447:INFO:OrthogonalMatchingPursuit()
2025-03-31 13:13:08,447:INFO:create_model() successfully completed......................................
2025-03-31 13:13:08,527:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:08,527:INFO:Creating metrics dataframe
2025-03-31 13:13:08,529:INFO:Initializing Bayesian Ridge
2025-03-31 13:13:08,529:INFO:Total runtime is 0.03760361671447754 minutes
2025-03-31 13:13:08,529:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:08,529:INFO:Initializing create_model()
2025-03-31 13:13:08,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:08,529:INFO:Checking exceptions
2025-03-31 13:13:08,529:INFO:Importing libraries
2025-03-31 13:13:08,529:INFO:Copying training dataset
2025-03-31 13:13:08,531:INFO:Defining folds
2025-03-31 13:13:08,532:INFO:Declaring metric variables
2025-03-31 13:13:08,532:INFO:Importing untrained model
2025-03-31 13:13:08,532:INFO:Bayesian Ridge Imported successfully
2025-03-31 13:13:08,532:INFO:Starting cross validation
2025-03-31 13:13:08,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:08,739:INFO:Calculating mean and std
2025-03-31 13:13:08,740:INFO:Creating metrics dataframe
2025-03-31 13:13:08,742:INFO:Uploading results into container
2025-03-31 13:13:08,743:INFO:Uploading model into container now
2025-03-31 13:13:08,743:INFO:_master_model_container: 9
2025-03-31 13:13:08,743:INFO:_display_container: 3
2025-03-31 13:13:08,744:INFO:BayesianRidge()
2025-03-31 13:13:08,744:INFO:create_model() successfully completed......................................
2025-03-31 13:13:08,842:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:08,843:INFO:Creating metrics dataframe
2025-03-31 13:13:08,845:INFO:Initializing Passive Aggressive Regressor
2025-03-31 13:13:08,845:INFO:Total runtime is 0.04286822477976481 minutes
2025-03-31 13:13:08,845:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:08,845:INFO:Initializing create_model()
2025-03-31 13:13:08,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:08,845:INFO:Checking exceptions
2025-03-31 13:13:08,845:INFO:Importing libraries
2025-03-31 13:13:08,845:INFO:Copying training dataset
2025-03-31 13:13:08,848:INFO:Defining folds
2025-03-31 13:13:08,848:INFO:Declaring metric variables
2025-03-31 13:13:08,849:INFO:Importing untrained model
2025-03-31 13:13:08,849:INFO:Passive Aggressive Regressor Imported successfully
2025-03-31 13:13:08,849:INFO:Starting cross validation
2025-03-31 13:13:08,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:09,083:INFO:Calculating mean and std
2025-03-31 13:13:09,083:INFO:Creating metrics dataframe
2025-03-31 13:13:09,085:INFO:Uploading results into container
2025-03-31 13:13:09,085:INFO:Uploading model into container now
2025-03-31 13:13:09,085:INFO:_master_model_container: 10
2025-03-31 13:13:09,085:INFO:_display_container: 3
2025-03-31 13:13:09,086:INFO:PassiveAggressiveRegressor(random_state=4984)
2025-03-31 13:13:09,086:INFO:create_model() successfully completed......................................
2025-03-31 13:13:09,175:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:09,175:INFO:Creating metrics dataframe
2025-03-31 13:13:09,178:INFO:Initializing Huber Regressor
2025-03-31 13:13:09,178:INFO:Total runtime is 0.04842547575632731 minutes
2025-03-31 13:13:09,178:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:09,179:INFO:Initializing create_model()
2025-03-31 13:13:09,179:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:09,179:INFO:Checking exceptions
2025-03-31 13:13:09,179:INFO:Importing libraries
2025-03-31 13:13:09,179:INFO:Copying training dataset
2025-03-31 13:13:09,182:INFO:Defining folds
2025-03-31 13:13:09,182:INFO:Declaring metric variables
2025-03-31 13:13:09,182:INFO:Importing untrained model
2025-03-31 13:13:09,183:INFO:Huber Regressor Imported successfully
2025-03-31 13:13:09,183:INFO:Starting cross validation
2025-03-31 13:13:09,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:09,306:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,316:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,320:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,326:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,334:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,335:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,348:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,354:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,411:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,417:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-03-31 13:13:09,438:INFO:Calculating mean and std
2025-03-31 13:13:09,439:INFO:Creating metrics dataframe
2025-03-31 13:13:09,440:INFO:Uploading results into container
2025-03-31 13:13:09,440:INFO:Uploading model into container now
2025-03-31 13:13:09,440:INFO:_master_model_container: 11
2025-03-31 13:13:09,441:INFO:_display_container: 3
2025-03-31 13:13:09,441:INFO:HuberRegressor()
2025-03-31 13:13:09,441:INFO:create_model() successfully completed......................................
2025-03-31 13:13:09,528:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:09,528:INFO:Creating metrics dataframe
2025-03-31 13:13:09,530:INFO:Initializing K Neighbors Regressor
2025-03-31 13:13:09,530:INFO:Total runtime is 0.05429087479909261 minutes
2025-03-31 13:13:09,530:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:09,530:INFO:Initializing create_model()
2025-03-31 13:13:09,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:09,530:INFO:Checking exceptions
2025-03-31 13:13:09,530:INFO:Importing libraries
2025-03-31 13:13:09,531:INFO:Copying training dataset
2025-03-31 13:13:09,533:INFO:Defining folds
2025-03-31 13:13:09,533:INFO:Declaring metric variables
2025-03-31 13:13:09,533:INFO:Importing untrained model
2025-03-31 13:13:09,533:INFO:K Neighbors Regressor Imported successfully
2025-03-31 13:13:09,534:INFO:Starting cross validation
2025-03-31 13:13:09,535:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:09,780:INFO:Calculating mean and std
2025-03-31 13:13:09,781:INFO:Creating metrics dataframe
2025-03-31 13:13:09,783:INFO:Uploading results into container
2025-03-31 13:13:09,784:INFO:Uploading model into container now
2025-03-31 13:13:09,785:INFO:_master_model_container: 12
2025-03-31 13:13:09,785:INFO:_display_container: 3
2025-03-31 13:13:09,785:INFO:KNeighborsRegressor(n_jobs=-1)
2025-03-31 13:13:09,785:INFO:create_model() successfully completed......................................
2025-03-31 13:13:09,888:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:09,888:INFO:Creating metrics dataframe
2025-03-31 13:13:09,890:INFO:Initializing Decision Tree Regressor
2025-03-31 13:13:09,890:INFO:Total runtime is 0.06028714974721273 minutes
2025-03-31 13:13:09,890:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:09,890:INFO:Initializing create_model()
2025-03-31 13:13:09,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:09,890:INFO:Checking exceptions
2025-03-31 13:13:09,890:INFO:Importing libraries
2025-03-31 13:13:09,890:INFO:Copying training dataset
2025-03-31 13:13:09,892:INFO:Defining folds
2025-03-31 13:13:09,892:INFO:Declaring metric variables
2025-03-31 13:13:09,893:INFO:Importing untrained model
2025-03-31 13:13:09,893:INFO:Decision Tree Regressor Imported successfully
2025-03-31 13:13:09,893:INFO:Starting cross validation
2025-03-31 13:13:09,894:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:10,092:INFO:Calculating mean and std
2025-03-31 13:13:10,092:INFO:Creating metrics dataframe
2025-03-31 13:13:10,094:INFO:Uploading results into container
2025-03-31 13:13:10,094:INFO:Uploading model into container now
2025-03-31 13:13:10,094:INFO:_master_model_container: 13
2025-03-31 13:13:10,094:INFO:_display_container: 3
2025-03-31 13:13:10,094:INFO:DecisionTreeRegressor(random_state=4984)
2025-03-31 13:13:10,094:INFO:create_model() successfully completed......................................
2025-03-31 13:13:10,173:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:10,173:INFO:Creating metrics dataframe
2025-03-31 13:13:10,175:INFO:Initializing Random Forest Regressor
2025-03-31 13:13:10,175:INFO:Total runtime is 0.06503575245539348 minutes
2025-03-31 13:13:10,176:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:10,176:INFO:Initializing create_model()
2025-03-31 13:13:10,176:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:10,176:INFO:Checking exceptions
2025-03-31 13:13:10,176:INFO:Importing libraries
2025-03-31 13:13:10,176:INFO:Copying training dataset
2025-03-31 13:13:10,178:INFO:Defining folds
2025-03-31 13:13:10,178:INFO:Declaring metric variables
2025-03-31 13:13:10,178:INFO:Importing untrained model
2025-03-31 13:13:10,178:INFO:Random Forest Regressor Imported successfully
2025-03-31 13:13:10,178:INFO:Starting cross validation
2025-03-31 13:13:10,179:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:11,041:INFO:Calculating mean and std
2025-03-31 13:13:11,042:INFO:Creating metrics dataframe
2025-03-31 13:13:11,044:INFO:Uploading results into container
2025-03-31 13:13:11,045:INFO:Uploading model into container now
2025-03-31 13:13:11,045:INFO:_master_model_container: 14
2025-03-31 13:13:11,045:INFO:_display_container: 3
2025-03-31 13:13:11,046:INFO:RandomForestRegressor(n_jobs=-1, random_state=4984)
2025-03-31 13:13:11,046:INFO:create_model() successfully completed......................................
2025-03-31 13:13:11,139:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:11,139:INFO:Creating metrics dataframe
2025-03-31 13:13:11,141:INFO:Initializing Extra Trees Regressor
2025-03-31 13:13:11,141:INFO:Total runtime is 0.08113735516866048 minutes
2025-03-31 13:13:11,141:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:11,142:INFO:Initializing create_model()
2025-03-31 13:13:11,142:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:11,142:INFO:Checking exceptions
2025-03-31 13:13:11,142:INFO:Importing libraries
2025-03-31 13:13:11,142:INFO:Copying training dataset
2025-03-31 13:13:11,144:INFO:Defining folds
2025-03-31 13:13:11,144:INFO:Declaring metric variables
2025-03-31 13:13:11,144:INFO:Importing untrained model
2025-03-31 13:13:11,144:INFO:Extra Trees Regressor Imported successfully
2025-03-31 13:13:11,144:INFO:Starting cross validation
2025-03-31 13:13:11,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:11,878:INFO:Calculating mean and std
2025-03-31 13:13:11,878:INFO:Creating metrics dataframe
2025-03-31 13:13:11,880:INFO:Uploading results into container
2025-03-31 13:13:11,880:INFO:Uploading model into container now
2025-03-31 13:13:11,881:INFO:_master_model_container: 15
2025-03-31 13:13:11,881:INFO:_display_container: 3
2025-03-31 13:13:11,881:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4984)
2025-03-31 13:13:11,881:INFO:create_model() successfully completed......................................
2025-03-31 13:13:11,960:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:11,960:INFO:Creating metrics dataframe
2025-03-31 13:13:11,962:INFO:Initializing AdaBoost Regressor
2025-03-31 13:13:11,962:INFO:Total runtime is 0.09481932719548543 minutes
2025-03-31 13:13:11,963:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:11,963:INFO:Initializing create_model()
2025-03-31 13:13:11,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:11,963:INFO:Checking exceptions
2025-03-31 13:13:11,963:INFO:Importing libraries
2025-03-31 13:13:11,963:INFO:Copying training dataset
2025-03-31 13:13:11,965:INFO:Defining folds
2025-03-31 13:13:11,965:INFO:Declaring metric variables
2025-03-31 13:13:11,965:INFO:Importing untrained model
2025-03-31 13:13:11,966:INFO:AdaBoost Regressor Imported successfully
2025-03-31 13:13:11,966:INFO:Starting cross validation
2025-03-31 13:13:11,966:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:12,205:INFO:Calculating mean and std
2025-03-31 13:13:12,206:INFO:Creating metrics dataframe
2025-03-31 13:13:12,208:INFO:Uploading results into container
2025-03-31 13:13:12,208:INFO:Uploading model into container now
2025-03-31 13:13:12,209:INFO:_master_model_container: 16
2025-03-31 13:13:12,209:INFO:_display_container: 3
2025-03-31 13:13:12,209:INFO:AdaBoostRegressor(random_state=4984)
2025-03-31 13:13:12,209:INFO:create_model() successfully completed......................................
2025-03-31 13:13:12,300:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:12,300:INFO:Creating metrics dataframe
2025-03-31 13:13:12,302:INFO:Initializing Gradient Boosting Regressor
2025-03-31 13:13:12,302:INFO:Total runtime is 0.1004790981610616 minutes
2025-03-31 13:13:12,302:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:12,303:INFO:Initializing create_model()
2025-03-31 13:13:12,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:12,303:INFO:Checking exceptions
2025-03-31 13:13:12,303:INFO:Importing libraries
2025-03-31 13:13:12,303:INFO:Copying training dataset
2025-03-31 13:13:12,305:INFO:Defining folds
2025-03-31 13:13:12,305:INFO:Declaring metric variables
2025-03-31 13:13:12,305:INFO:Importing untrained model
2025-03-31 13:13:12,305:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:13:12,305:INFO:Starting cross validation
2025-03-31 13:13:12,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:12,719:INFO:Calculating mean and std
2025-03-31 13:13:12,720:INFO:Creating metrics dataframe
2025-03-31 13:13:12,721:INFO:Uploading results into container
2025-03-31 13:13:12,721:INFO:Uploading model into container now
2025-03-31 13:13:12,721:INFO:_master_model_container: 17
2025-03-31 13:13:12,721:INFO:_display_container: 3
2025-03-31 13:13:12,722:INFO:GradientBoostingRegressor(random_state=4984)
2025-03-31 13:13:12,722:INFO:create_model() successfully completed......................................
2025-03-31 13:13:12,806:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:12,807:INFO:Creating metrics dataframe
2025-03-31 13:13:12,809:INFO:Initializing Light Gradient Boosting Machine
2025-03-31 13:13:12,809:INFO:Total runtime is 0.10893194278081257 minutes
2025-03-31 13:13:12,809:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:12,809:INFO:Initializing create_model()
2025-03-31 13:13:12,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:12,809:INFO:Checking exceptions
2025-03-31 13:13:12,809:INFO:Importing libraries
2025-03-31 13:13:12,809:INFO:Copying training dataset
2025-03-31 13:13:12,811:INFO:Defining folds
2025-03-31 13:13:12,811:INFO:Declaring metric variables
2025-03-31 13:13:12,812:INFO:Importing untrained model
2025-03-31 13:13:12,812:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-31 13:13:12,812:INFO:Starting cross validation
2025-03-31 13:13:12,813:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:13,499:INFO:Calculating mean and std
2025-03-31 13:13:13,499:INFO:Creating metrics dataframe
2025-03-31 13:13:13,503:INFO:Uploading results into container
2025-03-31 13:13:13,503:INFO:Uploading model into container now
2025-03-31 13:13:13,503:INFO:_master_model_container: 18
2025-03-31 13:13:13,503:INFO:_display_container: 3
2025-03-31 13:13:13,504:INFO:LGBMRegressor(n_jobs=-1, random_state=4984)
2025-03-31 13:13:13,504:INFO:create_model() successfully completed......................................
2025-03-31 13:13:13,597:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:13,598:INFO:Creating metrics dataframe
2025-03-31 13:13:13,600:INFO:Initializing Dummy Regressor
2025-03-31 13:13:13,600:INFO:Total runtime is 0.12211187283198038 minutes
2025-03-31 13:13:13,600:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:13,600:INFO:Initializing create_model()
2025-03-31 13:13:13,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160EBEB29A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:13,600:INFO:Checking exceptions
2025-03-31 13:13:13,600:INFO:Importing libraries
2025-03-31 13:13:13,600:INFO:Copying training dataset
2025-03-31 13:13:13,603:INFO:Defining folds
2025-03-31 13:13:13,603:INFO:Declaring metric variables
2025-03-31 13:13:13,603:INFO:Importing untrained model
2025-03-31 13:13:13,603:INFO:Dummy Regressor Imported successfully
2025-03-31 13:13:13,603:INFO:Starting cross validation
2025-03-31 13:13:13,605:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:13,797:INFO:Calculating mean and std
2025-03-31 13:13:13,799:INFO:Creating metrics dataframe
2025-03-31 13:13:13,800:INFO:Uploading results into container
2025-03-31 13:13:13,801:INFO:Uploading model into container now
2025-03-31 13:13:13,801:INFO:_master_model_container: 19
2025-03-31 13:13:13,801:INFO:_display_container: 3
2025-03-31 13:13:13,801:INFO:DummyRegressor()
2025-03-31 13:13:13,801:INFO:create_model() successfully completed......................................
2025-03-31 13:13:13,887:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:13,888:INFO:Creating metrics dataframe
2025-03-31 13:13:13,904:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-31 13:13:13,906:INFO:Initializing create_model()
2025-03-31 13:13:13,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=GradientBoostingRegressor(random_state=4984), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:13,906:INFO:Checking exceptions
2025-03-31 13:13:13,907:INFO:Importing libraries
2025-03-31 13:13:13,907:INFO:Copying training dataset
2025-03-31 13:13:13,909:INFO:Defining folds
2025-03-31 13:13:13,909:INFO:Declaring metric variables
2025-03-31 13:13:13,909:INFO:Importing untrained model
2025-03-31 13:13:13,909:INFO:Declaring custom model
2025-03-31 13:13:13,910:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:13:13,911:INFO:Cross validation set to False
2025-03-31 13:13:13,911:INFO:Fitting Model
2025-03-31 13:13:14,019:INFO:GradientBoostingRegressor(random_state=4984)
2025-03-31 13:13:14,020:INFO:create_model() successfully completed......................................
2025-03-31 13:13:14,115:INFO:_master_model_container: 19
2025-03-31 13:13:14,115:INFO:_display_container: 3
2025-03-31 13:13:14,115:INFO:GradientBoostingRegressor(random_state=4984)
2025-03-31 13:13:14,115:INFO:compare_models() successfully completed......................................
2025-03-31 13:13:14,115:INFO:Initializing tune_model()
2025-03-31 13:13:14,115:INFO:tune_model(estimator=GradientBoostingRegressor(random_state=4984), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>)
2025-03-31 13:13:14,115:INFO:Checking exceptions
2025-03-31 13:13:14,117:INFO:Copying training dataset
2025-03-31 13:13:14,118:INFO:Checking base model
2025-03-31 13:13:14,119:INFO:Base model : Gradient Boosting Regressor
2025-03-31 13:13:14,119:INFO:Declaring metric variables
2025-03-31 13:13:14,119:INFO:Defining Hyperparameters
2025-03-31 13:13:14,199:INFO:Tuning with n_jobs=-1
2025-03-31 13:13:14,199:INFO:Initializing RandomizedSearchCV
2025-03-31 13:13:18,441:INFO:best_params: {'actual_estimator__subsample': 0.55, 'actual_estimator__n_estimators': 210, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 2, 'actual_estimator__learning_rate': 0.1}
2025-03-31 13:13:18,441:INFO:Hyperparameter search completed
2025-03-31 13:13:18,441:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:18,441:INFO:Initializing create_model()
2025-03-31 13:13:18,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=GradientBoostingRegressor(random_state=4984), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160E55F4D30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.55, 'n_estimators': 210, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.02, 'max_features': 'log2', 'max_depth': 2, 'learning_rate': 0.1})
2025-03-31 13:13:18,442:INFO:Checking exceptions
2025-03-31 13:13:18,442:INFO:Importing libraries
2025-03-31 13:13:18,442:INFO:Copying training dataset
2025-03-31 13:13:18,444:INFO:Defining folds
2025-03-31 13:13:18,444:INFO:Declaring metric variables
2025-03-31 13:13:18,444:INFO:Importing untrained model
2025-03-31 13:13:18,444:INFO:Declaring custom model
2025-03-31 13:13:18,445:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:13:18,445:INFO:Starting cross validation
2025-03-31 13:13:18,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:18,980:INFO:Calculating mean and std
2025-03-31 13:13:18,981:INFO:Creating metrics dataframe
2025-03-31 13:13:18,984:INFO:Finalizing model
2025-03-31 13:13:19,108:INFO:Uploading results into container
2025-03-31 13:13:19,109:INFO:Uploading model into container now
2025-03-31 13:13:19,109:INFO:_master_model_container: 20
2025-03-31 13:13:19,109:INFO:_display_container: 4
2025-03-31 13:13:19,110:INFO:GradientBoostingRegressor(max_depth=2, max_features='log2',
                          min_impurity_decrease=0.02, min_samples_leaf=2,
                          min_samples_split=5, n_estimators=210,
                          random_state=4984, subsample=0.55)
2025-03-31 13:13:19,110:INFO:create_model() successfully completed......................................
2025-03-31 13:13:19,191:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:19,191:INFO:choose_better activated
2025-03-31 13:13:19,191:INFO:SubProcess create_model() called ==================================
2025-03-31 13:13:19,192:INFO:Initializing create_model()
2025-03-31 13:13:19,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=GradientBoostingRegressor(random_state=4984), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:13:19,192:INFO:Checking exceptions
2025-03-31 13:13:19,192:INFO:Importing libraries
2025-03-31 13:13:19,192:INFO:Copying training dataset
2025-03-31 13:13:19,195:INFO:Defining folds
2025-03-31 13:13:19,195:INFO:Declaring metric variables
2025-03-31 13:13:19,195:INFO:Importing untrained model
2025-03-31 13:13:19,195:INFO:Declaring custom model
2025-03-31 13:13:19,195:INFO:Gradient Boosting Regressor Imported successfully
2025-03-31 13:13:19,195:INFO:Starting cross validation
2025-03-31 13:13:19,196:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-31 13:13:19,603:INFO:Calculating mean and std
2025-03-31 13:13:19,603:INFO:Creating metrics dataframe
2025-03-31 13:13:19,605:INFO:Finalizing model
2025-03-31 13:13:19,709:INFO:Uploading results into container
2025-03-31 13:13:19,710:INFO:Uploading model into container now
2025-03-31 13:13:19,710:INFO:_master_model_container: 21
2025-03-31 13:13:19,710:INFO:_display_container: 5
2025-03-31 13:13:19,711:INFO:GradientBoostingRegressor(random_state=4984)
2025-03-31 13:13:19,711:INFO:create_model() successfully completed......................................
2025-03-31 13:13:19,792:INFO:SubProcess create_model() end ==================================
2025-03-31 13:13:19,792:INFO:GradientBoostingRegressor(random_state=4984) result for R2 is 0.8384
2025-03-31 13:13:19,793:INFO:GradientBoostingRegressor(max_depth=2, max_features='log2',
                          min_impurity_decrease=0.02, min_samples_leaf=2,
                          min_samples_split=5, n_estimators=210,
                          random_state=4984, subsample=0.55) result for R2 is 0.8369
2025-03-31 13:13:19,793:INFO:GradientBoostingRegressor(random_state=4984) is best model
2025-03-31 13:13:19,793:INFO:choose_better completed
2025-03-31 13:13:19,793:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-31 13:13:19,799:INFO:_master_model_container: 21
2025-03-31 13:13:19,799:INFO:_display_container: 4
2025-03-31 13:13:19,800:INFO:GradientBoostingRegressor(random_state=4984)
2025-03-31 13:13:19,800:INFO:tune_model() successfully completed......................................
2025-03-31 13:13:19,880:INFO:Initializing predict_model()
2025-03-31 13:13:19,881:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000160D2069160>, estimator=GradientBoostingRegressor(random_state=4984), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160EBA6EAF0>)
2025-03-31 13:13:19,881:INFO:Checking exceptions
2025-03-31 13:13:19,881:INFO:Preloading libraries
2025-03-31 13:13:19,881:INFO:Set up data.
2025-03-31 13:13:19,884:INFO:Set up index.
2025-03-31 13:13:19,921:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:13:20,032:INFO:Initializing save_model()
2025-03-31 13:13:20,032:INFO:save_model(model=GradientBoostingRegressor(random_state=4984), model_name=best_regression_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transform...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-03-31 13:13:20,033:INFO:Adding model into prep_pipe
2025-03-31 13:13:20,040:INFO:best_regression_model.pkl saved in current working directory
2025-03-31 13:13:20,063:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model',
                 GradientBoostingRegressor(random_state=4984))])
2025-03-31 13:13:20,063:INFO:save_model() successfully completed......................................
2025-03-31 13:14:05,480:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:07,891:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:08,251:INFO:PyCaret TSForecastingExperiment
2025-03-31 13:14:08,251:INFO:Logging name: ts-default-name
2025-03-31 13:14:08,251:INFO:ML Usecase: MLUsecase.TIME_SERIES
2025-03-31 13:14:08,251:INFO:version 3.3.2
2025-03-31 13:14:08,251:INFO:Initializing setup()
2025-03-31 13:14:08,251:INFO:self.USI: b31e
2025-03-31 13:14:08,251:INFO:self._variable_keys: {'fold_generator', 'significant_sps_no_harmonics', 'logging_param', 'X_train_transformed', 'strictly_positive', 'seasonality_present', 'all_sps_to_use', 'y_test_transformed', 'pipeline', 'gpu_n_jobs_param', 'X_transformed', 'exogenous_present', 'model_engines', 'X_test', 'exp_name_log', 'fold_param', 'X_train', 'enforce_pi', 'y_test', 'log_plots_param', 'y_transformed', 'seed', 'n_jobs_param', '_ml_usecase', 'gpu_param', 'y_train_transformed', 'X_test_transformed', 'fh', 'primary_sp_to_use', 'y_train', 'X', 'USI', 'approach_type', 'data', 'html_param', 'exp_id', 'y', 'index_type', 'idx', 'candidate_sps', 'memory', 'enforce_exogenous', '_available_plots', 'significant_sps'}
2025-03-31 13:14:08,251:INFO:Checking environment
2025-03-31 13:14:08,251:INFO:python_version: 3.9.20
2025-03-31 13:14:08,251:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:14:08,251:INFO:machine: AMD64
2025-03-31 13:14:08,261:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:14:08,267:INFO:Memory: svmem(total=16885276672, available=3578458112, percent=78.8, used=13306818560, free=3578458112)
2025-03-31 13:14:08,267:INFO:Physical Core: 4
2025-03-31 13:14:08,267:INFO:Logical Core: 8
2025-03-31 13:14:08,267:INFO:Checking libraries
2025-03-31 13:14:08,267:INFO:System:
2025-03-31 13:14:08,267:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:14:08,267:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:14:08,267:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:14:08,267:INFO:PyCaret required dependencies:
2025-03-31 13:14:08,848:INFO:                 pip: 25.0
2025-03-31 13:14:08,848:INFO:          setuptools: 75.8.0
2025-03-31 13:14:08,849:INFO:             pycaret: 3.3.2
2025-03-31 13:14:08,849:INFO:             IPython: 8.15.0
2025-03-31 13:14:08,849:INFO:          ipywidgets: 8.1.5
2025-03-31 13:14:08,849:INFO:                tqdm: 4.67.1
2025-03-31 13:14:08,849:INFO:               numpy: 1.26.4
2025-03-31 13:14:08,849:INFO:              pandas: 2.1.4
2025-03-31 13:14:08,849:INFO:              jinja2: 3.1.5
2025-03-31 13:14:08,849:INFO:               scipy: 1.11.4
2025-03-31 13:14:08,849:INFO:              joblib: 1.3.2
2025-03-31 13:14:08,849:INFO:             sklearn: 1.4.2
2025-03-31 13:14:08,849:INFO:                pyod: 2.0.4
2025-03-31 13:14:08,849:INFO:            imblearn: 0.12.3
2025-03-31 13:14:08,849:INFO:   category_encoders: 2.6.4
2025-03-31 13:14:08,849:INFO:            lightgbm: 4.6.0
2025-03-31 13:14:08,849:INFO:               numba: 0.60.0
2025-03-31 13:14:08,849:INFO:            requests: 2.32.3
2025-03-31 13:14:08,849:INFO:          matplotlib: 3.7.5
2025-03-31 13:14:08,849:INFO:          scikitplot: 0.3.7
2025-03-31 13:14:08,849:INFO:         yellowbrick: 1.5
2025-03-31 13:14:08,849:INFO:              plotly: 5.24.1
2025-03-31 13:14:08,849:INFO:    plotly-resampler: Not installed
2025-03-31 13:14:08,849:INFO:             kaleido: 0.2.1
2025-03-31 13:14:08,849:INFO:           schemdraw: 0.15
2025-03-31 13:14:08,849:INFO:         statsmodels: 0.14.4
2025-03-31 13:14:08,849:INFO:              sktime: 0.26.0
2025-03-31 13:14:08,849:INFO:               tbats: 1.1.3
2025-03-31 13:14:08,849:INFO:            pmdarima: 2.0.4
2025-03-31 13:14:08,849:INFO:              psutil: 5.9.0
2025-03-31 13:14:08,849:INFO:          markupsafe: 3.0.2
2025-03-31 13:14:08,849:INFO:             pickle5: Not installed
2025-03-31 13:14:08,849:INFO:         cloudpickle: 3.0.0
2025-03-31 13:14:08,849:INFO:         deprecation: 2.1.0
2025-03-31 13:14:08,849:INFO:              xxhash: 3.5.0
2025-03-31 13:14:08,849:INFO:           wurlitzer: Not installed
2025-03-31 13:14:08,849:INFO:PyCaret optional dependencies:
2025-03-31 13:14:08,862:INFO:                shap: Not installed
2025-03-31 13:14:08,862:INFO:           interpret: Not installed
2025-03-31 13:14:08,862:INFO:                umap: Not installed
2025-03-31 13:14:08,862:INFO:     ydata_profiling: Not installed
2025-03-31 13:14:08,862:INFO:  explainerdashboard: Not installed
2025-03-31 13:14:08,862:INFO:             autoviz: Not installed
2025-03-31 13:14:08,863:INFO:           fairlearn: Not installed
2025-03-31 13:14:08,863:INFO:          deepchecks: Not installed
2025-03-31 13:14:08,863:INFO:             xgboost: Not installed
2025-03-31 13:14:08,863:INFO:            catboost: Not installed
2025-03-31 13:14:08,863:INFO:              kmodes: Not installed
2025-03-31 13:14:08,863:INFO:             mlxtend: Not installed
2025-03-31 13:14:08,863:INFO:       statsforecast: Not installed
2025-03-31 13:14:08,863:INFO:        tune_sklearn: Not installed
2025-03-31 13:14:08,863:INFO:                 ray: Not installed
2025-03-31 13:14:08,863:INFO:            hyperopt: Not installed
2025-03-31 13:14:08,863:INFO:              optuna: Not installed
2025-03-31 13:14:08,863:INFO:               skopt: Not installed
2025-03-31 13:14:08,863:INFO:              mlflow: Not installed
2025-03-31 13:14:08,863:INFO:              gradio: Not installed
2025-03-31 13:14:08,863:INFO:             fastapi: Not installed
2025-03-31 13:14:08,863:INFO:             uvicorn: Not installed
2025-03-31 13:14:08,863:INFO:              m2cgen: Not installed
2025-03-31 13:14:08,863:INFO:           evidently: Not installed
2025-03-31 13:14:08,863:INFO:               fugue: Not installed
2025-03-31 13:14:08,863:INFO:           streamlit: 1.20.0
2025-03-31 13:14:08,863:INFO:             prophet: Not installed
2025-03-31 13:14:08,863:INFO:None
2025-03-31 13:14:08,864:INFO:Set Forecast Horizon.
2025-03-31 13:14:08,866:INFO:Set up Train-Test Splits.
2025-03-31 13:14:08,890:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:14:08,896:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2025-03-31 13:14:08,896:INFO:Set up Seasonal Period.
2025-03-31 13:14:08,908:INFO:Setting the seasonal component type - 'add' or 'mul'.
2025-03-31 13:14:08,908:INFO:Checking if data is strictly positive.
2025-03-31 13:14:08,970:INFO:Creating final display dataframe.
2025-03-31 13:14:08,980:INFO:Setup Display Container:                                          Description                         Value
0                                         session_id                          2771
1                                             Target  Number of airline passengers
2                                           Approach                    Univariate
3                                Exogenous Variables                   Not Present
4                                Original data shape                      (144, 1)
5                             Transformed data shape                      (144, 1)
6                        Transformed train set shape                      (132, 1)
7                         Transformed test set shape                       (12, 1)
8                           Rows with missing values                          0.0%
9                                     Fold Generator       ExpandingWindowSplitter
10                                       Fold Number                             3
11                       Enforce Prediction Interval                         False
12                   Splits used for hyperparameters                           all
13                   User Defined Seasonal Period(s)                          None
14                           Ignore Seasonality Test                         False
15                        Seasonality Detection Algo                          auto
16                            Max Period to Consider                            60
17                         Seasonal Period(s) Tested          [12, 24, 36, 11, 48]
18                    Significant Seasonal Period(s)          [12, 24, 36, 11, 48]
19  Significant Seasonal Period(s) without Harmonics                  [48, 36, 11]
20                                  Remove Harmonics                         False
21                            Harmonics Order Method                  harmonic_max
22                          Num Seasonalities to Use                             1
23                          All Seasonalities to Use                          [12]
24                               Primary Seasonality                            12
25                               Seasonality Present                          True
26                                  Seasonality Type                           mul
27                          Target Strictly Positive                          True
28                                Target White Noise                            No
29                                     Recommended d                             1
30                            Recommended Seasonal D                             1
31                                        Preprocess                         False
32                                          CPU Jobs                            -1
33                                           Use GPU                         False
34                                    Log Experiment                         False
35                                   Experiment Name               ts-default-name
36                                               USI                          b31e
2025-03-31 13:14:08,985:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2025-03-31 13:14:09,039:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,039:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,039:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,039:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,039:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,039:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,040:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,040:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,041:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,042:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,043:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,043:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,043:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,044:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,044:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,044:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,045:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,045:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,049:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,049:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,049:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,050:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,050:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,050:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,050:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,051:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,052:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,054:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,054:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,054:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,054:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,055:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,055:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,056:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,056:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,056:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,057:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,059:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,059:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,059:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,060:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,060:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,060:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,061:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,062:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,063:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,064:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,064:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,064:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,065:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,065:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,065:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,066:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,066:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,069:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,069:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,070:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,070:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,070:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,071:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,071:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,073:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,074:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,074:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,074:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,075:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,075:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,076:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,076:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,076:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,076:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,077:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,080:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,080:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,080:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,081:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,081:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,081:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,082:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,083:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,085:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,085:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,085:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,086:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,086:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,086:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,086:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,087:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,090:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,090:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,091:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,091:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,091:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,092:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,093:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,094:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,095:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,095:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,095:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,096:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,096:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,096:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,096:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,097:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,097:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,099:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,100:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,100:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,100:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,100:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,101:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,102:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,103:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,103:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,104:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,104:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,104:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,104:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,105:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,105:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,109:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,109:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,109:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,109:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,110:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,112:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,113:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,113:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,113:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,114:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,114:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,114:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,115:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,115:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,115:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,115:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,118:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,119:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,120:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,120:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,121:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,122:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,122:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,122:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,123:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,123:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,123:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,124:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,124:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,124:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,127:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,128:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,128:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,129:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,131:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,132:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,132:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,133:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,133:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,134:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,134:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,134:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,135:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,135:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,136:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,140:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,141:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,141:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,142:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,144:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,145:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,146:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,146:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,146:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,146:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,148:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,148:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,148:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,149:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,153:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,154:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,155:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,155:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,157:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,158:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,159:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,159:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,159:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,160:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,160:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,160:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,160:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,161:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,161:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,164:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,165:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,166:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,167:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,168:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,169:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,169:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,169:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,170:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,170:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,170:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,170:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,170:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,173:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,174:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,174:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,175:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,176:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,176:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,177:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,177:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,177:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,177:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,178:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,178:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,178:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,178:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,178:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,178:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,181:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,182:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,183:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,184:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,184:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,184:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,185:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,185:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,185:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,185:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,185:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,186:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,188:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,189:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,191:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,192:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,192:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,192:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,192:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,193:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,193:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,193:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,193:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,193:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,194:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,196:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,198:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,199:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,200:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,200:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,200:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,200:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,201:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,201:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,201:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,201:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,204:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,206:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,207:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,207:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,208:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,208:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,208:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,208:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,209:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,209:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,209:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,209:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,211:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,214:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,215:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,215:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,215:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,216:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,216:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,216:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,216:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,216:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,217:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,219:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,222:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,223:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,223:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,223:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,223:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,224:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,224:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,224:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,224:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,225:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,225:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,228:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,231:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,231:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,231:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,231:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,232:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,232:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,232:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,232:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,233:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,235:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,238:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,239:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,239:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,239:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,240:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,240:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,240:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,240:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,242:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,242:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,244:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,247:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,248:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,248:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,248:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,248:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,249:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,249:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,249:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,252:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,255:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,256:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,256:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,256:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,256:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,256:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,257:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,257:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,257:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,260:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,263:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,264:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,264:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,264:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,264:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,265:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,265:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,267:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,271:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,271:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,272:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,272:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,272:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,272:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,273:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,273:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,275:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,279:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,279:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,279:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,280:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,280:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,280:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,282:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,286:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,286:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,287:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,287:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,287:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,287:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,288:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,290:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,293:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,294:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,294:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,294:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,294:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,297:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,301:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,301:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,301:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,301:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,301:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,302:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,304:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,308:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,309:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,309:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,309:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,312:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,315:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,315:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,315:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,315:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,316:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,318:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,323:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,323:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,323:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,326:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,330:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,330:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,330:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,330:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,333:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,337:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,338:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,340:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,344:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,345:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,345:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,347:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,353:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,355:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,360:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2025-03-31 13:14:09,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,360:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2025-03-31 13:14:09,362:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,370:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,377:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,384:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:09,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:14:09,389:INFO:setup() successfully completed in 1.14s...............
2025-03-31 13:14:09,390:INFO:Initializing compare_models()
2025-03-31 13:14:09,390:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2025-03-31 13:14:09,390:INFO:Checking exceptions
2025-03-31 13:14:09,391:INFO:Preparing display monitor
2025-03-31 13:14:09,394:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:713: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2025-03-31 13:14:09,394:INFO:Initializing Naive Forecaster
2025-03-31 13:14:09,394:INFO:Total runtime is 0.0 minutes
2025-03-31 13:14:09,395:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:09,395:INFO:Initializing create_model()
2025-03-31 13:14:09,395:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:09,395:INFO:Checking exceptions
2025-03-31 13:14:09,395:INFO:Importing libraries
2025-03-31 13:14:09,395:INFO:Copying training dataset
2025-03-31 13:14:09,399:INFO:Defining folds
2025-03-31 13:14:09,399:INFO:Declaring metric variables
2025-03-31 13:14:09,399:INFO:Importing untrained model
2025-03-31 13:14:09,399:INFO:Naive Forecaster Imported successfully
2025-03-31 13:14:09,401:INFO:Starting cross validation
2025-03-31 13:14:09,402:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:13,027:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:13,040:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:13,053:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:13,348:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:13,349:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:13,349:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:13,349:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:13,350:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:13,351:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:13,360:INFO:Calculating mean and std
2025-03-31 13:14:13,361:INFO:Creating metrics dataframe
2025-03-31 13:14:13,366:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:13,369:INFO:Uploading results into container
2025-03-31 13:14:13,369:INFO:Uploading model into container now
2025-03-31 13:14:13,369:INFO:_master_model_container: 1
2025-03-31 13:14:13,369:INFO:_display_container: 2
2025-03-31 13:14:13,370:INFO:NaiveForecaster()
2025-03-31 13:14:13,370:INFO:create_model() successfully completed......................................
2025-03-31 13:14:13,504:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:13,504:INFO:Creating metrics dataframe
2025-03-31 13:14:13,506:INFO:Initializing Grand Means Forecaster
2025-03-31 13:14:13,506:INFO:Total runtime is 0.06852376461029053 minutes
2025-03-31 13:14:13,506:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:13,506:INFO:Initializing create_model()
2025-03-31 13:14:13,506:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:13,506:INFO:Checking exceptions
2025-03-31 13:14:13,506:INFO:Importing libraries
2025-03-31 13:14:13,506:INFO:Copying training dataset
2025-03-31 13:14:13,508:INFO:Defining folds
2025-03-31 13:14:13,508:INFO:Declaring metric variables
2025-03-31 13:14:13,508:INFO:Importing untrained model
2025-03-31 13:14:13,508:INFO:Grand Means Forecaster Imported successfully
2025-03-31 13:14:13,509:INFO:Starting cross validation
2025-03-31 13:14:13,510:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:16,265:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:16,271:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:16,281:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:16,566:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:16,567:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:16,567:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:16,568:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:16,568:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:16,568:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:16,578:INFO:Calculating mean and std
2025-03-31 13:14:16,579:INFO:Creating metrics dataframe
2025-03-31 13:14:16,580:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:16,582:INFO:Uploading results into container
2025-03-31 13:14:16,582:INFO:Uploading model into container now
2025-03-31 13:14:16,583:INFO:_master_model_container: 2
2025-03-31 13:14:16,583:INFO:_display_container: 2
2025-03-31 13:14:16,583:INFO:NaiveForecaster(strategy='mean')
2025-03-31 13:14:16,583:INFO:create_model() successfully completed......................................
2025-03-31 13:14:16,707:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:16,707:INFO:Creating metrics dataframe
2025-03-31 13:14:16,709:INFO:Initializing Seasonal Naive Forecaster
2025-03-31 13:14:16,710:INFO:Total runtime is 0.12193490266799926 minutes
2025-03-31 13:14:16,710:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:16,710:INFO:Initializing create_model()
2025-03-31 13:14:16,710:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:16,710:INFO:Checking exceptions
2025-03-31 13:14:16,710:INFO:Importing libraries
2025-03-31 13:14:16,710:INFO:Copying training dataset
2025-03-31 13:14:16,712:INFO:Defining folds
2025-03-31 13:14:16,712:INFO:Declaring metric variables
2025-03-31 13:14:16,712:INFO:Importing untrained model
2025-03-31 13:14:16,712:INFO:Seasonal Naive Forecaster Imported successfully
2025-03-31 13:14:16,713:INFO:Starting cross validation
2025-03-31 13:14:16,714:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:16,826:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:16,828:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:19,489:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:19,494:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:14:19,825:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:19,825:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:19,830:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:19,830:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:19,844:INFO:Calculating mean and std
2025-03-31 13:14:19,844:INFO:Creating metrics dataframe
2025-03-31 13:14:19,846:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:19,847:INFO:Uploading results into container
2025-03-31 13:14:19,847:INFO:Uploading model into container now
2025-03-31 13:14:19,847:INFO:_master_model_container: 3
2025-03-31 13:14:19,847:INFO:_display_container: 2
2025-03-31 13:14:19,848:INFO:NaiveForecaster(sp=12)
2025-03-31 13:14:19,848:INFO:create_model() successfully completed......................................
2025-03-31 13:14:19,980:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:19,980:INFO:Creating metrics dataframe
2025-03-31 13:14:19,983:INFO:Initializing Polynomial Trend Forecaster
2025-03-31 13:14:19,983:INFO:Total runtime is 0.17647132476170857 minutes
2025-03-31 13:14:19,983:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:19,983:INFO:Initializing create_model()
2025-03-31 13:14:19,983:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:19,983:INFO:Checking exceptions
2025-03-31 13:14:19,983:INFO:Importing libraries
2025-03-31 13:14:19,983:INFO:Copying training dataset
2025-03-31 13:14:19,985:INFO:Defining folds
2025-03-31 13:14:19,985:INFO:Declaring metric variables
2025-03-31 13:14:19,985:INFO:Importing untrained model
2025-03-31 13:14:19,986:INFO:Polynomial Trend Forecaster Imported successfully
2025-03-31 13:14:19,987:INFO:Starting cross validation
2025-03-31 13:14:19,987:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:20,015:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,015:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,016:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,016:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,016:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,016:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,031:INFO:Calculating mean and std
2025-03-31 13:14:20,031:INFO:Creating metrics dataframe
2025-03-31 13:14:20,033:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:20,035:INFO:Uploading results into container
2025-03-31 13:14:20,035:INFO:Uploading model into container now
2025-03-31 13:14:20,035:INFO:_master_model_container: 4
2025-03-31 13:14:20,035:INFO:_display_container: 2
2025-03-31 13:14:20,035:INFO:PolynomialTrendForecaster()
2025-03-31 13:14:20,036:INFO:create_model() successfully completed......................................
2025-03-31 13:14:20,134:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:20,134:INFO:Creating metrics dataframe
2025-03-31 13:14:20,137:INFO:Initializing ARIMA
2025-03-31 13:14:20,137:INFO:Total runtime is 0.17904780705769857 minutes
2025-03-31 13:14:20,137:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:20,137:INFO:Initializing create_model()
2025-03-31 13:14:20,137:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:20,137:INFO:Checking exceptions
2025-03-31 13:14:20,137:INFO:Importing libraries
2025-03-31 13:14:20,137:INFO:Copying training dataset
2025-03-31 13:14:20,139:INFO:Defining folds
2025-03-31 13:14:20,140:INFO:Declaring metric variables
2025-03-31 13:14:20,140:INFO:Importing untrained model
2025-03-31 13:14:20,141:INFO:ARIMA Imported successfully
2025-03-31 13:14:20,142:INFO:Starting cross validation
2025-03-31 13:14:20,143:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:20,305:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,306:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,308:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,309:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,313:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,313:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:20,322:INFO:Calculating mean and std
2025-03-31 13:14:20,323:INFO:Creating metrics dataframe
2025-03-31 13:14:20,325:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:20,326:INFO:Uploading results into container
2025-03-31 13:14:20,326:INFO:Uploading model into container now
2025-03-31 13:14:20,326:INFO:_master_model_container: 5
2025-03-31 13:14:20,326:INFO:_display_container: 2
2025-03-31 13:14:20,326:INFO:ARIMA(seasonal_order=(0, 1, 0, 12))
2025-03-31 13:14:20,326:INFO:create_model() successfully completed......................................
2025-03-31 13:14:20,425:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:20,426:INFO:Creating metrics dataframe
2025-03-31 13:14:20,428:INFO:Initializing Auto ARIMA
2025-03-31 13:14:20,428:INFO:Total runtime is 0.18388684590657553 minutes
2025-03-31 13:14:20,428:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:20,428:INFO:Initializing create_model()
2025-03-31 13:14:20,428:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:20,428:INFO:Checking exceptions
2025-03-31 13:14:20,428:INFO:Importing libraries
2025-03-31 13:14:20,428:INFO:Copying training dataset
2025-03-31 13:14:20,430:INFO:Defining folds
2025-03-31 13:14:20,430:INFO:Declaring metric variables
2025-03-31 13:14:20,430:INFO:Importing untrained model
2025-03-31 13:14:20,431:INFO:Auto ARIMA Imported successfully
2025-03-31 13:14:20,432:INFO:Starting cross validation
2025-03-31 13:14:20,433:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:22,406:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:22,407:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:22,815:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:22,815:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:23,918:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:23,918:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:23,926:INFO:Calculating mean and std
2025-03-31 13:14:23,927:INFO:Creating metrics dataframe
2025-03-31 13:14:23,928:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:23,929:INFO:Uploading results into container
2025-03-31 13:14:23,929:INFO:Uploading model into container now
2025-03-31 13:14:23,929:INFO:_master_model_container: 6
2025-03-31 13:14:23,929:INFO:_display_container: 2
2025-03-31 13:14:23,930:INFO:AutoARIMA(random_state=2771, sp=12, suppress_warnings=True)
2025-03-31 13:14:23,930:INFO:create_model() successfully completed......................................
2025-03-31 13:14:24,032:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:24,032:INFO:Creating metrics dataframe
2025-03-31 13:14:24,035:INFO:Initializing Exponential Smoothing
2025-03-31 13:14:24,035:INFO:Total runtime is 0.24400518735249838 minutes
2025-03-31 13:14:24,035:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:24,035:INFO:Initializing create_model()
2025-03-31 13:14:24,035:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:24,035:INFO:Checking exceptions
2025-03-31 13:14:24,035:INFO:Importing libraries
2025-03-31 13:14:24,035:INFO:Copying training dataset
2025-03-31 13:14:24,037:INFO:Defining folds
2025-03-31 13:14:24,037:INFO:Declaring metric variables
2025-03-31 13:14:24,037:INFO:Importing untrained model
2025-03-31 13:14:24,038:INFO:Exponential Smoothing Imported successfully
2025-03-31 13:14:24,039:INFO:Starting cross validation
2025-03-31 13:14:24,039:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:24,181:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,182:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,199:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,199:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,200:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,201:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,209:INFO:Calculating mean and std
2025-03-31 13:14:24,209:INFO:Creating metrics dataframe
2025-03-31 13:14:24,210:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:24,212:INFO:Uploading results into container
2025-03-31 13:14:24,212:INFO:Uploading model into container now
2025-03-31 13:14:24,212:INFO:_master_model_container: 7
2025-03-31 13:14:24,212:INFO:_display_container: 2
2025-03-31 13:14:24,212:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2025-03-31 13:14:24,212:INFO:create_model() successfully completed......................................
2025-03-31 13:14:24,315:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:24,315:INFO:Creating metrics dataframe
2025-03-31 13:14:24,318:INFO:Initializing ETS
2025-03-31 13:14:24,318:INFO:Total runtime is 0.2487207571665446 minutes
2025-03-31 13:14:24,318:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:24,318:INFO:Initializing create_model()
2025-03-31 13:14:24,318:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:24,318:INFO:Checking exceptions
2025-03-31 13:14:24,318:INFO:Importing libraries
2025-03-31 13:14:24,319:INFO:Copying training dataset
2025-03-31 13:14:24,320:INFO:Defining folds
2025-03-31 13:14:24,320:INFO:Declaring metric variables
2025-03-31 13:14:24,320:INFO:Importing untrained model
2025-03-31 13:14:24,321:INFO:ETS Imported successfully
2025-03-31 13:14:24,322:INFO:Starting cross validation
2025-03-31 13:14:24,323:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:24,498:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,498:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,556:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,557:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,566:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,567:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,582:INFO:Calculating mean and std
2025-03-31 13:14:24,583:INFO:Creating metrics dataframe
2025-03-31 13:14:24,584:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:24,586:INFO:Uploading results into container
2025-03-31 13:14:24,586:INFO:Uploading model into container now
2025-03-31 13:14:24,586:INFO:_master_model_container: 8
2025-03-31 13:14:24,587:INFO:_display_container: 2
2025-03-31 13:14:24,587:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2025-03-31 13:14:24,587:INFO:create_model() successfully completed......................................
2025-03-31 13:14:24,692:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:24,692:INFO:Creating metrics dataframe
2025-03-31 13:14:24,695:INFO:Initializing Theta Forecaster
2025-03-31 13:14:24,695:INFO:Total runtime is 0.25501792828241987 minutes
2025-03-31 13:14:24,696:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:24,696:INFO:Initializing create_model()
2025-03-31 13:14:24,696:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:24,696:INFO:Checking exceptions
2025-03-31 13:14:24,696:INFO:Importing libraries
2025-03-31 13:14:24,696:INFO:Copying training dataset
2025-03-31 13:14:24,698:INFO:Defining folds
2025-03-31 13:14:24,698:INFO:Declaring metric variables
2025-03-31 13:14:24,699:INFO:Importing untrained model
2025-03-31 13:14:24,699:INFO:Theta Forecaster Imported successfully
2025-03-31 13:14:24,701:INFO:Starting cross validation
2025-03-31 13:14:24,703:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:24,791:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,791:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,791:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,792:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,792:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,792:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,799:INFO:Calculating mean and std
2025-03-31 13:14:24,799:INFO:Creating metrics dataframe
2025-03-31 13:14:24,801:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:24,803:INFO:Uploading results into container
2025-03-31 13:14:24,803:INFO:Uploading model into container now
2025-03-31 13:14:24,803:INFO:_master_model_container: 9
2025-03-31 13:14:24,803:INFO:_display_container: 2
2025-03-31 13:14:24,804:INFO:ThetaForecaster(sp=12)
2025-03-31 13:14:24,804:INFO:create_model() successfully completed......................................
2025-03-31 13:14:24,911:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:24,911:INFO:Creating metrics dataframe
2025-03-31 13:14:24,914:INFO:Initializing STLF
2025-03-31 13:14:24,914:INFO:Total runtime is 0.2586617906888326 minutes
2025-03-31 13:14:24,915:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:24,915:INFO:Initializing create_model()
2025-03-31 13:14:24,915:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=stlf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:24,915:INFO:Checking exceptions
2025-03-31 13:14:24,915:INFO:Importing libraries
2025-03-31 13:14:24,915:INFO:Copying training dataset
2025-03-31 13:14:24,917:INFO:Defining folds
2025-03-31 13:14:24,917:INFO:Declaring metric variables
2025-03-31 13:14:24,917:INFO:Importing untrained model
2025-03-31 13:14:24,918:INFO:STLF Imported successfully
2025-03-31 13:14:24,919:INFO:Starting cross validation
2025-03-31 13:14:24,920:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:24,996:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:24,996:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,004:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,004:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,005:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,006:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,018:INFO:Calculating mean and std
2025-03-31 13:14:25,018:INFO:Creating metrics dataframe
2025-03-31 13:14:25,020:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:25,021:INFO:Uploading results into container
2025-03-31 13:14:25,021:INFO:Uploading model into container now
2025-03-31 13:14:25,022:INFO:_master_model_container: 10
2025-03-31 13:14:25,022:INFO:_display_container: 2
2025-03-31 13:14:25,022:INFO:STLForecaster(sp=12)
2025-03-31 13:14:25,022:INFO:create_model() successfully completed......................................
2025-03-31 13:14:25,130:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:25,130:INFO:Creating metrics dataframe
2025-03-31 13:14:25,133:INFO:Initializing Croston
2025-03-31 13:14:25,133:INFO:Total runtime is 0.26231785615285236 minutes
2025-03-31 13:14:25,133:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:25,133:INFO:Initializing create_model()
2025-03-31 13:14:25,133:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:25,133:INFO:Checking exceptions
2025-03-31 13:14:25,133:INFO:Importing libraries
2025-03-31 13:14:25,133:INFO:Copying training dataset
2025-03-31 13:14:25,135:INFO:Defining folds
2025-03-31 13:14:25,136:INFO:Declaring metric variables
2025-03-31 13:14:25,136:INFO:Importing untrained model
2025-03-31 13:14:25,136:INFO:Croston Imported successfully
2025-03-31 13:14:25,138:INFO:Starting cross validation
2025-03-31 13:14:25,138:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:25,168:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,168:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,168:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,169:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,171:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,171:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:25,188:INFO:Calculating mean and std
2025-03-31 13:14:25,188:INFO:Creating metrics dataframe
2025-03-31 13:14:25,190:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:25,192:INFO:Uploading results into container
2025-03-31 13:14:25,192:INFO:Uploading model into container now
2025-03-31 13:14:25,192:INFO:_master_model_container: 11
2025-03-31 13:14:25,192:INFO:_display_container: 2
2025-03-31 13:14:25,193:INFO:Croston()
2025-03-31 13:14:25,193:INFO:create_model() successfully completed......................................
2025-03-31 13:14:25,299:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:25,299:INFO:Creating metrics dataframe
2025-03-31 13:14:25,303:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:25,303:INFO:Total runtime is 0.2651438951492309 minutes
2025-03-31 13:14:25,303:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:25,303:INFO:Initializing create_model()
2025-03-31 13:14:25,303:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:25,303:INFO:Checking exceptions
2025-03-31 13:14:25,303:INFO:Importing libraries
2025-03-31 13:14:25,304:INFO:Copying training dataset
2025-03-31 13:14:25,306:INFO:Defining folds
2025-03-31 13:14:25,306:INFO:Declaring metric variables
2025-03-31 13:14:25,306:INFO:Importing untrained model
2025-03-31 13:14:25,306:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:25,308:INFO:Starting cross validation
2025-03-31 13:14:25,309:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:26,137:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:26,143:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:26,161:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:26,563:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:26,564:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:26,567:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:26,567:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:26,569:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:26,570:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:26,588:INFO:Calculating mean and std
2025-03-31 13:14:26,588:INFO:Creating metrics dataframe
2025-03-31 13:14:26,590:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:26,591:INFO:Uploading results into container
2025-03-31 13:14:26,591:INFO:Uploading model into container now
2025-03-31 13:14:26,591:INFO:_master_model_container: 12
2025-03-31 13:14:26,591:INFO:_display_container: 2
2025-03-31 13:14:26,594:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=12,
                    window_length=12)
2025-03-31 13:14:26,594:INFO:create_model() successfully completed......................................
2025-03-31 13:14:26,698:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:26,698:INFO:Creating metrics dataframe
2025-03-31 13:14:26,701:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:26,701:INFO:Total runtime is 0.2884519298871358 minutes
2025-03-31 13:14:26,701:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:26,702:INFO:Initializing create_model()
2025-03-31 13:14:26,702:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:26,702:INFO:Checking exceptions
2025-03-31 13:14:26,702:INFO:Importing libraries
2025-03-31 13:14:26,702:INFO:Copying training dataset
2025-03-31 13:14:26,704:INFO:Defining folds
2025-03-31 13:14:26,705:INFO:Declaring metric variables
2025-03-31 13:14:26,705:INFO:Importing untrained model
2025-03-31 13:14:26,706:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:26,708:INFO:Starting cross validation
2025-03-31 13:14:26,709:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:27,564:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:27,564:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:27,577:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:27,901:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:27,901:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:27,920:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:27,921:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:27,924:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:27,924:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:27,931:INFO:Calculating mean and std
2025-03-31 13:14:27,932:INFO:Creating metrics dataframe
2025-03-31 13:14:27,934:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:27,936:INFO:Uploading results into container
2025-03-31 13:14:27,936:INFO:Uploading model into container now
2025-03-31 13:14:27,936:INFO:_master_model_container: 13
2025-03-31 13:14:27,936:INFO:_display_container: 2
2025-03-31 13:14:27,938:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=2771), sp=12,
                    window_length=12)
2025-03-31 13:14:27,938:INFO:create_model() successfully completed......................................
2025-03-31 13:14:28,050:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:28,050:INFO:Creating metrics dataframe
2025-03-31 13:14:28,053:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:28,053:INFO:Total runtime is 0.3109816273053487 minutes
2025-03-31 13:14:28,053:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:28,053:INFO:Initializing create_model()
2025-03-31 13:14:28,053:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:28,053:INFO:Checking exceptions
2025-03-31 13:14:28,053:INFO:Importing libraries
2025-03-31 13:14:28,053:INFO:Copying training dataset
2025-03-31 13:14:28,055:INFO:Defining folds
2025-03-31 13:14:28,055:INFO:Declaring metric variables
2025-03-31 13:14:28,055:INFO:Importing untrained model
2025-03-31 13:14:28,056:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:28,057:INFO:Starting cross validation
2025-03-31 13:14:28,058:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:28,391:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:28,391:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:28,814:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:28,817:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-31 13:14:29,111:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,111:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,115:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,115:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,131:INFO:Calculating mean and std
2025-03-31 13:14:29,131:INFO:Creating metrics dataframe
2025-03-31 13:14:29,134:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:29,135:INFO:Uploading results into container
2025-03-31 13:14:29,135:INFO:Uploading model into container now
2025-03-31 13:14:29,135:INFO:_master_model_container: 14
2025-03-31 13:14:29,135:INFO:_display_container: 2
2025-03-31 13:14:29,137:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=2771), sp=12,
                    window_length=12)
2025-03-31 13:14:29,137:INFO:create_model() successfully completed......................................
2025-03-31 13:14:29,235:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:29,235:INFO:Creating metrics dataframe
2025-03-31 13:14:29,237:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:29,237:INFO:Total runtime is 0.3307104468345642 minutes
2025-03-31 13:14:29,237:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:29,237:INFO:Initializing create_model()
2025-03-31 13:14:29,237:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:29,237:INFO:Checking exceptions
2025-03-31 13:14:29,237:INFO:Importing libraries
2025-03-31 13:14:29,237:INFO:Copying training dataset
2025-03-31 13:14:29,239:INFO:Defining folds
2025-03-31 13:14:29,239:INFO:Declaring metric variables
2025-03-31 13:14:29,239:INFO:Importing untrained model
2025-03-31 13:14:29,241:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:29,242:INFO:Starting cross validation
2025-03-31 13:14:29,243:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:29,560:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,560:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,594:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,594:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,607:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,607:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:29,623:INFO:Calculating mean and std
2025-03-31 13:14:29,623:INFO:Creating metrics dataframe
2025-03-31 13:14:29,625:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:29,626:INFO:Uploading results into container
2025-03-31 13:14:29,626:INFO:Uploading model into container now
2025-03-31 13:14:29,627:INFO:_master_model_container: 15
2025-03-31 13:14:29,627:INFO:_display_container: 2
2025-03-31 13:14:29,628:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=2771), sp=12,
                    window_length=12)
2025-03-31 13:14:29,628:INFO:create_model() successfully completed......................................
2025-03-31 13:14:29,732:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:29,732:INFO:Creating metrics dataframe
2025-03-31 13:14:29,735:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:29,735:INFO:Total runtime is 0.3390153368314107 minutes
2025-03-31 13:14:29,735:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:29,735:INFO:Initializing create_model()
2025-03-31 13:14:29,735:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:29,735:INFO:Checking exceptions
2025-03-31 13:14:29,735:INFO:Importing libraries
2025-03-31 13:14:29,735:INFO:Copying training dataset
2025-03-31 13:14:29,737:INFO:Defining folds
2025-03-31 13:14:29,737:INFO:Declaring metric variables
2025-03-31 13:14:29,737:INFO:Importing untrained model
2025-03-31 13:14:29,738:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:29,739:INFO:Starting cross validation
2025-03-31 13:14:29,739:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:30,054:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,055:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,087:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,088:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,097:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,097:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,106:INFO:Calculating mean and std
2025-03-31 13:14:30,106:INFO:Creating metrics dataframe
2025-03-31 13:14:30,108:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:30,109:INFO:Uploading results into container
2025-03-31 13:14:30,109:INFO:Uploading model into container now
2025-03-31 13:14:30,109:INFO:_master_model_container: 16
2025-03-31 13:14:30,109:INFO:_display_container: 2
2025-03-31 13:14:30,111:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=2771), sp=12,
                    window_length=12)
2025-03-31 13:14:30,111:INFO:create_model() successfully completed......................................
2025-03-31 13:14:30,210:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:30,212:INFO:Creating metrics dataframe
2025-03-31 13:14:30,213:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:30,213:INFO:Total runtime is 0.3469722549120585 minutes
2025-03-31 13:14:30,214:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:30,214:INFO:Initializing create_model()
2025-03-31 13:14:30,214:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:30,214:INFO:Checking exceptions
2025-03-31 13:14:30,214:INFO:Importing libraries
2025-03-31 13:14:30,214:INFO:Copying training dataset
2025-03-31 13:14:30,216:INFO:Defining folds
2025-03-31 13:14:30,216:INFO:Declaring metric variables
2025-03-31 13:14:30,216:INFO:Importing untrained model
2025-03-31 13:14:30,217:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:30,218:INFO:Starting cross validation
2025-03-31 13:14:30,218:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:30,583:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,583:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,583:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,584:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,594:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,595:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:30,607:INFO:Calculating mean and std
2025-03-31 13:14:30,607:INFO:Creating metrics dataframe
2025-03-31 13:14:30,608:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:30,610:INFO:Uploading results into container
2025-03-31 13:14:30,610:INFO:Uploading model into container now
2025-03-31 13:14:30,610:INFO:_master_model_container: 17
2025-03-31 13:14:30,610:INFO:_display_container: 2
2025-03-31 13:14:30,611:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=12, window_length=12)
2025-03-31 13:14:30,611:INFO:create_model() successfully completed......................................
2025-03-31 13:14:30,713:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:30,713:INFO:Creating metrics dataframe
2025-03-31 13:14:30,716:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:30,716:INFO:Total runtime is 0.355355970064799 minutes
2025-03-31 13:14:30,716:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:30,716:INFO:Initializing create_model()
2025-03-31 13:14:30,716:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:30,716:INFO:Checking exceptions
2025-03-31 13:14:30,716:INFO:Importing libraries
2025-03-31 13:14:30,717:INFO:Copying training dataset
2025-03-31 13:14:30,719:INFO:Defining folds
2025-03-31 13:14:30,719:INFO:Declaring metric variables
2025-03-31 13:14:30,719:INFO:Importing untrained model
2025-03-31 13:14:30,720:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:30,721:INFO:Starting cross validation
2025-03-31 13:14:30,722:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:31,053:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,053:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,073:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,073:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,091:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,091:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,104:INFO:Calculating mean and std
2025-03-31 13:14:31,105:INFO:Creating metrics dataframe
2025-03-31 13:14:31,106:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:31,108:INFO:Uploading results into container
2025-03-31 13:14:31,108:INFO:Uploading model into container now
2025-03-31 13:14:31,108:INFO:_master_model_container: 18
2025-03-31 13:14:31,108:INFO:_display_container: 2
2025-03-31 13:14:31,110:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=12, window_length=12)
2025-03-31 13:14:31,110:INFO:create_model() successfully completed......................................
2025-03-31 13:14:31,213:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:31,213:INFO:Creating metrics dataframe
2025-03-31 13:14:31,216:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:31,216:INFO:Total runtime is 0.36369153261184695 minutes
2025-03-31 13:14:31,216:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:31,216:INFO:Initializing create_model()
2025-03-31 13:14:31,216:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:31,217:INFO:Checking exceptions
2025-03-31 13:14:31,217:INFO:Importing libraries
2025-03-31 13:14:31,217:INFO:Copying training dataset
2025-03-31 13:14:31,219:INFO:Defining folds
2025-03-31 13:14:31,219:INFO:Declaring metric variables
2025-03-31 13:14:31,220:INFO:Importing untrained model
2025-03-31 13:14:31,220:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:31,222:INFO:Starting cross validation
2025-03-31 13:14:31,223:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:31,545:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,545:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,551:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,551:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,586:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,586:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:31,592:INFO:Calculating mean and std
2025-03-31 13:14:31,592:INFO:Creating metrics dataframe
2025-03-31 13:14:31,594:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:31,596:INFO:Uploading results into container
2025-03-31 13:14:31,596:INFO:Uploading model into container now
2025-03-31 13:14:31,596:INFO:_master_model_container: 19
2025-03-31 13:14:31,596:INFO:_display_container: 2
2025-03-31 13:14:31,598:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=12,
                    window_length=12)
2025-03-31 13:14:31,598:INFO:create_model() successfully completed......................................
2025-03-31 13:14:31,697:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:31,697:INFO:Creating metrics dataframe
2025-03-31 13:14:31,699:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:31,699:INFO:Total runtime is 0.3717500567436218 minutes
2025-03-31 13:14:31,700:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:31,700:INFO:Initializing create_model()
2025-03-31 13:14:31,700:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:31,700:INFO:Checking exceptions
2025-03-31 13:14:31,700:INFO:Importing libraries
2025-03-31 13:14:31,700:INFO:Copying training dataset
2025-03-31 13:14:31,702:INFO:Defining folds
2025-03-31 13:14:31,702:INFO:Declaring metric variables
2025-03-31 13:14:31,702:INFO:Importing untrained model
2025-03-31 13:14:31,702:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:31,705:INFO:Starting cross validation
2025-03-31 13:14:31,705:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:32,340:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,341:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,356:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,356:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,357:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,357:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,376:INFO:Calculating mean and std
2025-03-31 13:14:32,377:INFO:Creating metrics dataframe
2025-03-31 13:14:32,379:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:32,380:INFO:Uploading results into container
2025-03-31 13:14:32,380:INFO:Uploading model into container now
2025-03-31 13:14:32,381:INFO:_master_model_container: 20
2025-03-31 13:14:32,381:INFO:_display_container: 2
2025-03-31 13:14:32,382:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=12,
                    window_length=12)
2025-03-31 13:14:32,383:INFO:create_model() successfully completed......................................
2025-03-31 13:14:32,483:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:32,483:INFO:Creating metrics dataframe
2025-03-31 13:14:32,486:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:32,486:INFO:Total runtime is 0.3848652203877767 minutes
2025-03-31 13:14:32,486:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:32,486:INFO:Initializing create_model()
2025-03-31 13:14:32,486:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:32,486:INFO:Checking exceptions
2025-03-31 13:14:32,486:INFO:Importing libraries
2025-03-31 13:14:32,486:INFO:Copying training dataset
2025-03-31 13:14:32,488:INFO:Defining folds
2025-03-31 13:14:32,488:INFO:Declaring metric variables
2025-03-31 13:14:32,488:INFO:Importing untrained model
2025-03-31 13:14:32,489:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:32,490:INFO:Starting cross validation
2025-03-31 13:14:32,491:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:32,816:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,817:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,833:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,834:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,837:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,837:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:32,846:INFO:Calculating mean and std
2025-03-31 13:14:32,846:INFO:Creating metrics dataframe
2025-03-31 13:14:32,848:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:32,850:INFO:Uploading results into container
2025-03-31 13:14:32,850:INFO:Uploading model into container now
2025-03-31 13:14:32,850:INFO:_master_model_container: 21
2025-03-31 13:14:32,850:INFO:_display_container: 2
2025-03-31 13:14:32,851:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=2771), sp=12,
                    window_length=12)
2025-03-31 13:14:32,852:INFO:create_model() successfully completed......................................
2025-03-31 13:14:32,950:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:32,950:INFO:Creating metrics dataframe
2025-03-31 13:14:32,952:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:32,952:INFO:Total runtime is 0.3926223913828532 minutes
2025-03-31 13:14:32,952:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:32,953:INFO:Initializing create_model()
2025-03-31 13:14:32,953:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:32,953:INFO:Checking exceptions
2025-03-31 13:14:32,953:INFO:Importing libraries
2025-03-31 13:14:32,953:INFO:Copying training dataset
2025-03-31 13:14:32,954:INFO:Defining folds
2025-03-31 13:14:32,954:INFO:Declaring metric variables
2025-03-31 13:14:32,955:INFO:Importing untrained model
2025-03-31 13:14:32,955:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:32,956:INFO:Starting cross validation
2025-03-31 13:14:32,957:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:33,707:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:33,708:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:33,708:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:33,709:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:33,723:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:33,724:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:33,730:INFO:Calculating mean and std
2025-03-31 13:14:33,730:INFO:Creating metrics dataframe
2025-03-31 13:14:33,732:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:33,733:INFO:Uploading results into container
2025-03-31 13:14:33,733:INFO:Uploading model into container now
2025-03-31 13:14:33,733:INFO:_master_model_container: 22
2025-03-31 13:14:33,733:INFO:_display_container: 2
2025-03-31 13:14:33,735:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1, random_state=2771),
                    sp=12, window_length=12)
2025-03-31 13:14:33,735:INFO:create_model() successfully completed......................................
2025-03-31 13:14:33,838:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:33,838:INFO:Creating metrics dataframe
2025-03-31 13:14:33,840:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:33,841:INFO:Total runtime is 0.40744012991587325 minutes
2025-03-31 13:14:33,841:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:33,841:INFO:Initializing create_model()
2025-03-31 13:14:33,841:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:33,841:INFO:Checking exceptions
2025-03-31 13:14:33,841:INFO:Importing libraries
2025-03-31 13:14:33,841:INFO:Copying training dataset
2025-03-31 13:14:33,842:INFO:Defining folds
2025-03-31 13:14:33,843:INFO:Declaring metric variables
2025-03-31 13:14:33,843:INFO:Importing untrained model
2025-03-31 13:14:33,843:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:33,844:INFO:Starting cross validation
2025-03-31 13:14:33,845:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:34,568:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:34,569:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:34,582:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:34,582:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:34,602:INFO:Calculating mean and std
2025-03-31 13:14:34,603:INFO:Creating metrics dataframe
2025-03-31 13:14:34,605:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:34,608:INFO:Uploading results into container
2025-03-31 13:14:34,608:INFO:Uploading model into container now
2025-03-31 13:14:34,608:INFO:_master_model_container: 23
2025-03-31 13:14:34,608:INFO:_display_container: 2
2025-03-31 13:14:34,611:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=2771),
                    sp=12, window_length=12)
2025-03-31 13:14:34,611:INFO:create_model() successfully completed......................................
2025-03-31 13:14:34,713:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:34,713:INFO:Creating metrics dataframe
2025-03-31 13:14:34,715:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:34,715:INFO:Total runtime is 0.4220094839731853 minutes
2025-03-31 13:14:34,715:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:34,715:INFO:Initializing create_model()
2025-03-31 13:14:34,715:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:34,715:INFO:Checking exceptions
2025-03-31 13:14:34,715:INFO:Importing libraries
2025-03-31 13:14:34,715:INFO:Copying training dataset
2025-03-31 13:14:34,717:INFO:Defining folds
2025-03-31 13:14:34,717:INFO:Declaring metric variables
2025-03-31 13:14:34,717:INFO:Importing untrained model
2025-03-31 13:14:34,718:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:34,719:INFO:Starting cross validation
2025-03-31 13:14:34,720:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:35,105:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,105:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,119:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,120:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,151:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,151:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,163:INFO:Calculating mean and std
2025-03-31 13:14:35,163:INFO:Creating metrics dataframe
2025-03-31 13:14:35,165:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:35,167:INFO:Uploading results into container
2025-03-31 13:14:35,167:INFO:Uploading model into container now
2025-03-31 13:14:35,167:INFO:_master_model_container: 24
2025-03-31 13:14:35,167:INFO:_display_container: 2
2025-03-31 13:14:35,169:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=2771),
                    sp=12, window_length=12)
2025-03-31 13:14:35,169:INFO:create_model() successfully completed......................................
2025-03-31 13:14:35,270:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:35,270:INFO:Creating metrics dataframe
2025-03-31 13:14:35,272:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:35,272:INFO:Total runtime is 0.4313010652860006 minutes
2025-03-31 13:14:35,273:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:35,273:INFO:Initializing create_model()
2025-03-31 13:14:35,273:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:35,273:INFO:Checking exceptions
2025-03-31 13:14:35,273:INFO:Importing libraries
2025-03-31 13:14:35,273:INFO:Copying training dataset
2025-03-31 13:14:35,274:INFO:Defining folds
2025-03-31 13:14:35,274:INFO:Declaring metric variables
2025-03-31 13:14:35,275:INFO:Importing untrained model
2025-03-31 13:14:35,275:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:35,276:INFO:Starting cross validation
2025-03-31 13:14:35,277:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:35,705:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,706:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,730:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,730:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,740:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,741:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:35,749:INFO:Calculating mean and std
2025-03-31 13:14:35,750:INFO:Creating metrics dataframe
2025-03-31 13:14:35,752:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:35,754:INFO:Uploading results into container
2025-03-31 13:14:35,755:INFO:Uploading model into container now
2025-03-31 13:14:35,755:INFO:_master_model_container: 25
2025-03-31 13:14:35,755:INFO:_display_container: 2
2025-03-31 13:14:35,758:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=2771), sp=12,
                    window_length=12)
2025-03-31 13:14:35,758:INFO:create_model() successfully completed......................................
2025-03-31 13:14:35,858:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:35,858:INFO:Creating metrics dataframe
2025-03-31 13:14:35,861:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2025-03-31 13:14:35,861:INFO:Total runtime is 0.44111520051956177 minutes
2025-03-31 13:14:35,861:INFO:SubProcess create_model() called ==================================
2025-03-31 13:14:35,862:INFO:Initializing create_model()
2025-03-31 13:14:35,862:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E0CE9A4190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:35,862:INFO:Checking exceptions
2025-03-31 13:14:35,862:INFO:Importing libraries
2025-03-31 13:14:35,862:INFO:Copying training dataset
2025-03-31 13:14:35,864:INFO:Defining folds
2025-03-31 13:14:35,864:INFO:Declaring metric variables
2025-03-31 13:14:35,864:INFO:Importing untrained model
2025-03-31 13:14:35,865:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2025-03-31 13:14:35,866:INFO:Starting cross validation
2025-03-31 13:14:35,867:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int32', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2025-03-31 13:14:37,355:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,355:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,359:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,360:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,372:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,372:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,384:INFO:Calculating mean and std
2025-03-31 13:14:37,385:INFO:Creating metrics dataframe
2025-03-31 13:14:37,386:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\time_series\forecasting\oop.py:2694: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  model_results = pd.concat((model_results, model_avgs), axis=0)

2025-03-31 13:14:37,388:INFO:Uploading results into container
2025-03-31 13:14:37,388:INFO:Uploading model into container now
2025-03-31 13:14:37,388:INFO:_master_model_container: 26
2025-03-31 13:14:37,388:INFO:_display_container: 2
2025-03-31 13:14:37,391:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(n_jobs=-1, random_state=2771),
                    sp=12, window_length=12)
2025-03-31 13:14:37,391:INFO:create_model() successfully completed......................................
2025-03-31 13:14:37,504:INFO:SubProcess create_model() end ==================================
2025-03-31 13:14:37,504:INFO:Creating metrics dataframe
2025-03-31 13:14:37,507:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-03-31 13:14:37,508:INFO:Initializing create_model()
2025-03-31 13:14:37,508:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001E0AF174B20>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-31 13:14:37,508:INFO:Checking exceptions
2025-03-31 13:14:37,508:INFO:Importing libraries
2025-03-31 13:14:37,508:INFO:Copying training dataset
2025-03-31 13:14:37,510:INFO:Defining folds
2025-03-31 13:14:37,510:INFO:Declaring metric variables
2025-03-31 13:14:37,510:INFO:Importing untrained model
2025-03-31 13:14:37,510:INFO:Declaring custom model
2025-03-31 13:14:37,511:INFO:Exponential Smoothing Imported successfully
2025-03-31 13:14:37,511:INFO:Cross validation set to False
2025-03-31 13:14:37,511:INFO:Fitting Model
2025-03-31 13:14:37,625:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2025-03-31 13:14:37,625:INFO:create_model() successfully completed......................................
2025-03-31 13:14:37,741:INFO:_master_model_container: 26
2025-03-31 13:14:37,741:INFO:_display_container: 2
2025-03-31 13:14:37,741:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2025-03-31 13:14:37,741:INFO:compare_models() successfully completed......................................
2025-03-31 13:14:37,759:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,759:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,760:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,887:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,887:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:37,888:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-03-31 13:14:39,335:INFO:Visual Rendered Successfully
2025-03-31 13:14:39,341:INFO:Initializing save_model()
2025-03-31 13:14:39,341:INFO:save_model(model=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), model_name=timeseries_forecast_model, prep_pipe_=ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))]), verbose=True, use_case=MLUsecase.TIME_SERIES, kwargs={})
2025-03-31 13:14:39,341:INFO:Adding model into prep_pipe
2025-03-31 13:14:39,352:INFO:timeseries_forecast_model.pkl saved in current working directory
2025-03-31 13:14:39,362:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ExponentialSmoothing(seasonal='mul',
                                                                                     sp=12,
                                                                                     trend='add'))]))])
2025-03-31 13:14:39,362:INFO:save_model() successfully completed......................................
2025-03-31 13:24:47,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:24:47,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:24:47,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:24:47,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:24:49,415:INFO:PyCaret ClusteringExperiment
2025-03-31 13:24:49,415:INFO:Logging name: cluster-default-name
2025-03-31 13:24:49,415:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-03-31 13:24:49,415:INFO:version 3.3.2
2025-03-31 13:24:49,415:INFO:Initializing setup()
2025-03-31 13:24:49,415:INFO:self.USI: 1911
2025-03-31 13:24:49,415:INFO:self._variable_keys: {'data', 'log_plots_param', 'html_param', '_available_plots', 'idx', 'exp_name_log', 'gpu_n_jobs_param', 'n_jobs_param', 'pipeline', 'logging_param', 'X', 'memory', 'gpu_param', 'exp_id', 'seed', 'USI', '_ml_usecase'}
2025-03-31 13:24:49,415:INFO:Checking environment
2025-03-31 13:24:49,415:INFO:python_version: 3.9.20
2025-03-31 13:24:49,415:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:24:49,415:INFO:machine: AMD64
2025-03-31 13:24:49,425:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:24:49,432:INFO:Memory: svmem(total=16885276672, available=3305869312, percent=80.4, used=13579407360, free=3305869312)
2025-03-31 13:24:49,432:INFO:Physical Core: 4
2025-03-31 13:24:49,432:INFO:Logical Core: 8
2025-03-31 13:24:49,432:INFO:Checking libraries
2025-03-31 13:24:49,432:INFO:System:
2025-03-31 13:24:49,432:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:24:49,432:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:24:49,432:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:24:49,433:INFO:PyCaret required dependencies:
2025-03-31 13:24:49,952:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:24:50,509:INFO:                 pip: 25.0
2025-03-31 13:24:50,509:INFO:          setuptools: 75.8.0
2025-03-31 13:24:50,509:INFO:             pycaret: 3.3.2
2025-03-31 13:24:50,509:INFO:             IPython: 8.15.0
2025-03-31 13:24:50,509:INFO:          ipywidgets: 8.1.5
2025-03-31 13:24:50,509:INFO:                tqdm: 4.67.1
2025-03-31 13:24:50,509:INFO:               numpy: 1.26.4
2025-03-31 13:24:50,509:INFO:              pandas: 2.1.4
2025-03-31 13:24:50,509:INFO:              jinja2: 3.1.5
2025-03-31 13:24:50,509:INFO:               scipy: 1.11.4
2025-03-31 13:24:50,509:INFO:              joblib: 1.3.2
2025-03-31 13:24:50,509:INFO:             sklearn: 1.4.2
2025-03-31 13:24:50,509:INFO:                pyod: 2.0.4
2025-03-31 13:24:50,509:INFO:            imblearn: 0.12.3
2025-03-31 13:24:50,509:INFO:   category_encoders: 2.6.4
2025-03-31 13:24:50,509:INFO:            lightgbm: 4.6.0
2025-03-31 13:24:50,509:INFO:               numba: 0.60.0
2025-03-31 13:24:50,509:INFO:            requests: 2.32.3
2025-03-31 13:24:50,509:INFO:          matplotlib: 3.7.5
2025-03-31 13:24:50,509:INFO:          scikitplot: 0.3.7
2025-03-31 13:24:50,509:INFO:         yellowbrick: 1.5
2025-03-31 13:24:50,510:INFO:              plotly: 5.24.1
2025-03-31 13:24:50,510:INFO:    plotly-resampler: Not installed
2025-03-31 13:24:50,510:INFO:             kaleido: 0.2.1
2025-03-31 13:24:50,510:INFO:           schemdraw: 0.15
2025-03-31 13:24:50,510:INFO:         statsmodels: 0.14.4
2025-03-31 13:24:50,510:INFO:              sktime: 0.26.0
2025-03-31 13:24:50,510:INFO:               tbats: 1.1.3
2025-03-31 13:24:50,510:INFO:            pmdarima: 2.0.4
2025-03-31 13:24:50,510:INFO:              psutil: 5.9.0
2025-03-31 13:24:50,510:INFO:          markupsafe: 3.0.2
2025-03-31 13:24:50,510:INFO:             pickle5: Not installed
2025-03-31 13:24:50,510:INFO:         cloudpickle: 3.0.0
2025-03-31 13:24:50,510:INFO:         deprecation: 2.1.0
2025-03-31 13:24:50,510:INFO:              xxhash: 3.5.0
2025-03-31 13:24:50,510:INFO:           wurlitzer: Not installed
2025-03-31 13:24:50,510:INFO:PyCaret optional dependencies:
2025-03-31 13:24:50,524:INFO:                shap: Not installed
2025-03-31 13:24:50,524:INFO:           interpret: Not installed
2025-03-31 13:24:50,524:INFO:                umap: Not installed
2025-03-31 13:24:50,524:INFO:     ydata_profiling: Not installed
2025-03-31 13:24:50,524:INFO:  explainerdashboard: Not installed
2025-03-31 13:24:50,524:INFO:             autoviz: Not installed
2025-03-31 13:24:50,524:INFO:           fairlearn: Not installed
2025-03-31 13:24:50,524:INFO:          deepchecks: Not installed
2025-03-31 13:24:50,524:INFO:             xgboost: Not installed
2025-03-31 13:24:50,524:INFO:            catboost: Not installed
2025-03-31 13:24:50,524:INFO:              kmodes: Not installed
2025-03-31 13:24:50,524:INFO:             mlxtend: Not installed
2025-03-31 13:24:50,524:INFO:       statsforecast: Not installed
2025-03-31 13:24:50,524:INFO:        tune_sklearn: Not installed
2025-03-31 13:24:50,524:INFO:                 ray: Not installed
2025-03-31 13:24:50,524:INFO:            hyperopt: Not installed
2025-03-31 13:24:50,524:INFO:              optuna: Not installed
2025-03-31 13:24:50,524:INFO:               skopt: Not installed
2025-03-31 13:24:50,524:INFO:              mlflow: Not installed
2025-03-31 13:24:50,524:INFO:              gradio: Not installed
2025-03-31 13:24:50,524:INFO:             fastapi: Not installed
2025-03-31 13:24:50,524:INFO:             uvicorn: Not installed
2025-03-31 13:24:50,524:INFO:              m2cgen: Not installed
2025-03-31 13:24:50,525:INFO:           evidently: Not installed
2025-03-31 13:24:50,525:INFO:               fugue: Not installed
2025-03-31 13:24:50,525:INFO:           streamlit: 1.20.0
2025-03-31 13:24:50,525:INFO:             prophet: Not installed
2025-03-31 13:24:50,525:INFO:None
2025-03-31 13:24:50,525:INFO:Set up data.
2025-03-31 13:24:50,528:INFO:Set up index.
2025-03-31 13:24:50,529:INFO:Assigning column types.
2025-03-31 13:24:50,531:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:24:50,531:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:24:50,531:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:24:50,532:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:24:50,532:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:24:50,532:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:24:50,532:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:24:50,532:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:24:50,533:INFO:Preparing preprocessing pipeline...
2025-03-31 13:24:50,533:INFO:Set up simple imputation.
2025-03-31 13:24:50,534:INFO:Set up encoding of categorical features.
2025-03-31 13:24:50,605:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:24:50,612:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:24:50,612:INFO:Creating final display dataframe.
2025-03-31 13:24:50,697:INFO:Setup _display_container:                  Description                 Value
0                 Session id                  2272
1        Original data shape             (224, 21)
2     Transformed data shape            (224, 244)
3           Numeric features                    20
4       Categorical features                     1
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                  CPU Jobs                    -1
12                   Use GPU                 False
13            Log Experiment                 False
14           Experiment Name  cluster-default-name
15                       USI                  1911
2025-03-31 13:24:50,699:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:24:50,699:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:24:50,699:INFO:setup() successfully completed in 1.31s...............
2025-03-31 13:24:50,700:INFO:Initializing create_model()
2025-03-31 13:24:50,700:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001A892AF7E20>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:24:50,700:INFO:Checking exceptions
2025-03-31 13:24:50,784:INFO:Importing untrained model
2025-03-31 13:24:50,785:INFO:K-Means Clustering Imported successfully
2025-03-31 13:24:50,787:INFO:Fitting Model
2025-03-31 13:24:51,029:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-03-31 13:24:51,043:INFO:KMeans(n_clusters=4, random_state=2272)
2025-03-31 13:24:51,044:INFO:create_models() successfully completed......................................
2025-03-31 13:24:51,044:INFO:Uploading results into container
2025-03-31 13:24:51,045:INFO:Uploading model into container now
2025-03-31 13:24:51,050:INFO:_master_model_container: 1
2025-03-31 13:24:51,050:INFO:_display_container: 2
2025-03-31 13:24:51,050:INFO:KMeans(n_clusters=4, random_state=2272)
2025-03-31 13:24:51,051:INFO:create_model() successfully completed......................................
2025-03-31 13:24:51,162:INFO:Initializing assign_model()
2025-03-31 13:24:51,162:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001A892AF7E20>, model=KMeans(n_clusters=4, random_state=2272), transformation=False, score=True, verbose=True)
2025-03-31 13:24:51,162:INFO:Checking exceptions
2025-03-31 13:24:51,162:INFO:Determining Trained Model
2025-03-31 13:24:51,162:INFO:Trained Model : K-Means Clustering
2025-03-31 13:24:51,162:INFO:Copying data
2025-03-31 13:24:51,163:INFO:(224, 22)
2025-03-31 13:24:51,163:INFO:assign_model() successfully completed......................................
2025-03-31 13:24:51,163:INFO:Initializing plot_model()
2025-03-31 13:24:51,163:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=2272), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001A892AF7E20>, system=True)
2025-03-31 13:24:51,164:INFO:Checking exceptions
2025-03-31 13:24:51,164:INFO:Preloading libraries
2025-03-31 13:24:51,164:INFO:Copying training dataset
2025-03-31 13:24:51,164:INFO:Plot type: cluster
2025-03-31 13:24:51,164:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:24:51,164:INFO:Initializing assign_model()
2025-03-31 13:24:51,164:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001A892AF7E20>, model=KMeans(n_clusters=4, random_state=2272), transformation=True, score=True, verbose=False)
2025-03-31 13:24:51,165:INFO:Checking exceptions
2025-03-31 13:24:51,165:INFO:Determining Trained Model
2025-03-31 13:24:51,165:INFO:Trained Model : K-Means Clustering
2025-03-31 13:24:51,165:INFO:Copying data
2025-03-31 13:24:51,250:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:24:51,251:INFO:(224, 245)
2025-03-31 13:24:51,251:INFO:assign_model() successfully completed......................................
2025-03-31 13:24:51,251:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:24:51,252:INFO:Fitting PCA()
2025-03-31 13:24:51,275:INFO:Sorting dataframe
2025-03-31 13:24:51,276:INFO:Rendering Visual
2025-03-31 13:24:52,507:INFO:Visual Rendered Successfully
2025-03-31 13:24:52,622:INFO:plot_model() successfully completed......................................
2025-03-31 13:24:52,627:INFO:Initializing save_model()
2025-03-31 13:24:52,628:INFO:save_model(model=KMeans(n_clusters=4, random_state=2272), model_name=saved_kmeans_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-03-31 13:24:52,628:INFO:Adding model into prep_pipe
2025-03-31 13:24:52,634:INFO:saved_kmeans_model.pkl saved in current working directory
2025-03-31 13:24:52,642:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', KMeans(n_clusters=4, random_state=2272))])
2025-03-31 13:24:52,642:INFO:save_model() successfully completed......................................
2025-03-31 13:26:22,697:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:26:22,697:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:26:22,697:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:26:22,697:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:26:23,999:INFO:PyCaret ClusteringExperiment
2025-03-31 13:26:23,999:INFO:Logging name: cluster-default-name
2025-03-31 13:26:23,999:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-03-31 13:26:23,999:INFO:version 3.3.2
2025-03-31 13:26:23,999:INFO:Initializing setup()
2025-03-31 13:26:23,999:INFO:self.USI: ed75
2025-03-31 13:26:23,999:INFO:self._variable_keys: {'gpu_n_jobs_param', 'pipeline', 'memory', 'gpu_param', '_ml_usecase', 'exp_id', 'logging_param', 'exp_name_log', 'log_plots_param', 'data', '_available_plots', 'X', 'seed', 'n_jobs_param', 'idx', 'USI', 'html_param'}
2025-03-31 13:26:23,999:INFO:Checking environment
2025-03-31 13:26:23,999:INFO:python_version: 3.9.20
2025-03-31 13:26:23,999:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:26:23,999:INFO:machine: AMD64
2025-03-31 13:26:24,008:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:26:24,015:INFO:Memory: svmem(total=16885276672, available=3751669760, percent=77.8, used=13133606912, free=3751669760)
2025-03-31 13:26:24,015:INFO:Physical Core: 4
2025-03-31 13:26:24,015:INFO:Logical Core: 8
2025-03-31 13:26:24,015:INFO:Checking libraries
2025-03-31 13:26:24,015:INFO:System:
2025-03-31 13:26:24,015:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:26:24,015:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:26:24,015:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:26:24,015:INFO:PyCaret required dependencies:
2025-03-31 13:26:24,596:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:26:25,183:INFO:                 pip: 25.0
2025-03-31 13:26:25,184:INFO:          setuptools: 75.8.0
2025-03-31 13:26:25,184:INFO:             pycaret: 3.3.2
2025-03-31 13:26:25,184:INFO:             IPython: 8.15.0
2025-03-31 13:26:25,184:INFO:          ipywidgets: 8.1.5
2025-03-31 13:26:25,184:INFO:                tqdm: 4.67.1
2025-03-31 13:26:25,184:INFO:               numpy: 1.26.4
2025-03-31 13:26:25,184:INFO:              pandas: 2.1.4
2025-03-31 13:26:25,184:INFO:              jinja2: 3.1.5
2025-03-31 13:26:25,184:INFO:               scipy: 1.11.4
2025-03-31 13:26:25,184:INFO:              joblib: 1.3.2
2025-03-31 13:26:25,184:INFO:             sklearn: 1.4.2
2025-03-31 13:26:25,184:INFO:                pyod: 2.0.4
2025-03-31 13:26:25,184:INFO:            imblearn: 0.12.3
2025-03-31 13:26:25,184:INFO:   category_encoders: 2.6.4
2025-03-31 13:26:25,184:INFO:            lightgbm: 4.6.0
2025-03-31 13:26:25,184:INFO:               numba: 0.60.0
2025-03-31 13:26:25,184:INFO:            requests: 2.32.3
2025-03-31 13:26:25,184:INFO:          matplotlib: 3.7.5
2025-03-31 13:26:25,184:INFO:          scikitplot: 0.3.7
2025-03-31 13:26:25,184:INFO:         yellowbrick: 1.5
2025-03-31 13:26:25,184:INFO:              plotly: 5.24.1
2025-03-31 13:26:25,184:INFO:    plotly-resampler: Not installed
2025-03-31 13:26:25,184:INFO:             kaleido: 0.2.1
2025-03-31 13:26:25,184:INFO:           schemdraw: 0.15
2025-03-31 13:26:25,184:INFO:         statsmodels: 0.14.4
2025-03-31 13:26:25,184:INFO:              sktime: 0.26.0
2025-03-31 13:26:25,184:INFO:               tbats: 1.1.3
2025-03-31 13:26:25,184:INFO:            pmdarima: 2.0.4
2025-03-31 13:26:25,184:INFO:              psutil: 5.9.0
2025-03-31 13:26:25,184:INFO:          markupsafe: 3.0.2
2025-03-31 13:26:25,184:INFO:             pickle5: Not installed
2025-03-31 13:26:25,184:INFO:         cloudpickle: 3.0.0
2025-03-31 13:26:25,184:INFO:         deprecation: 2.1.0
2025-03-31 13:26:25,184:INFO:              xxhash: 3.5.0
2025-03-31 13:26:25,184:INFO:           wurlitzer: Not installed
2025-03-31 13:26:25,185:INFO:PyCaret optional dependencies:
2025-03-31 13:26:25,200:INFO:                shap: Not installed
2025-03-31 13:26:25,200:INFO:           interpret: Not installed
2025-03-31 13:26:25,200:INFO:                umap: Not installed
2025-03-31 13:26:25,200:INFO:     ydata_profiling: Not installed
2025-03-31 13:26:25,200:INFO:  explainerdashboard: Not installed
2025-03-31 13:26:25,200:INFO:             autoviz: Not installed
2025-03-31 13:26:25,200:INFO:           fairlearn: Not installed
2025-03-31 13:26:25,200:INFO:          deepchecks: Not installed
2025-03-31 13:26:25,200:INFO:             xgboost: Not installed
2025-03-31 13:26:25,200:INFO:            catboost: Not installed
2025-03-31 13:26:25,200:INFO:              kmodes: Not installed
2025-03-31 13:26:25,200:INFO:             mlxtend: Not installed
2025-03-31 13:26:25,200:INFO:       statsforecast: Not installed
2025-03-31 13:26:25,200:INFO:        tune_sklearn: Not installed
2025-03-31 13:26:25,200:INFO:                 ray: Not installed
2025-03-31 13:26:25,200:INFO:            hyperopt: Not installed
2025-03-31 13:26:25,200:INFO:              optuna: Not installed
2025-03-31 13:26:25,200:INFO:               skopt: Not installed
2025-03-31 13:26:25,200:INFO:              mlflow: Not installed
2025-03-31 13:26:25,200:INFO:              gradio: Not installed
2025-03-31 13:26:25,200:INFO:             fastapi: Not installed
2025-03-31 13:26:25,200:INFO:             uvicorn: Not installed
2025-03-31 13:26:25,200:INFO:              m2cgen: Not installed
2025-03-31 13:26:25,200:INFO:           evidently: Not installed
2025-03-31 13:26:25,200:INFO:               fugue: Not installed
2025-03-31 13:26:25,200:INFO:           streamlit: 1.20.0
2025-03-31 13:26:25,200:INFO:             prophet: Not installed
2025-03-31 13:26:25,200:INFO:None
2025-03-31 13:26:25,200:INFO:Set up data.
2025-03-31 13:26:25,204:INFO:Set up index.
2025-03-31 13:26:25,204:INFO:Assigning column types.
2025-03-31 13:26:25,208:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:26:25,209:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:26:25,209:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:26:25,209:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:26:25,209:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:26:25,209:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:26:25,209:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:26:25,210:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:26:25,212:INFO:Preparing preprocessing pipeline...
2025-03-31 13:26:25,212:INFO:Set up simple imputation.
2025-03-31 13:26:25,214:INFO:Set up encoding of categorical features.
2025-03-31 13:26:25,283:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:26:25,290:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:26:25,290:INFO:Creating final display dataframe.
2025-03-31 13:26:25,373:INFO:Setup _display_container:                  Description                 Value
0                 Session id                  8738
1        Original data shape             (224, 21)
2     Transformed data shape            (224, 244)
3           Numeric features                    20
4       Categorical features                     1
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                  CPU Jobs                    -1
12                   Use GPU                 False
13            Log Experiment                 False
14           Experiment Name  cluster-default-name
15                       USI                  ed75
2025-03-31 13:26:25,376:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:26:25,376:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:26:25,376:INFO:setup() successfully completed in 1.38s...............
2025-03-31 13:26:25,376:INFO:Initializing create_model()
2025-03-31 13:26:25,376:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BC530B7E20>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:26:25,376:INFO:Checking exceptions
2025-03-31 13:26:25,459:INFO:Importing untrained model
2025-03-31 13:26:25,459:INFO:K-Means Clustering Imported successfully
2025-03-31 13:26:25,462:INFO:Fitting Model
2025-03-31 13:26:25,685:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-03-31 13:26:25,703:INFO:KMeans(n_clusters=4, random_state=8738)
2025-03-31 13:26:25,703:INFO:create_models() successfully completed......................................
2025-03-31 13:26:25,703:INFO:Uploading results into container
2025-03-31 13:26:25,703:INFO:Uploading model into container now
2025-03-31 13:26:25,710:INFO:_master_model_container: 1
2025-03-31 13:26:25,710:INFO:_display_container: 2
2025-03-31 13:26:25,710:INFO:KMeans(n_clusters=4, random_state=8738)
2025-03-31 13:26:25,710:INFO:create_model() successfully completed......................................
2025-03-31 13:26:25,826:INFO:Initializing assign_model()
2025-03-31 13:26:25,826:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BC530B7E20>, model=KMeans(n_clusters=4, random_state=8738), transformation=False, score=True, verbose=True)
2025-03-31 13:26:25,826:INFO:Checking exceptions
2025-03-31 13:26:25,826:INFO:Determining Trained Model
2025-03-31 13:26:25,826:INFO:Trained Model : K-Means Clustering
2025-03-31 13:26:25,826:INFO:Copying data
2025-03-31 13:26:25,827:INFO:(224, 22)
2025-03-31 13:26:25,827:INFO:assign_model() successfully completed......................................
2025-03-31 13:26:25,828:INFO:Initializing plot_model()
2025-03-31 13:26:25,828:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=8738), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BC530B7E20>, system=True)
2025-03-31 13:26:25,828:INFO:Checking exceptions
2025-03-31 13:26:25,828:INFO:Preloading libraries
2025-03-31 13:26:25,829:INFO:Copying training dataset
2025-03-31 13:26:25,829:INFO:Plot type: cluster
2025-03-31 13:26:25,829:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:26:25,829:INFO:Initializing assign_model()
2025-03-31 13:26:25,829:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001BC530B7E20>, model=KMeans(n_clusters=4, random_state=8738), transformation=True, score=True, verbose=False)
2025-03-31 13:26:25,829:INFO:Checking exceptions
2025-03-31 13:26:25,829:INFO:Determining Trained Model
2025-03-31 13:26:25,829:INFO:Trained Model : K-Means Clustering
2025-03-31 13:26:25,829:INFO:Copying data
2025-03-31 13:26:25,920:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:26:25,921:INFO:(224, 245)
2025-03-31 13:26:25,921:INFO:assign_model() successfully completed......................................
2025-03-31 13:26:25,921:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:26:25,923:INFO:Fitting PCA()
2025-03-31 13:26:25,945:INFO:Sorting dataframe
2025-03-31 13:26:25,946:INFO:Rendering Visual
2025-03-31 13:26:27,229:INFO:Visual Rendered Successfully
2025-03-31 13:26:27,347:INFO:plot_model() successfully completed......................................
2025-03-31 13:26:27,351:INFO:Initializing save_model()
2025-03-31 13:26:27,352:INFO:save_model(model=KMeans(n_clusters=4, random_state=8738), model_name=saved_kmeans_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-03-31 13:26:27,352:INFO:Adding model into prep_pipe
2025-03-31 13:26:27,358:INFO:saved_kmeans_model.pkl saved in current working directory
2025-03-31 13:26:27,364:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', KMeans(n_clusters=4, random_state=8738))])
2025-03-31 13:26:27,364:INFO:save_model() successfully completed......................................
2025-03-31 13:29:34,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:29:34,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:29:34,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:29:34,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-31 13:29:36,046:INFO:PyCaret ClusteringExperiment
2025-03-31 13:29:36,046:INFO:Logging name: cluster-default-name
2025-03-31 13:29:36,046:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-03-31 13:29:36,046:INFO:version 3.3.2
2025-03-31 13:29:36,046:INFO:Initializing setup()
2025-03-31 13:29:36,046:INFO:self.USI: 4b28
2025-03-31 13:29:36,046:INFO:self._variable_keys: {'logging_param', '_ml_usecase', '_available_plots', 'memory', 'seed', 'data', 'USI', 'gpu_n_jobs_param', 'log_plots_param', 'html_param', 'gpu_param', 'pipeline', 'X', 'n_jobs_param', 'idx', 'exp_id', 'exp_name_log'}
2025-03-31 13:29:36,048:INFO:Checking environment
2025-03-31 13:29:36,048:INFO:python_version: 3.9.20
2025-03-31 13:29:36,048:INFO:python_build: ('main', 'Oct  3 2024 07:38:01')
2025-03-31 13:29:36,048:INFO:machine: AMD64
2025-03-31 13:29:36,062:INFO:platform: Windows-10-10.0.19045-SP0
2025-03-31 13:29:36,070:INFO:Memory: svmem(total=16885276672, available=3924336640, percent=76.8, used=12960940032, free=3924336640)
2025-03-31 13:29:36,070:INFO:Physical Core: 4
2025-03-31 13:29:36,070:INFO:Logical Core: 8
2025-03-31 13:29:36,070:INFO:Checking libraries
2025-03-31 13:29:36,070:INFO:System:
2025-03-31 13:29:36,070:INFO:    python: 3.9.20 (main, Oct  3 2024, 07:38:01) [MSC v.1929 64 bit (AMD64)]
2025-03-31 13:29:36,070:INFO:executable: C:\Users\moreilly1\Anaconda3\python.exe
2025-03-31 13:29:36,070:INFO:   machine: Windows-10-10.0.19045-SP0
2025-03-31 13:29:36,070:INFO:PyCaret required dependencies:
2025-03-31 13:29:36,756:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\dask\dataframe\__init__.py:31: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2025-03-31 13:29:37,528:INFO:                 pip: 25.0
2025-03-31 13:29:37,528:INFO:          setuptools: 75.8.0
2025-03-31 13:29:37,528:INFO:             pycaret: 3.3.2
2025-03-31 13:29:37,528:INFO:             IPython: 8.15.0
2025-03-31 13:29:37,528:INFO:          ipywidgets: 8.1.5
2025-03-31 13:29:37,528:INFO:                tqdm: 4.67.1
2025-03-31 13:29:37,528:INFO:               numpy: 1.26.4
2025-03-31 13:29:37,528:INFO:              pandas: 2.1.4
2025-03-31 13:29:37,528:INFO:              jinja2: 3.1.5
2025-03-31 13:29:37,528:INFO:               scipy: 1.11.4
2025-03-31 13:29:37,528:INFO:              joblib: 1.3.2
2025-03-31 13:29:37,528:INFO:             sklearn: 1.4.2
2025-03-31 13:29:37,529:INFO:                pyod: 2.0.4
2025-03-31 13:29:37,529:INFO:            imblearn: 0.12.3
2025-03-31 13:29:37,529:INFO:   category_encoders: 2.6.4
2025-03-31 13:29:37,529:INFO:            lightgbm: 4.6.0
2025-03-31 13:29:37,529:INFO:               numba: 0.60.0
2025-03-31 13:29:37,529:INFO:            requests: 2.32.3
2025-03-31 13:29:37,529:INFO:          matplotlib: 3.7.5
2025-03-31 13:29:37,529:INFO:          scikitplot: 0.3.7
2025-03-31 13:29:37,529:INFO:         yellowbrick: 1.5
2025-03-31 13:29:37,529:INFO:              plotly: 5.24.1
2025-03-31 13:29:37,529:INFO:    plotly-resampler: Not installed
2025-03-31 13:29:37,529:INFO:             kaleido: 0.2.1
2025-03-31 13:29:37,529:INFO:           schemdraw: 0.15
2025-03-31 13:29:37,529:INFO:         statsmodels: 0.14.4
2025-03-31 13:29:37,529:INFO:              sktime: 0.26.0
2025-03-31 13:29:37,529:INFO:               tbats: 1.1.3
2025-03-31 13:29:37,529:INFO:            pmdarima: 2.0.4
2025-03-31 13:29:37,529:INFO:              psutil: 5.9.0
2025-03-31 13:29:37,529:INFO:          markupsafe: 3.0.2
2025-03-31 13:29:37,529:INFO:             pickle5: Not installed
2025-03-31 13:29:37,529:INFO:         cloudpickle: 3.0.0
2025-03-31 13:29:37,529:INFO:         deprecation: 2.1.0
2025-03-31 13:29:37,529:INFO:              xxhash: 3.5.0
2025-03-31 13:29:37,529:INFO:           wurlitzer: Not installed
2025-03-31 13:29:37,529:INFO:PyCaret optional dependencies:
2025-03-31 13:29:37,546:INFO:                shap: Not installed
2025-03-31 13:29:37,546:INFO:           interpret: Not installed
2025-03-31 13:29:37,546:INFO:                umap: Not installed
2025-03-31 13:29:37,546:INFO:     ydata_profiling: Not installed
2025-03-31 13:29:37,546:INFO:  explainerdashboard: Not installed
2025-03-31 13:29:37,546:INFO:             autoviz: Not installed
2025-03-31 13:29:37,546:INFO:           fairlearn: Not installed
2025-03-31 13:29:37,546:INFO:          deepchecks: Not installed
2025-03-31 13:29:37,546:INFO:             xgboost: Not installed
2025-03-31 13:29:37,546:INFO:            catboost: Not installed
2025-03-31 13:29:37,546:INFO:              kmodes: Not installed
2025-03-31 13:29:37,546:INFO:             mlxtend: Not installed
2025-03-31 13:29:37,546:INFO:       statsforecast: Not installed
2025-03-31 13:29:37,546:INFO:        tune_sklearn: Not installed
2025-03-31 13:29:37,546:INFO:                 ray: Not installed
2025-03-31 13:29:37,546:INFO:            hyperopt: Not installed
2025-03-31 13:29:37,547:INFO:              optuna: Not installed
2025-03-31 13:29:37,547:INFO:               skopt: Not installed
2025-03-31 13:29:37,547:INFO:              mlflow: Not installed
2025-03-31 13:29:37,547:INFO:              gradio: Not installed
2025-03-31 13:29:37,547:INFO:             fastapi: Not installed
2025-03-31 13:29:37,547:INFO:             uvicorn: Not installed
2025-03-31 13:29:37,547:INFO:              m2cgen: Not installed
2025-03-31 13:29:37,547:INFO:           evidently: Not installed
2025-03-31 13:29:37,547:INFO:               fugue: Not installed
2025-03-31 13:29:37,547:INFO:           streamlit: 1.20.0
2025-03-31 13:29:37,547:INFO:             prophet: Not installed
2025-03-31 13:29:37,547:INFO:None
2025-03-31 13:29:37,547:INFO:Set up data.
2025-03-31 13:29:37,552:INFO:Set up index.
2025-03-31 13:29:37,552:INFO:Assigning column types.
2025-03-31 13:29:37,555:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-03-31 13:29:37,556:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:29:37,556:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:29:37,556:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-03-31 13:29:37,556:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:29:37,556:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-03-31 13:29:37,556:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:29:37,556:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:29:37,559:INFO:Preparing preprocessing pipeline...
2025-03-31 13:29:37,559:INFO:Set up simple imputation.
2025-03-31 13:29:37,561:INFO:Set up encoding of categorical features.
2025-03-31 13:29:37,649:INFO:Finished creating preprocessing pipeline.
2025-03-31 13:29:37,659:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-03-31 13:29:37,659:INFO:Creating final display dataframe.
2025-03-31 13:29:37,760:INFO:Setup _display_container:                  Description                 Value
0                 Session id                  3325
1        Original data shape             (224, 21)
2     Transformed data shape            (224, 244)
3           Numeric features                    20
4       Categorical features                     1
5                 Preprocess                  True
6            Imputation type                simple
7         Numeric imputation                  mean
8     Categorical imputation                  mode
9   Maximum one-hot encoding                    -1
10           Encoding method                  None
11                  CPU Jobs                    -1
12                   Use GPU                 False
13            Log Experiment                 False
14           Experiment Name  cluster-default-name
15                       USI                  4b28
2025-03-31 13:29:37,764:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:29:37,764:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-31 13:29:37,765:INFO:setup() successfully completed in 1.72s...............
2025-03-31 13:29:37,765:INFO:Initializing create_model()
2025-03-31 13:29:37,765:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000017DD7127E20>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-03-31 13:29:37,765:INFO:Checking exceptions
2025-03-31 13:29:37,871:INFO:Importing untrained model
2025-03-31 13:29:37,871:INFO:K-Means Clustering Imported successfully
2025-03-31 13:29:37,874:INFO:Fitting Model
2025-03-31 13:29:38,120:WARNING:C:\Users\moreilly1\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-03-31 13:29:38,138:INFO:KMeans(n_clusters=4, random_state=3325)
2025-03-31 13:29:38,138:INFO:create_models() successfully completed......................................
2025-03-31 13:29:38,138:INFO:Uploading results into container
2025-03-31 13:29:38,139:INFO:Uploading model into container now
2025-03-31 13:29:38,147:INFO:_master_model_container: 1
2025-03-31 13:29:38,147:INFO:_display_container: 2
2025-03-31 13:29:38,147:INFO:KMeans(n_clusters=4, random_state=3325)
2025-03-31 13:29:38,147:INFO:create_model() successfully completed......................................
2025-03-31 13:29:38,271:INFO:Initializing assign_model()
2025-03-31 13:29:38,271:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000017DD7127E20>, model=KMeans(n_clusters=4, random_state=3325), transformation=False, score=True, verbose=True)
2025-03-31 13:29:38,271:INFO:Checking exceptions
2025-03-31 13:29:38,271:INFO:Determining Trained Model
2025-03-31 13:29:38,271:INFO:Trained Model : K-Means Clustering
2025-03-31 13:29:38,271:INFO:Copying data
2025-03-31 13:29:38,272:INFO:(224, 22)
2025-03-31 13:29:38,272:INFO:assign_model() successfully completed......................................
2025-03-31 13:29:38,273:INFO:Initializing plot_model()
2025-03-31 13:29:38,273:INFO:plot_model(plot=cluster, fold=None, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=3325), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000017DD7127E20>, system=True)
2025-03-31 13:29:38,273:INFO:Checking exceptions
2025-03-31 13:29:38,274:INFO:Preloading libraries
2025-03-31 13:29:38,274:INFO:Copying training dataset
2025-03-31 13:29:38,274:INFO:Plot type: cluster
2025-03-31 13:29:38,274:INFO:SubProcess assign_model() called ==================================
2025-03-31 13:29:38,274:INFO:Initializing assign_model()
2025-03-31 13:29:38,274:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x0000017DD7127E20>, model=KMeans(n_clusters=4, random_state=3325), transformation=True, score=True, verbose=False)
2025-03-31 13:29:38,274:INFO:Checking exceptions
2025-03-31 13:29:38,274:INFO:Determining Trained Model
2025-03-31 13:29:38,274:INFO:Trained Model : K-Means Clustering
2025-03-31 13:29:38,275:INFO:Copying data
2025-03-31 13:29:38,375:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2025-03-31 13:29:38,376:INFO:(224, 245)
2025-03-31 13:29:38,376:INFO:assign_model() successfully completed......................................
2025-03-31 13:29:38,376:INFO:SubProcess assign_model() end ==================================
2025-03-31 13:29:38,377:INFO:Fitting PCA()
2025-03-31 13:29:38,402:INFO:Sorting dataframe
2025-03-31 13:29:38,403:INFO:Rendering Visual
2025-03-31 13:29:39,918:INFO:Visual Rendered Successfully
2025-03-31 13:29:40,039:INFO:plot_model() successfully completed......................................
2025-03-31 13:29:40,045:INFO:Initializing save_model()
2025-03-31 13:29:40,045:INFO:save_model(model=KMeans(n_clusters=4, random_state=3325), model_name=saved_kmeans_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOREIL~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-03-31 13:29:40,045:INFO:Adding model into prep_pipe
2025-03-31 13:29:40,056:INFO:saved_kmeans_model.pkl saved in current working directory
2025-03-31 13:29:40,065:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['1995', '1996', '1997', '1998',
                                             '1999', '2000', '2001', '2002',
                                             '2003', '2004', '2005', '2006',
                                             '2007', '2008', '2009', '2010',
                                             '2011', '2012', '2013', '2014'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country Name'],
                                    transformer=OneHotEncoder(cols=['Country '
                                                                    'Name'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', KMeans(n_clusters=4, random_state=3325))])
2025-03-31 13:29:40,065:INFO:save_model() successfully completed......................................
